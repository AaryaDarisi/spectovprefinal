{
  "version": 3,
  "sources": ["../../three/examples/jsm/nodes/core/constants.js", "../../three/examples/jsm/nodes/core/NodeUtils.js", "../../three/examples/jsm/nodes/core/Node.js", "../../three/examples/jsm/nodes/core/InputNode.js", "../../three/examples/jsm/nodes/core/UniformNode.js", "../../three/examples/jsm/nodes/core/ArrayUniformNode.js", "../../three/examples/jsm/nodes/core/VaryingNode.js", "../../three/examples/jsm/nodes/core/AttributeNode.js", "../../three/examples/jsm/nodes/core/BypassNode.js", "../../three/examples/jsm/nodes/core/NodeCache.js", "../../three/examples/jsm/nodes/core/CacheNode.js", "../../three/examples/jsm/nodes/core/CodeNode.js", "../../three/examples/jsm/nodes/core/ConstNode.js", "../../three/examples/jsm/nodes/core/ContextNode.js", "../../three/examples/jsm/nodes/core/ExpressionNode.js", "../../three/examples/jsm/nodes/core/TempNode.js", "../../three/examples/jsm/nodes/core/FunctionCallNode.js", "../../three/examples/jsm/nodes/core/FunctionNode.js", "../../three/examples/jsm/nodes/core/InstanceIndexNode.js", "../../three/examples/jsm/nodes/core/LightingModel.js", "../../three/examples/jsm/nodes/core/NodeAttribute.js", "../../three/examples/jsm/nodes/core/NodeUniform.js", "../../three/examples/jsm/nodes/core/NodeVar.js", "../../three/examples/jsm/nodes/core/NodeVarying.js", "../../three/examples/jsm/nodes/core/NodeCode.js", "../../three/examples/jsm/nodes/core/NodeKeywords.js", "../../three/examples/jsm/nodes/shadernode/ShaderNodeElements.js", "../../three/examples/jsm/nodes/accessors/UVNode.js", "../../three/examples/jsm/nodes/accessors/TextureNode.js", "../../three/examples/jsm/nodes/core/PropertyNode.js", "../../three/examples/jsm/nodes/math/OperatorNode.js", "../../three/examples/jsm/nodes/core/VarNode.js", "../../three/examples/jsm/nodes/utils/SplitNode.js", "../../three/examples/jsm/nodes/math/MathNode.js", "../../three/examples/jsm/nodes/accessors/Object3DNode.js", "../../three/examples/jsm/nodes/accessors/ModelNode.js", "../../three/examples/jsm/nodes/accessors/CameraNode.js", "../../three/examples/jsm/nodes/accessors/NormalNode.js", "../../three/examples/jsm/nodes/accessors/TangentNode.js", "../../three/examples/jsm/nodes/accessors/BitangentNode.js", "../../three/examples/jsm/nodes/accessors/BufferNode.js", "../../three/examples/jsm/nodes/utils/JoinNode.js", "../../three/examples/jsm/nodes/accessors/ReferenceNode.js", "../../three/examples/jsm/nodes/accessors/MaterialReferenceNode.js", "../../three/examples/jsm/nodes/accessors/MaterialNode.js", "../../three/examples/jsm/nodes/accessors/PositionNode.js", "../../three/examples/jsm/nodes/accessors/ModelViewProjectionNode.js", "../../three/examples/jsm/nodes/accessors/PointUVNode.js", "../../three/examples/jsm/nodes/accessors/StorageBufferNode.js", "../../three/examples/jsm/nodes/accessors/UserDataNode.js", "../../three/examples/jsm/nodes/display/FrontFacingNode.js", "../../three/examples/jsm/nodes/gpgpu/ComputeNode.js", "../../three/examples/jsm/nodes/math/CondNode.js", "../../three/examples/jsm/nodes/utils/ArrayElementNode.js", "../../three/examples/jsm/nodes/utils/ConvertNode.js", "../../three/examples/jsm/nodes/utils/DiscardNode.js", "../../three/examples/jsm/nodes/utils/MaxMipLevelNode.js", "../../three/examples/jsm/nodes/core/StackNode.js", "../../three/examples/jsm/nodes/shadernode/ShaderNode.js", "../../three/examples/jsm/nodes/shadernode/ShaderNodeBaseElements.js", "../../three/examples/jsm/nodes/accessors/ReflectVectorNode.js", "../../three/examples/jsm/nodes/accessors/CubeTextureNode.js", "../../three/examples/jsm/nodes/accessors/InstanceNode.js", "../../three/examples/jsm/nodes/accessors/SkinningNode.js", "../../three/examples/jsm/nodes/display/NormalMapNode.js", "../../three/examples/jsm/nodes/accessors/ExtendedMaterialNode.js", "../../three/examples/jsm/nodes/display/BlendModeNode.js", "../../three/examples/jsm/nodes/display/ColorAdjustmentNode.js", "../../three/examples/jsm/nodes/display/ColorSpaceNode.js", "../../three/examples/jsm/nodes/display/PosterizeNode.js", "../../three/examples/jsm/nodes/display/ToneMappingNode.js", "../../three/examples/jsm/nodes/display/ViewportNode.js", "../../three/examples/jsm/nodes/lighting/LightingNode.js", "../../three/examples/jsm/nodes/lighting/AnalyticLightNode.js", "../../three/examples/jsm/nodes/lighting/LightsNode.js", "../../three/examples/jsm/nodes/lighting/LightingContextNode.js", "../../three/examples/jsm/nodes/utils/EquirectUVNode.js", "../../three/examples/jsm/nodes/utils/MatcapUVNode.js", "../../three/examples/jsm/nodes/utils/TimerNode.js", "../../three/examples/jsm/nodes/utils/OscNode.js", "../../three/examples/jsm/nodes/utils/RemapNode.js", "../../three/examples/jsm/nodes/utils/RotateUVNode.js", "../../three/examples/jsm/nodes/utils/SpecularMIPLevelNode.js", "../../three/examples/jsm/nodes/utils/SpriteSheetUVNode.js", "../../three/examples/jsm/nodes/utils/TriplanarTexturesNode.js", "../../three/examples/jsm/nodes/geometry/RangeNode.js", "../../three/examples/jsm/nodes/procedural/CheckerNode.js", "../../three/examples/jsm/nodes/fog/FogNode.js", "../../three/examples/jsm/nodes/fog/FogRangeNode.js", "../../three/examples/jsm/nodes/fog/FogExp2Node.js", "../../three/examples/jsm/nodes/functions/BSDF/F_Schlick.js", "../../three/examples/jsm/nodes/functions/BSDF/BRDF_BlinnPhong.js", "../../three/examples/jsm/nodes/functions/BSDF/V_GGX_SmithCorrelated.js", "../../three/examples/jsm/nodes/functions/BSDF/D_GGX.js", "../../three/examples/jsm/nodes/functions/BSDF/BRDF_GGX.js", "../../three/examples/jsm/nodes/functions/BSDF/BRDF_Lambert.js", "../../three/examples/jsm/nodes/functions/BSDF/DFGApprox.js", "../../three/examples/jsm/nodes/functions/light/getDistanceAttenuation.js", "../../three/examples/jsm/nodes/functions/material/getGeometryRoughness.js", "../../three/examples/jsm/nodes/functions/material/getRoughness.js", "../../three/examples/jsm/nodes/functions/PhongLightingModel.js", "../../three/examples/jsm/nodes/functions/PhysicalLightingModel.js", "../../three/examples/jsm/nodes/core/NodeBuilder.js", "../../three/examples/jsm/nodes/core/NodeFrame.js", "../../three/examples/jsm/nodes/core/NodeFunctionInput.js", "../../three/examples/jsm/nodes/lighting/PointLightNode.js", "../../three/examples/jsm/nodes/functions/light/getDirectionVector.js", "../../three/examples/jsm/nodes/lighting/DirectionalLightNode.js", "../../three/examples/jsm/nodes/lighting/SpotLightNode.js", "../../three/examples/jsm/lights/IESSpotLight.js", "../../three/examples/jsm/nodes/lighting/IESSpotLightNode.js", "../../three/examples/jsm/nodes/lighting/AmbientLightNode.js", "../../three/examples/jsm/nodes/lighting/HemisphereLightNode.js", "../../three/examples/jsm/nodes/lighting/EnvironmentNode.js", "../../three/examples/jsm/nodes/lighting/AONode.js", "../../three/examples/jsm/nodes/loaders/NodeLoader.js", "../../three/examples/jsm/nodes/materials/NodeMaterial.js", "../../three/examples/jsm/nodes/materials/LineBasicNodeMaterial.js", "../../three/examples/jsm/nodes/materials/MeshBasicNodeMaterial.js", "../../three/examples/jsm/nodes/materials/MeshPhongNodeMaterial.js", "../../three/examples/jsm/nodes/materials/MeshStandardNodeMaterial.js", "../../three/examples/jsm/nodes/materials/MeshPhysicalNodeMaterial.js", "../../three/examples/jsm/nodes/materials/PointsNodeMaterial.js", "../../three/examples/jsm/nodes/materials/SpriteNodeMaterial.js", "../../three/examples/jsm/nodes/materials/Materials.js", "../../three/examples/jsm/nodes/loaders/NodeMaterialLoader.js", "../../three/examples/jsm/nodes/loaders/NodeObjectLoader.js", "../../three/examples/jsm/nodes/core/NodeParser.js", "../../three/examples/jsm/nodes/core/NodeFunction.js", "../../three/examples/jsm/nodes/parsers/WGSLNodeFunction.js", "../../three/examples/jsm/nodes/parsers/WGSLNodeParser.js", "../../three/examples/jsm/nodes/parsers/GLSLNodeFunction.js", "../../three/examples/jsm/nodes/parsers/GLSLNodeParser.js", "../../three/examples/jsm/nodes/materialx/lib/mx_noise.js", "../../three/examples/jsm/nodes/materialx/lib/mx_hsv.js", "../../three/examples/jsm/nodes/materialx/lib/mx_transform_color.js", "../../three/examples/jsm/nodes/materialx/MaterialXNodes.js", "../../three/examples/jsm/nodes/Nodes.js"],
  "sourcesContent": ["export const NodeShaderStage = {\r\n\tVERTEX: 'vertex',\r\n\tFRAGMENT: 'fragment'\r\n};\r\n\r\nexport const NodeUpdateType = {\r\n\tNONE: 'none',\r\n\tFRAME: 'frame',\r\n\tOBJECT: 'object'\r\n};\r\n\r\nexport const NodeType = {\r\n\tBOOLEAN: 'bool',\r\n\tINTEGER: 'int',\r\n\tFLOAT: 'float',\r\n\tVECTOR2: 'vec2',\r\n\tVECTOR3: 'vec3',\r\n\tVECTOR4: 'vec4',\r\n\tMATRIX3: 'mat3',\r\n\tMATRIX4: 'mat4'\r\n};\r\n", "import { Color, Matrix3, Matrix4, Vector2, Vector3, Vector4 } from 'three';\r\n\r\nexport const getCacheKey = ( object ) => {\r\n\r\n\tlet cacheKey = '{';\r\n\r\n\tif ( object.isNode === true ) {\r\n\r\n\t\tcacheKey += `uuid:\"${ object.uuid }\",`;\r\n\r\n\t}\r\n\r\n\tfor ( const property of getNodesKeys( object ) ) {\r\n\r\n\t\tcacheKey += `${ property }:${ object[ property ].getCacheKey() },`;\r\n\r\n\t}\r\n\r\n\tcacheKey += '}';\r\n\r\n\treturn cacheKey;\r\n\r\n};\r\n\r\nexport const getNodesKeys = ( object ) => {\r\n\r\n\tconst props = [];\r\n\r\n\tfor ( const name in object ) {\r\n\r\n\t\tconst value = object[ name ];\r\n\r\n\t\tif ( value && value.isNode === true ) {\r\n\r\n\t\t\tprops.push( name );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn props;\r\n\r\n};\r\n\r\nexport const getValueType = ( value ) => {\r\n\r\n\tif ( typeof value === 'number' ) {\r\n\r\n\t\treturn 'float';\r\n\r\n\t} else if ( typeof value === 'boolean' ) {\r\n\r\n\t\treturn 'bool';\r\n\r\n\t} else if ( value && value.isVector2 === true ) {\r\n\r\n\t\treturn 'vec2';\r\n\r\n\t} else if ( value && value.isVector3 === true ) {\r\n\r\n\t\treturn 'vec3';\r\n\r\n\t} else if ( value && value.isVector4 === true ) {\r\n\r\n\t\treturn 'vec4';\r\n\r\n\t} else if ( value && value.isMatrix3 === true ) {\r\n\r\n\t\treturn 'mat3';\r\n\r\n\t} else if ( value && value.isMatrix4 === true ) {\r\n\r\n\t\treturn 'mat4';\r\n\r\n\t} else if ( value && value.isColor === true ) {\r\n\r\n\t\treturn 'color';\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n};\r\n\r\nexport const getValueFromType = ( type, ...params ) => {\r\n\r\n\tconst last4 = type ? type.slice( - 4 ) : undefined;\r\n\r\n\tif ( type === 'color' ) {\r\n\r\n\t\treturn new Color( ...params );\r\n\r\n\t} else if ( last4 === 'vec2' ) {\r\n\r\n\t\treturn new Vector2( ...params );\r\n\r\n\t} else if ( last4 === 'vec3' ) {\r\n\r\n\t\treturn new Vector3( ...params );\r\n\r\n\t} else if ( last4 === 'vec4' ) {\r\n\r\n\t\treturn new Vector4( ...params );\r\n\r\n\t} else if ( last4 === 'mat3' ) {\r\n\r\n\t\treturn new Matrix3( ...params );\r\n\r\n\t} else if ( last4 === 'mat4' ) {\r\n\r\n\t\treturn new Matrix4( ...params );\r\n\r\n\t} else if ( type === 'bool' ) {\r\n\r\n\t\treturn params[ 0 ] || false;\r\n\r\n\t} else if ( ( type === 'float' ) || ( type === 'int' ) || ( type === 'uint' ) ) {\r\n\r\n\t\treturn params[ 0 ] || 0;\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n};\r\n", "import { NodeUpdateType } from './constants.js';\r\nimport { getNodesKeys, getCacheKey } from './NodeUtils.js';\r\nimport { MathUtils } from 'three';\r\n\r\nlet _nodeId = 0;\r\n\r\nclass Node {\r\n\r\n\tconstructor( nodeType = null ) {\r\n\r\n\t\tthis.isNode = true;\r\n\r\n\t\tthis.nodeType = nodeType;\r\n\r\n\t\tthis.updateType = NodeUpdateType.NONE;\r\n\r\n\t\tthis.uuid = MathUtils.generateUUID();\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: _nodeId ++ } );\r\n\r\n\t}\r\n\r\n\tget type() {\r\n\r\n\t\treturn this.constructor.name;\r\n\r\n\t}\r\n\r\n\tisGlobal( /*builder*/ ) {\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tgetChildren() {\r\n\r\n\t\tconst children = [];\r\n\r\n\t\tfor ( const property in this ) {\r\n\r\n\t\t\tconst object = this[ property ];\r\n\r\n\t\t\tif ( Array.isArray( object ) === true ) {\r\n\r\n\t\t\t\tfor ( const child of object ) {\r\n\r\n\t\t\t\t\tif ( child && child.isNode === true ) {\r\n\r\n\t\t\t\t\t\tchildren.push( child );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object && object.isNode === true ) {\r\n\r\n\t\t\t\tchildren.push( object );\r\n\r\n\t\t\t} else if ( typeof object === 'object' ) {\r\n\r\n\t\t\t\tfor ( const property in object ) {\r\n\r\n\t\t\t\t\tconst child = object[ property ];\r\n\r\n\t\t\t\t\tif ( child && child.isNode === true ) {\r\n\r\n\t\t\t\t\t\tchildren.push( child );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn children;\r\n\r\n\t}\r\n\r\n\tgetCacheKey() {\r\n\r\n\t\treturn getCacheKey( this );\r\n\r\n\t}\r\n\r\n\tgetHash( /*builder*/ ) {\r\n\r\n\t\treturn this.uuid;\r\n\r\n\t}\r\n\r\n\tgetUpdateType( /*builder*/ ) {\r\n\r\n\t\treturn this.updateType;\r\n\r\n\t}\r\n\r\n\tgetNodeType( /*builder*/ ) {\r\n\r\n\t\treturn this.nodeType;\r\n\r\n\t}\r\n\r\n\tgetReference( builder ) {\r\n\r\n\t\tconst hash = this.getHash( builder );\r\n\t\tconst nodeFromHash = builder.getNodeFromHash( hash );\r\n\r\n\t\treturn nodeFromHash || this;\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) {\r\n\r\n\t\tconst nodeProperties = builder.getNodeProperties( this );\r\n\r\n\t\tfor ( const childNode of this.getChildren() ) {\r\n\r\n\t\t\tnodeProperties[ '_node' + childNode.id ] = childNode;\r\n\r\n\t\t}\r\n\r\n\t\t// return a outputNode if exists\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tanalyze( builder ) {\r\n\r\n\t\tconst nodeData = builder.getDataFromNode( this );\r\n\t\tnodeData.dependenciesCount = nodeData.dependenciesCount === undefined ? 1 : nodeData.dependenciesCount + 1;\r\n\r\n\t\tif ( nodeData.dependenciesCount === 1 ) {\r\n\r\n\t\t\t// node flow children\r\n\r\n\t\t\tconst nodeProperties = builder.getNodeProperties( this );\r\n\r\n\t\t\tfor ( const childNode of Object.values( nodeProperties ) ) {\r\n\r\n\t\t\t\tif ( childNode && childNode.isNode === true ) {\r\n\r\n\t\t\t\t\tchildNode.build( builder );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst { outputNode } = builder.getNodeProperties( this );\r\n\r\n\t\tif ( outputNode && outputNode.isNode === true ) {\r\n\r\n\t\t\treturn outputNode.build( builder, output );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdate( /*frame*/ ) {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\tbuild( builder, output = null ) {\r\n\r\n\t\tconst refNode = this.getReference( builder );\r\n\r\n\t\tif ( this !== refNode ) {\r\n\r\n\t\t\treturn refNode.build( builder, output );\r\n\r\n\t\t}\r\n\r\n\t\tbuilder.addNode( this );\r\n\t\tbuilder.addStack( this );\r\n\r\n\t\t/* expected return:\r\n\t\t\t- \"construct\"\t-> Node\r\n\t\t\t- \"analyze\"\t\t-> null\r\n\t\t\t- \"generate\"\t-> String\r\n\t\t*/\r\n\t\tlet result = null;\r\n\r\n\t\tconst buildStage = builder.getBuildStage();\r\n\r\n\t\tif ( buildStage === 'construct' ) {\r\n\r\n\t\t\tconst properties = builder.getNodeProperties( this );\r\n\r\n\t\t\tif ( properties.initialized !== true || builder.context.tempRead === false ) {\r\n\r\n\t\t\t\tproperties.initialized = true;\r\n\t\t\t\tproperties.outputNode = this.construct( builder );\r\n\r\n\t\t\t\tfor ( const childNode of Object.values( properties ) ) {\r\n\r\n\t\t\t\t\tif ( childNode && childNode.isNode === true ) {\r\n\r\n\t\t\t\t\t\tchildNode.build( builder );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( buildStage === 'analyze' ) {\r\n\r\n\t\t\tthis.analyze( builder );\r\n\r\n\t\t} else if ( buildStage === 'generate' ) {\r\n\r\n\t\t\tconst isGenerateOnce = this.generate.length === 1;\r\n\r\n\t\t\tif ( isGenerateOnce ) {\r\n\r\n\t\t\t\tconst type = this.getNodeType( builder );\r\n\t\t\t\tconst nodeData = builder.getDataFromNode( this );\r\n\r\n\t\t\t\tresult = nodeData.snippet;\r\n\r\n\t\t\t\tif ( result === undefined /*|| builder.context.tempRead === false*/ ) {\r\n\r\n\t\t\t\t\tresult = this.generate( builder ) || '';\r\n\r\n\t\t\t\t\tnodeData.snippet = result;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresult = builder.format( result, type, output );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tresult = this.generate( builder, output ) || '';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tbuilder.removeStack( this );\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\tserialize( json ) {\r\n\r\n\t\tconst nodeKeys = getNodesKeys( this );\r\n\r\n\t\tif ( nodeKeys.length > 0 ) {\r\n\r\n\t\t\tconst inputNodes = {};\r\n\r\n\t\t\tfor ( const property of nodeKeys ) {\r\n\r\n\t\t\t\tinputNodes[ property ] = this[ property ].toJSON( json.meta ).uuid;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tjson.inputNodes = inputNodes;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdeserialize( json ) {\r\n\r\n\t\tif ( json.inputNodes !== undefined ) {\r\n\r\n\t\t\tconst nodes = json.meta.nodes;\r\n\r\n\t\t\tfor ( const property in json.inputNodes ) {\r\n\r\n\t\t\t\tconst uuid = json.inputNodes[ property ];\r\n\r\n\t\t\t\tthis[ property ] = nodes[ uuid ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst { uuid, type } = this;\r\n\t\tconst isRoot = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\tif ( isRoot ) {\r\n\r\n\t\t\tmeta = {\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {},\r\n\t\t\t\tnodes: {}\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// serialize\r\n\r\n\t\tlet data = meta.nodes[ uuid ];\r\n\r\n\t\tif ( data === undefined ) {\r\n\r\n\t\t\tdata = {\r\n\t\t\t\tuuid,\r\n\t\t\t\ttype,\r\n\t\t\t\tmeta,\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Node',\r\n\t\t\t\t\tgenerator: 'Node.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tmeta.nodes[ data.uuid ] = data;\r\n\r\n\t\t\tthis.serialize( data );\r\n\r\n\t\t\tdelete data.meta;\r\n\r\n\t\t}\r\n\r\n\t\t// TODO: Copied from Object3D.toJSON\r\n\r\n\t\tfunction extractFromCache( cache ) {\r\n\r\n\t\t\tconst values = [];\r\n\r\n\t\t\tfor ( const key in cache ) {\r\n\r\n\t\t\t\tconst data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t\tif ( isRoot ) {\r\n\r\n\t\t\tconst textures = extractFromCache( meta.textures );\r\n\t\t\tconst images = extractFromCache( meta.images );\r\n\t\t\tconst nodes = extractFromCache( meta.nodes );\r\n\r\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\r\n\t\t\tif ( images.length > 0 ) data.images = images;\r\n\t\t\tif ( nodes.length > 0 ) data.nodes = nodes;\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default Node;\r\n", "import Node from './Node.js';\r\nimport { getValueType, getValueFromType } from './NodeUtils.js';\r\n\r\nclass InputNode extends Node {\r\n\r\n\tconstructor( value, nodeType = null ) {\r\n\r\n\t\tsuper( nodeType );\r\n\r\n\t\tthis.isInputNode = true;\r\n\r\n\t\tthis.value = value;\r\n\r\n\t}\r\n\r\n\tgetNodeType( /*builder*/ ) {\r\n\r\n\t\tif ( this.nodeType === null ) {\r\n\r\n\t\t\treturn getValueType( this.value );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.nodeType;\r\n\r\n\t}\r\n\r\n\tgetInputType( builder ) {\r\n\r\n\t\treturn this.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.value = this.value;\r\n\r\n\t\tif ( this.value && this.value.toArray ) data.value = this.value.toArray();\r\n\r\n\t\tdata.valueType = getValueType( this.value );\r\n\t\tdata.nodeType = this.nodeType;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.nodeType = data.nodeType;\r\n\t\tthis.value = Array.isArray( data.value ) ? getValueFromType( data.valueType, ...data.value ) : data.value;\r\n\r\n\t\tif ( this.value && this.value.fromArray ) this.value = this.value.fromArray( data.value );\r\n\r\n\t}\r\n\r\n\tgenerate( /*builder, output*/ ) {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default InputNode;\r\n", "import InputNode from './InputNode.js';\r\n\r\nclass UniformNode extends InputNode {\r\n\r\n\tconstructor( value, nodeType = null ) {\r\n\r\n\t\tsuper( value, nodeType );\r\n\r\n\t\tthis.isUniformNode = true;\r\n\r\n\t}\r\n\r\n\tgetUniformHash( builder ) {\r\n\r\n\t\treturn this.getHash( builder );\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst type = this.getNodeType( builder );\r\n\r\n\t\tconst hash = this.getUniformHash( builder );\r\n\r\n\t\tlet sharedNode = builder.getNodeFromHash( hash );\r\n\r\n\t\tif ( sharedNode === undefined ) {\r\n\r\n\t\t\tbuilder.setHashNode( this, hash );\r\n\r\n\t\t\tsharedNode = this;\r\n\r\n\t\t}\r\n\r\n\t\tconst sharedNodeType = sharedNode.getInputType( builder );\r\n\r\n\t\tconst nodeUniform = builder.getUniformFromNode( sharedNode, builder.shaderStage, sharedNodeType );\r\n\t\tconst propertyName = builder.getPropertyName( nodeUniform );\r\n\r\n\t\treturn builder.format( propertyName, type, output );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default UniformNode;\r\n", "import UniformNode from './UniformNode.js';\r\n\r\nclass ArrayUniformNode extends UniformNode {\r\n\r\n\tconstructor( nodes = [] ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isArrayUniformNode = true;\r\n\r\n\t\tthis.nodes = nodes;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.nodes[ 0 ].getNodeType( builder );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ArrayUniformNode;\r\n", "import Node from './Node.js';\r\nimport { NodeShaderStage } from './constants.js';\r\n\r\nclass VaryingNode extends Node {\r\n\r\n\tconstructor( node, name = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.node = node;\r\n\t\tthis.name = name;\r\n\r\n\t}\r\n\r\n\tisGlobal() {\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tgetHash( builder ) {\r\n\r\n\t\treturn this.name || super.getHash( builder );\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\t// VaryingNode is auto type\r\n\r\n\t\treturn this.node.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst { name, node } = this;\r\n\t\tconst type = this.getNodeType( builder );\r\n\r\n\t\tconst nodeVarying = builder.getVaryingFromNode( this, type );\r\n\r\n\t\t// this property can be used to check if the varying can be optimized for a var\r\n\t\tnodeVarying.needsInterpolation || ( nodeVarying.needsInterpolation = ( builder.shaderStage === 'fragment' ) );\r\n\r\n\t\tif ( name !== null ) {\r\n\r\n\t\t\tnodeVarying.name = name;\r\n\r\n\t\t}\r\n\r\n\t\tconst propertyName = builder.getPropertyName( nodeVarying, NodeShaderStage.VERTEX );\r\n\r\n\t\t// force node run in vertex stage\r\n\t\tbuilder.flowNodeFromShaderStage( NodeShaderStage.VERTEX, node, type, propertyName );\r\n\r\n\t\treturn builder.getPropertyName( nodeVarying );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default VaryingNode;\r\n", "import Node from './Node.js';\r\nimport VaryingNode from './VaryingNode.js';\r\n\r\nclass AttributeNode extends Node {\r\n\r\n\tconstructor( attributeName, nodeType = null ) {\r\n\r\n\t\tsuper( nodeType );\r\n\r\n\t\tthis._attributeName = attributeName;\r\n\r\n\t}\r\n\r\n\tgetHash( builder ) {\r\n\r\n\t\treturn this.getAttributeName( builder );\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\tconst attributeName = this.getAttributeName( builder );\r\n\r\n\t\tlet nodeType = super.getNodeType( builder );\r\n\r\n\t\tif ( nodeType === null ) {\r\n\r\n\t\t\tif ( builder.hasGeometryAttribute( attributeName ) ) {\r\n\r\n\t\t\t\tconst attribute = builder.geometry.getAttribute( attributeName );\r\n\r\n\t\t\t\tnodeType = builder.getTypeFromLength( attribute.itemSize );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnodeType = 'float';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn nodeType;\r\n\r\n\t}\r\n\r\n\tsetAttributeName( attributeName ) {\r\n\r\n\t\tthis._attributeName = attributeName;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetAttributeName( /*builder*/ ) {\r\n\r\n\t\treturn this._attributeName;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst attributeName = this.getAttributeName( builder );\r\n\t\tconst nodeType = this.getNodeType( builder );\r\n\t\tconst geometryAttribute = builder.hasGeometryAttribute( attributeName );\r\n\r\n\t\tif ( geometryAttribute === true ) {\r\n\r\n\t\t\tconst nodeAttribute = builder.getAttribute( attributeName, nodeType );\r\n\r\n\t\t\tif ( builder.isShaderStage( 'vertex' ) ) {\r\n\r\n\t\t\t\treturn nodeAttribute.name;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst nodeVarying = new VaryingNode( this );\r\n\r\n\t\t\t\treturn nodeVarying.build( builder, nodeAttribute.type );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( `Attribute \"${ attributeName }\" not found.` );\r\n\r\n\t\t\treturn builder.getConst( nodeType );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default AttributeNode;\r\n", "import Node from './Node.js';\r\n\r\nclass BypassNode extends Node {\r\n\r\n\tconstructor( returnNode, callNode ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isBypassNode = true;\r\n\r\n\t\tthis.outputNode = returnNode;\r\n\t\tthis.callNode = callNode;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.outputNode.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst snippet = this.callNode.build( builder, 'void' );\r\n\r\n\t\tif ( snippet !== '' ) {\r\n\r\n\t\t\tbuilder.addFlowCode( snippet );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.outputNode.build( builder, output );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default BypassNode;\r\n", "let id = 0;\r\n\r\nclass NodeCache {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.id = id ++;\r\n\t\tthis.nodesData = new WeakMap();\r\n\r\n\t}\r\n\r\n\tgetNodeData( node ) {\r\n\r\n\t\treturn this.nodesData.get( node );\r\n\r\n\t}\r\n\r\n\tsetNodeData( node, data ) {\r\n\r\n\t\tthis.nodesData.set( node, data );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeCache;\r\n", "import Node from './Node.js';\r\nimport NodeCache from './NodeCache.js';\r\n\r\nclass CacheNode extends Node {\r\n\r\n\tconstructor( node, cache = new NodeCache() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isCacheNode = true;\r\n\r\n\t\tthis.node = node;\r\n\t\tthis.cache = cache;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.node.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tbuild( builder, ...params ) {\r\n\r\n\t\tconst previousCache = builder.getCache();\r\n\r\n\t\tbuilder.setCache( this.cache );\r\n\r\n\t\tconst data = this.node.build( builder, ...params );\r\n\r\n\t\tbuilder.setCache( previousCache );\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default CacheNode;\r\n", "import Node from './Node.js';\r\n\r\nclass CodeNode extends Node {\r\n\r\n\tconstructor( code = '', includes = [] ) {\r\n\r\n\t\tsuper( 'code' );\r\n\r\n\t\tthis.isCodeNode = true;\r\n\r\n\t\tthis.code = code;\r\n\r\n\t\tthis._includes = includes;\r\n\r\n\t}\r\n\r\n\tsetIncludes( includes ) {\r\n\r\n\t\tthis._includes = includes;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetIncludes( /*builder*/ ) {\r\n\r\n\t\treturn this._includes;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst includes = this.getIncludes( builder );\r\n\r\n\t\tfor ( const include of includes ) {\r\n\r\n\t\t\tinclude.build( builder );\r\n\r\n\t\t}\r\n\r\n\t\tconst nodeCode = builder.getCodeFromNode( this, this.getNodeType( builder ) );\r\n\t\tnodeCode.code = this.code;\r\n\r\n\t\treturn nodeCode.code;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default CodeNode;\r\n", "import InputNode from './InputNode.js';\r\n\r\nclass ConstNode extends InputNode {\r\n\r\n\tconstructor( value, nodeType = null ) {\r\n\r\n\t\tsuper( value, nodeType );\r\n\r\n\t\tthis.isConstNode = true;\r\n\r\n\t}\r\n\r\n\tgenerateConst( builder ) {\r\n\r\n\t\treturn builder.getConst( this.getNodeType( builder ), this.value );\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst type = this.getNodeType( builder );\r\n\r\n\t\treturn builder.format( this.generateConst( builder ), type, output );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ConstNode;\r\n", "import Node from './Node.js';\r\n\r\nclass ContextNode extends Node {\r\n\r\n\tconstructor( node, context = {} ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isContextNode = true;\r\n\r\n\t\tthis.node = node;\r\n\t\tthis.context = context;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.node.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) {\r\n\r\n\t\tconst previousContext = builder.getContext();\r\n\r\n\t\tbuilder.setContext( { ...builder.context, ...this.context } );\r\n\r\n\t\tconst node = this.node.build( builder );\r\n\r\n\t\tbuilder.setContext( previousContext );\r\n\r\n\t\treturn node;\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst previousContext = builder.getContext();\r\n\r\n\t\tbuilder.setContext( { ...builder.context, ...this.context } );\r\n\r\n\t\tconst snippet = this.node.build( builder, output );\r\n\r\n\t\tbuilder.setContext( previousContext );\r\n\r\n\t\treturn snippet;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ContextNode;\r\n", "import Node from './Node.js';\r\n\r\nclass ExpressionNode extends Node {\r\n\r\n\tconstructor( snipped = '', nodeType = 'void' ) {\r\n\r\n\t\tsuper( nodeType );\r\n\r\n\t\tthis.snipped = snipped;\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst type = this.getNodeType( builder );\r\n\t\tconst snipped = this.snipped;\r\n\r\n\t\tif ( type === 'void' ) {\r\n\r\n\t\t\tbuilder.addFlowCode( snipped );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn builder.format( `( ${ snipped } )`, type, output );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ExpressionNode;\r\n", "import Node from './Node.js';\r\n\r\nclass TempNode extends Node {\r\n\r\n\tconstructor( type ) {\r\n\r\n\t\tsuper( type );\r\n\r\n\t\tthis.isTempNode = true;\r\n\r\n\t}\r\n\r\n\thasDependencies( builder ) {\r\n\r\n\t\treturn builder.getDataFromNode( this ).dependenciesCount > 1;\r\n\r\n\t}\r\n\r\n\tbuild( builder, output ) {\r\n\r\n\t\tconst buildStage = builder.getBuildStage();\r\n\r\n\t\tif ( buildStage === 'generate' ) {\r\n\r\n\t\t\tconst type = builder.getVectorType( this.getNodeType( builder, output ) );\r\n\t\t\tconst nodeData = builder.getDataFromNode( this );\r\n\r\n\t\t\tif ( builder.context.tempRead !== false && nodeData.propertyName !== undefined ) {\r\n\r\n\t\t\t\treturn builder.format( nodeData.propertyName, type, output );\r\n\r\n\t\t\t} else if ( builder.context.tempWrite !== false && type !== 'void ' && output !== 'void' && this.hasDependencies( builder ) ) {\r\n\r\n\t\t\t\tconst snippet = super.build( builder, type );\r\n\r\n\t\t\t\tconst nodeVar = builder.getVarFromNode( this, type );\r\n\t\t\t\tconst propertyName = builder.getPropertyName( nodeVar );\r\n\r\n\t\t\t\tbuilder.addFlowCode( `${propertyName} = ${snippet}` );\r\n\r\n\t\t\t\tnodeData.snippet = snippet;\r\n\t\t\t\tnodeData.propertyName = propertyName;\r\n\r\n\t\t\t\treturn builder.format( nodeData.propertyName, type, output );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn super.build( builder, output );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default TempNode;\r\n", "import TempNode from './TempNode.js';\r\n\r\nclass FunctionCallNode extends TempNode {\r\n\r\n\tconstructor( functionNode = null, parameters = {} ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.functionNode = functionNode;\r\n\t\tthis.parameters = parameters;\r\n\r\n\t}\r\n\r\n\tsetParameters( parameters ) {\r\n\r\n\t\tthis.parameters = parameters;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetParameters() {\r\n\r\n\t\treturn this.parameters;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.functionNode.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst params = [];\r\n\r\n\t\tconst functionNode = this.functionNode;\r\n\r\n\t\tconst inputs = functionNode.getInputs( builder );\r\n\t\tconst parameters = this.parameters;\r\n\r\n\t\tif ( Array.isArray( parameters ) ) {\r\n\r\n\t\t\tfor ( let i = 0; i < parameters.length; i ++ ) {\r\n\r\n\t\t\t\tconst inputNode = inputs[ i ];\r\n\t\t\t\tconst node = parameters[ i ];\r\n\r\n\t\t\t\tparams.push( node.build( builder, inputNode.type ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( const inputNode of inputs ) {\r\n\r\n\t\t\t\tconst node = parameters[ inputNode.name ];\r\n\r\n\t\t\t\tif ( node !== undefined ) {\r\n\r\n\t\t\t\t\tparams.push( node.build( builder, inputNode.type ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthrow new Error( `FunctionCallNode: Input '${inputNode.name}' not found in FunctionNode.` );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst functionName = functionNode.build( builder, 'property' );\r\n\r\n\t\treturn `${functionName}( ${params.join( ', ' )} )`;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default FunctionCallNode;\r\n", "import CodeNode from './CodeNode.js';\r\nimport FunctionCallNode from './FunctionCallNode.js';\r\n\r\nclass FunctionNode extends CodeNode {\r\n\r\n\tconstructor( code = '', includes = [] ) {\r\n\r\n\t\tsuper( code, includes );\r\n\r\n\t\tthis.keywords = {};\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.getNodeFunction( builder ).type;\r\n\r\n\t}\r\n\r\n\tgetInputs( builder ) {\r\n\r\n\t\treturn this.getNodeFunction( builder ).inputs;\r\n\r\n\t}\r\n\r\n\tgetNodeFunction( builder ) {\r\n\r\n\t\tconst nodeData = builder.getDataFromNode( this );\r\n\r\n\t\tlet nodeFunction = nodeData.nodeFunction;\r\n\r\n\t\tif ( nodeFunction === undefined ) {\r\n\r\n\t\t\tnodeFunction = builder.parser.parseFunction( this.code );\r\n\r\n\t\t\tnodeData.nodeFunction = nodeFunction;\r\n\r\n\t\t}\r\n\r\n\t\treturn nodeFunction;\r\n\r\n\t}\r\n\r\n\tcall( parameters = {} ) {\r\n\r\n\t\treturn new FunctionCallNode( this, parameters );\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tsuper.generate( builder );\r\n\r\n\t\tconst nodeFunction = this.getNodeFunction( builder );\r\n\r\n\t\tconst name = nodeFunction.name;\r\n\t\tconst type = nodeFunction.type;\r\n\r\n\t\tconst nodeCode = builder.getCodeFromNode( this, type );\r\n\r\n\t\tif ( name !== '' ) {\r\n\r\n\t\t\t// use a custom property name\r\n\r\n\t\t\tnodeCode.name = name;\r\n\r\n\t\t}\r\n\r\n\t\tconst propertyName = builder.getPropertyName( nodeCode );\r\n\r\n\t\tlet code = this.getNodeFunction( builder ).getCode( propertyName );\r\n\r\n\t\tconst keywords = this.keywords;\r\n\t\tconst keywordsProperties = Object.keys( keywords );\r\n\r\n\t\tif ( keywordsProperties.length > 0 ) {\r\n\r\n\t\t\tfor ( const property of keywordsProperties ) {\r\n\r\n\t\t\t\tconst propertyRegExp = new RegExp( `\\\\b${property}\\\\b`, 'g' );\r\n\t\t\t\tconst nodeProperty = keywords[ property ].build( builder, 'property' );\r\n\r\n\t\t\t\tcode = code.replace( propertyRegExp, nodeProperty );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tnodeCode.code = code;\r\n\r\n\t\tif ( output === 'property' ) {\r\n\r\n\t\t\treturn propertyName;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn builder.format( `${ propertyName }()`, type, output );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default FunctionNode;\r\n", "import Node from './Node.js';\r\n\r\nclass InstanceIndexNode extends Node {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper( 'uint' );\r\n\r\n\t\tthis.isInstanceIndexNode = true;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\treturn builder.getInstanceIndex();\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default InstanceIndexNode;\r\n", "class LightingModel {\r\n\r\n\tconstructor( direct = null, indirectDiffuse = null, indirectSpecular = null, ambientOcclusion = null ) {\r\n\r\n\t\tthis.direct = direct;\r\n\t\tthis.indirectDiffuse = indirectDiffuse;\r\n\t\tthis.indirectSpecular = indirectSpecular;\r\n\t\tthis.ambientOcclusion = ambientOcclusion;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default LightingModel;\r\n", "class NodeAttribute {\r\n\r\n\tconstructor( name, type ) {\r\n\r\n\t\tthis.isNodeAttribute = true;\r\n\r\n\t\tthis.name = name;\r\n\t\tthis.type = type;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeAttribute;\r\n", "class NodeUniform {\r\n\r\n\tconstructor( name, type, node, needsUpdate = undefined ) {\r\n\r\n\t\tthis.isNodeUniform = true;\r\n\r\n\t\tthis.name = name;\r\n\t\tthis.type = type;\r\n\t\tthis.node = node;\r\n\t\tthis.needsUpdate = needsUpdate;\r\n\r\n\t}\r\n\r\n\tget value() {\r\n\r\n\t\treturn this.node.value;\r\n\r\n\t}\r\n\r\n\tset value( val ) {\r\n\r\n\t\tthis.node.value = val;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeUniform;\r\n", "class NodeVar {\r\n\r\n\tconstructor( name, type ) {\r\n\r\n\t\tthis.isNodeVar = true;\r\n\r\n\t\tthis.name = name;\r\n\t\tthis.type = type;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeVar;\r\n", "import NodeVar from './NodeVar.js';\r\n\r\nclass NodeVarying extends NodeVar {\r\n\r\n\tconstructor( name, type ) {\r\n\r\n\t\tsuper( name, type );\r\n\r\n\t\tthis.needsInterpolation = false;\r\n\r\n\t\tthis.isNodeVarying = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeVarying;\r\n", "class NodeCode {\r\n\r\n\tconstructor( name, type, code = '' ) {\r\n\r\n\t\tthis.name = name;\r\n\t\tthis.type = type;\r\n\t\tthis.code = code;\r\n\r\n\t\tObject.defineProperty( this, 'isNodeCode', { value: true } );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeCode;\r\n", "class NodeKeywords {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.keywords = [];\r\n\t\tthis.nodes = [];\r\n\t\tthis.keywordsCallback = {};\r\n\r\n\t}\r\n\r\n\tgetNode( name ) {\r\n\r\n\t\tlet node = this.nodes[ name ];\r\n\r\n\t\tif ( node === undefined && this.keywordsCallback[ name ] !== undefined ) {\r\n\r\n\t\t\tnode = this.keywordsCallback[ name ]( name );\r\n\r\n\t\t\tthis.nodes[ name ] = node;\r\n\r\n\t\t}\r\n\r\n\t\treturn node;\r\n\r\n\t}\r\n\r\n\taddKeyword( name, callback ) {\r\n\r\n\t\tthis.keywords.push( name );\r\n\t\tthis.keywordsCallback[ name ] = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tparse( code ) {\r\n\r\n\t\tconst keywordNames = this.keywords;\r\n\r\n\t\tconst regExp = new RegExp( `\\\\b${keywordNames.join( '\\\\b|\\\\b' )}\\\\b`, 'g' );\r\n\r\n\t\tconst codeKeywords = code.match( regExp );\r\n\r\n\t\tconst keywordNodes = [];\r\n\r\n\t\tif ( codeKeywords !== null ) {\r\n\r\n\t\t\tfor ( const keyword of codeKeywords ) {\r\n\r\n\t\t\t\tconst node = this.getNode( keyword );\r\n\r\n\t\t\t\tif ( node !== undefined && keywordNodes.indexOf( node ) === - 1 ) {\r\n\r\n\t\t\t\t\tkeywordNodes.push( node );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn keywordNodes;\r\n\r\n\t}\r\n\r\n\tinclude( builder, code ) {\r\n\r\n\t\tconst keywordNodes = this.parse( code );\r\n\r\n\t\tfor ( const keywordNode of keywordNodes ) {\r\n\r\n\t\t\tkeywordNode.build( builder );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeKeywords;\r\n", "// accessors\r\nimport CubeTextureNode from '../accessors/CubeTextureNode.js';\r\nimport InstanceNode from '../accessors/InstanceNode.js';\r\nimport ReflectVectorNode from '../accessors/ReflectVectorNode.js';\r\nimport SkinningNode from '../accessors/SkinningNode.js';\r\nimport ExtendedMaterialNode from '../accessors/ExtendedMaterialNode.js';\r\n\r\n// display\r\nimport BlendModeNode from '../display/BlendModeNode.js';\r\nimport ColorAdjustmentNode from '../display/ColorAdjustmentNode.js';\r\nimport ColorSpaceNode from '../display/ColorSpaceNode.js';\r\nimport NormalMapNode from '../display/NormalMapNode.js';\r\nimport PosterizeNode from '../display/PosterizeNode.js';\r\nimport ToneMappingNode from '../display/ToneMappingNode.js';\r\nimport ViewportNode from '../display/ViewportNode.js';\r\n\r\n// lighting\r\nimport LightsNode from '../lighting/LightsNode.js';\r\n//import LightingNode from '../lighting/LightingNode.js';\r\nimport LightingContextNode from '../lighting/LightingContextNode.js';\r\n\r\n// utils\r\nimport EquirectUVNode from '../utils/EquirectUVNode.js';\r\nimport MatcapUVNode from '../utils/MatcapUVNode.js';\r\nimport OscNode from '../utils/OscNode.js';\r\nimport RemapNode from '../utils/RemapNode.js';\r\nimport RotateUVNode from '../utils/RotateUVNode.js';\r\nimport SpecularMIPLevelNode from '../utils/SpecularMIPLevelNode.js';\r\nimport SpriteSheetUVNode from '../utils/SpriteSheetUVNode.js';\r\nimport TimerNode from '../utils/TimerNode.js';\r\nimport TriplanarTexturesNode from '../utils/TriplanarTexturesNode.js';\r\n\r\n// geometry\r\nimport RangeNode from '../geometry/RangeNode.js';\r\n\r\n// procedural\r\nimport CheckerNode from '../procedural/CheckerNode.js';\r\n\r\n// fog\r\nimport FogNode from '../fog/FogNode.js';\r\nimport FogRangeNode from '../fog/FogRangeNode.js';\r\nimport FogExp2Node from '../fog/FogExp2Node.js';\r\n\r\n// shader node utils\r\nimport { nodeObject, nodeProxy, nodeImmutable } from './ShaderNode.js';\r\n\r\n//\r\n// Node Material Shader Syntax\r\n//\r\n\r\n// shader node base\r\n\r\nexport * from './ShaderNodeBaseElements.js';\r\n\r\n// functions\r\n\r\nexport { default as BRDF_BlinnPhong } from '../functions/BSDF/BRDF_BlinnPhong.js';\r\nexport { default as BRDF_GGX } from '../functions/BSDF/BRDF_GGX.js';\r\nexport { default as BRDF_Lambert } from '../functions/BSDF/BRDF_Lambert.js';\r\nexport { default as D_GGX } from '../functions/BSDF/D_GGX.js';\r\nexport { default as DFGApprox } from '../functions/BSDF/DFGApprox.js';\r\nexport { default as F_Schlick } from '../functions/BSDF/F_Schlick.js';\r\nexport { default as V_GGX_SmithCorrelated } from '../functions/BSDF/V_GGX_SmithCorrelated.js';\r\n\r\nexport { default as getDistanceAttenuation } from '../functions/light/getDistanceAttenuation.js';\r\n\r\nexport { default as getGeometryRoughness } from '../functions/material/getGeometryRoughness.js';\r\nexport { default as getRoughness } from '../functions/material/getRoughness.js';\r\n\r\nexport { default as phongLightingModel } from '../functions/PhongLightingModel.js';\r\nexport { default as physicalLightingModel } from '../functions/PhysicalLightingModel.js';\r\n\r\n// accessors\r\n\r\nexport const cubeTexture = nodeProxy( CubeTextureNode );\r\n\r\nexport const instance = nodeProxy( InstanceNode );\r\n\r\nexport const reflectVector = nodeImmutable( ReflectVectorNode );\r\n\r\nexport const skinning = nodeProxy( SkinningNode );\r\n\r\n// material\r\n\r\nexport const materialNormal = nodeImmutable( ExtendedMaterialNode, ExtendedMaterialNode.NORMAL );\r\n\r\n// display\r\n\r\nexport const burn = nodeProxy( BlendModeNode, BlendModeNode.BURN );\r\nexport const dodge = nodeProxy( BlendModeNode, BlendModeNode.DODGE );\r\nexport const overlay = nodeProxy( BlendModeNode, BlendModeNode.OVERLAY );\r\nexport const screen = nodeProxy( BlendModeNode, BlendModeNode.SCREEN );\r\n\r\nexport const saturation = nodeProxy( ColorAdjustmentNode, ColorAdjustmentNode.SATURATION );\r\nexport const vibrance = nodeProxy( ColorAdjustmentNode, ColorAdjustmentNode.VIBRANCE );\r\nexport const hue = nodeProxy( ColorAdjustmentNode, ColorAdjustmentNode.HUE );\r\n\r\nexport const colorSpace = ( node, encoding ) => nodeObject( new ColorSpaceNode( null, nodeObject( node ) ).fromEncoding( encoding ) );\r\nexport const normalMap = nodeProxy( NormalMapNode );\r\nexport const toneMapping = ( mapping, exposure, color ) => nodeObject( new ToneMappingNode( mapping, nodeObject( exposure ), nodeObject( color ) ) );\r\n\r\nexport const posterize = nodeProxy( PosterizeNode );\r\n\r\nexport const viewportCoordinate = nodeImmutable( ViewportNode, ViewportNode.COORDINATE );\r\nexport const viewportResolution = nodeImmutable( ViewportNode, ViewportNode.RESOLUTION );\r\nexport const viewportTopLeft = nodeImmutable( ViewportNode, ViewportNode.TOP_LEFT );\r\nexport const viewportBottomLeft = nodeImmutable( ViewportNode, ViewportNode.BOTTOM_LEFT );\r\nexport const viewportTopRight = nodeImmutable( ViewportNode, ViewportNode.TOP_RIGHT );\r\nexport const viewportBottomRight = nodeImmutable( ViewportNode, ViewportNode.BOTTOM_RIGHT );\r\n\r\n// lighting\r\n\r\n//export const lighting = nodeProxy( LightingNode ); // abstract\r\n//export const light; // still needs to be added\r\nexport const lights = ( lights ) => nodeObject( new LightsNode().fromLights( lights ) );\r\nexport const lightingContext = nodeProxy( LightingContextNode );\r\n\r\n// utils\r\n\r\nexport const matcapUV = nodeImmutable( MatcapUVNode );\r\nexport const equirectUV = nodeProxy( EquirectUVNode );\r\n\r\nexport const specularMIPLevel = nodeProxy( SpecularMIPLevelNode );\r\n\r\nexport const oscSine = nodeProxy( OscNode, OscNode.SINE );\r\nexport const oscSquare = nodeProxy( OscNode, OscNode.SQUARE );\r\nexport const oscTriangle = nodeProxy( OscNode, OscNode.TRIANGLE );\r\nexport const oscSawtooth = nodeProxy( OscNode, OscNode.SAWTOOTH );\r\n\r\nexport const remap = nodeProxy( RemapNode, null, null, { doClamp: false } );\r\nexport const remapClamp = nodeProxy( RemapNode );\r\n\r\nexport const rotateUV = nodeProxy( RotateUVNode );\r\n\r\nexport const spritesheetUV = nodeProxy( SpriteSheetUVNode );\r\n\r\n// @TODO: add supports to use node in timeScale\r\nexport const timerLocal = ( timeScale, value = 0 ) => nodeObject( new TimerNode( TimerNode.LOCAL, timeScale, value ) );\r\nexport const timerGlobal = ( timeScale, value = 0 ) => nodeObject( new TimerNode( TimerNode.GLOBAL, timeScale, value ) );\r\nexport const timerDelta = ( timeScale, value = 0 ) => nodeObject( new TimerNode( TimerNode.DELTA, timeScale, value ) );\r\nexport const frameId = nodeImmutable( TimerNode, TimerNode.FRAME );\r\n\r\nexport const triplanarTextures = nodeProxy( TriplanarTexturesNode );\r\nexport const triplanarTexture = ( texture, ...params ) => triplanarTextures( texture, texture, texture, ...params );\r\n\r\n// geometry\r\n\r\nexport const range = ( min, max ) => nodeObject( new RangeNode( min, max ) );\r\n\r\n// procedural\r\n\r\nexport const checker = nodeProxy( CheckerNode );\r\n\r\n// fog\r\n\r\nexport const fog = nodeProxy( FogNode );\r\nexport const rangeFog = nodeProxy( FogRangeNode );\r\nexport const densityFog = nodeProxy( FogExp2Node );\r\n", "import AttributeNode from '../core/AttributeNode.js';\r\n\r\nclass UVNode extends AttributeNode {\r\n\r\n\tconstructor( index = 0 ) {\r\n\r\n\t\tsuper( null, 'vec2' );\r\n\r\n\t\tthis.isUVNode = true;\r\n\r\n\t\tthis.index = index;\r\n\r\n\t}\r\n\r\n\tgetAttributeName( /*builder*/ ) {\r\n\r\n\t\tconst index = this.index;\r\n\r\n\t\treturn 'uv' + ( index > 0 ? index + 1 : '' );\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.index = this.index;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.index = data.index;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default UVNode;\r\n", "import UniformNode from '../core/UniformNode.js';\r\nimport UVNode from './UVNode.js';\r\n\r\nlet defaultUV;\r\n\r\nclass TextureNode extends UniformNode {\r\n\r\n\tconstructor( value, uvNode = null, levelNode = null ) {\r\n\r\n\t\tsuper( value, 'vec4' );\r\n\r\n\t\tthis.isTextureNode = true;\r\n\r\n\t\tthis.uvNode = uvNode;\r\n\t\tthis.levelNode = levelNode;\r\n\r\n\t}\r\n\r\n\tgetUniformHash( /*builder*/ ) {\r\n\r\n\t\treturn this.value.uuid;\r\n\r\n\t}\r\n\r\n\tgetInputType( /*builder*/ ) {\r\n\r\n\t\treturn 'texture';\r\n\r\n\t}\r\n\r\n\tgetDefaultUV() {\r\n\r\n\t\treturn defaultUV || ( defaultUV = new UVNode() );\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) {\r\n\r\n\t\tconst properties = builder.getNodeProperties( this );\r\n\r\n\t\t//\r\n\r\n\t\tlet uvNode = this.uvNode;\r\n\r\n\t\tif ( uvNode === null && builder.context.getUVNode ) {\r\n\r\n\t\t\tuvNode = builder.context.getUVNode( this );\r\n\r\n\t\t}\r\n\r\n\t\tuvNode || ( uvNode = this.getDefaultUV() );\r\n\r\n\t\t//\r\n\r\n\t\tlet levelNode = this.levelNode;\r\n\r\n\t\tif ( levelNode === null && builder.context.getSamplerLevelNode ) {\r\n\r\n\t\t\tlevelNode = builder.context.getSamplerLevelNode( this );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tproperties.uvNode = uvNode;\r\n\t\tproperties.levelNode = levelNode ? builder.context.getMIPLevelAlgorithmNode( this, levelNode ) : null;\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst { uvNode, levelNode } = builder.getNodeProperties( this );\r\n\r\n\t\tconst texture = this.value;\r\n\r\n\t\tif ( ! texture || texture.isTexture !== true ) {\r\n\r\n\t\t\tthrow new Error( 'TextureNode: Need a three.js texture.' );\r\n\r\n\t\t}\r\n\r\n\t\tconst textureProperty = super.generate( builder, 'texture' );\r\n\r\n\t\tif ( output === 'sampler' ) {\r\n\r\n\t\t\treturn textureProperty + '_sampler';\r\n\r\n\t\t} else if ( builder.isReference( output ) ) {\r\n\r\n\t\t\treturn textureProperty;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst nodeData = builder.getDataFromNode( this );\r\n\r\n\t\t\tlet propertyName = nodeData.propertyName;\r\n\r\n\t\t\tif ( propertyName === undefined ) {\r\n\r\n\t\t\t\tconst uvSnippet = uvNode.build( builder, 'vec2' );\r\n\t\t\t\tconst nodeVar = builder.getVarFromNode( this, 'vec4' );\r\n\r\n\t\t\t\tpropertyName = builder.getPropertyName( nodeVar );\r\n\r\n\t\t\t\tlet snippet = null;\r\n\r\n\t\t\t\tif ( levelNode && levelNode.isNode === true ) {\r\n\r\n\t\t\t\t\tconst levelSnippet = levelNode.build( builder, 'float' );\r\n\r\n\t\t\t\t\tsnippet = builder.getTextureLevel( textureProperty, uvSnippet, levelSnippet );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsnippet = builder.getTexture( textureProperty, uvSnippet );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbuilder.addFlowCode( `${propertyName} = ${snippet}` );\r\n\r\n\t\t\t\tnodeData.snippet = snippet;\r\n\t\t\t\tnodeData.propertyName = propertyName;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn builder.format( propertyName, 'vec4', output );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.value = this.value.toJSON( data.meta ).uuid;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.value = data.meta.textures[ data.value ];\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default TextureNode;\r\n", "import Node from './Node.js';\r\n\r\nclass PropertyNode extends Node {\r\n\r\n\tconstructor( nodeType, name = null ) {\r\n\r\n\t\tsuper( nodeType );\r\n\r\n\t\tthis.name = name;\r\n\r\n\t}\r\n\r\n\tgetHash( builder ) {\r\n\r\n\t\treturn this.name || super.getHash( builder );\r\n\r\n\t}\r\n\r\n\tisGlobal( /*builder*/ ) {\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst nodeVary = builder.getVarFromNode( this, this.getNodeType( builder ) );\r\n\t\tconst name = this.name;\r\n\r\n\t\tif ( name !== null ) {\r\n\r\n\t\t\tnodeVary.name = name;\r\n\r\n\t\t}\r\n\r\n\t\treturn builder.getPropertyName( nodeVary );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default PropertyNode;\r\n", "import TempNode from '../core/TempNode.js';\r\n\r\nclass OperatorNode extends TempNode {\r\n\r\n\tconstructor( op, aNode, bNode, ...params ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.op = op;\r\n\r\n\t\tif ( params.length > 0 ) {\r\n\r\n\t\t\tlet finalBNode = bNode;\r\n\r\n\t\t\tfor ( let i = 0; i < params.length; i ++ ) {\r\n\r\n\t\t\t\tfinalBNode = new OperatorNode( op, finalBNode, params[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbNode = finalBNode;\r\n\r\n\t\t}\r\n\r\n\t\tthis.aNode = aNode;\r\n\t\tthis.bNode = bNode;\r\n\r\n\t}\r\n\r\n\thasDependencies( builder ) {\r\n\r\n\t\treturn this.op !== '=' ? super.hasDependencies( builder ) : false;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder, output ) {\r\n\r\n\t\tconst op = this.op;\r\n\r\n\t\tconst aNode = this.aNode;\r\n\t\tconst bNode = this.bNode;\r\n\r\n\t\tconst typeA = aNode.getNodeType( builder );\r\n\t\tconst typeB = bNode.getNodeType( builder );\r\n\r\n\t\tif ( typeA === 'void' || typeB === 'void' ) {\r\n\r\n\t\t\treturn 'void';\r\n\r\n\t\t} else if ( op === '=' || op === '%' ) {\r\n\r\n\t\t\treturn typeA;\r\n\r\n\t\t} else if ( op === '&' || op === '|' || op === '^' || op === '>>' || op === '<<' ) {\r\n\r\n\t\t\treturn builder.getIntegerType( typeA );\r\n\r\n\t\t} else if ( op === '==' || op === '&&' || op === '||' || op === '^^' ) {\r\n\r\n\t\t\treturn 'bool';\r\n\r\n\t\t} else if ( op === '<' || op === '>' || op === '<=' || op === '>=' ) {\r\n\r\n\t\t\tconst typeLength = builder.getTypeLength( output );\r\n\r\n\t\t\treturn typeLength > 1 ? `bvec${ typeLength }` : 'bool';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( typeA === 'float' && builder.isMatrix( typeB ) ) {\r\n\r\n\t\t\t\treturn typeB;\r\n\r\n\t\t\t} else if ( builder.isMatrix( typeA ) && builder.isVector( typeB ) ) {\r\n\r\n\t\t\t\t// matrix x vector\r\n\r\n\t\t\t\treturn builder.getVectorFromMatrix( typeA );\r\n\r\n\t\t\t} else if ( builder.isVector( typeA ) && builder.isMatrix( typeB ) ) {\r\n\r\n\t\t\t\t// vector x matrix\r\n\r\n\t\t\t\treturn builder.getVectorFromMatrix( typeB );\r\n\r\n\t\t\t} else if ( builder.getTypeLength( typeB ) > builder.getTypeLength( typeA ) ) {\r\n\r\n\t\t\t\t// anytype x anytype: use the greater length vector\r\n\r\n\t\t\t\treturn typeB;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn typeA;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst op = this.op;\r\n\r\n\t\tconst aNode = this.aNode;\r\n\t\tconst bNode = this.bNode;\r\n\r\n\t\tconst type = this.getNodeType( builder, output );\r\n\r\n\t\tlet typeA = null;\r\n\t\tlet typeB = null;\r\n\r\n\t\tif ( type !== 'void' ) {\r\n\r\n\t\t\ttypeA = aNode.getNodeType( builder );\r\n\t\t\ttypeB = bNode.getNodeType( builder );\r\n\r\n\t\t\tif ( op === '=' ) {\r\n\r\n\t\t\t\ttypeB = typeA;\r\n\r\n\t\t\t} else if ( op === '<' || op === '>' || op === '<=' || op === '>=' ) {\r\n\r\n\t\t\t\tif ( builder.isVector( typeA ) ) {\r\n\r\n\t\t\t\t\ttypeB = typeA;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttypeA = typeB = 'float';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( op === '>>' || op === '<<' ) {\r\n\r\n\t\t\t\ttypeA = type;\r\n\t\t\t\ttypeB = builder.changeComponentType( typeB, 'uint' );\r\n\r\n\t\t\t} else if ( builder.isMatrix( typeA ) && builder.isVector( typeB ) ) {\r\n\r\n\t\t\t\t// matrix x vector\r\n\r\n\t\t\t\ttypeB = builder.getVectorFromMatrix( typeA );\r\n\r\n\t\t\t} else if ( builder.isVector( typeA ) && builder.isMatrix( typeB ) ) {\r\n\r\n\t\t\t\t// vector x matrix\r\n\r\n\t\t\t\ttypeA = builder.getVectorFromMatrix( typeB );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// anytype x anytype\r\n\r\n\t\t\t\ttypeA = typeB = type;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttypeA = typeB = type;\r\n\r\n\t\t}\r\n\r\n\t\tconst a = aNode.build( builder, typeA );\r\n\t\tconst b = bNode.build( builder, typeB );\r\n\r\n\t\tconst outputLength = builder.getTypeLength( output );\r\n\r\n\t\tif ( output !== 'void' ) {\r\n\r\n\t\t\tif ( op === '=' ) {\r\n\r\n\t\t\t\tbuilder.addFlowCode( `${a} ${this.op} ${b}` );\r\n\r\n\t\t\t\treturn a;\r\n\r\n\t\t\t} else if ( op === '<' && outputLength > 1 ) {\r\n\r\n\t\t\t\treturn builder.format( `${ builder.getMethod( 'lessThan' ) }( ${a}, ${b} )`, type, output );\r\n\r\n\t\t\t} else if ( op === '<=' && outputLength > 1 ) {\r\n\r\n\t\t\t\treturn builder.format( `${ builder.getMethod( 'lessThanEqual' ) }( ${a}, ${b} )`, type, output );\r\n\r\n\t\t\t} else if ( op === '>' && outputLength > 1 ) {\r\n\r\n\t\t\t\treturn builder.format( `${ builder.getMethod( 'greaterThan' ) }( ${a}, ${b} )`, type, output );\r\n\r\n\t\t\t} else if ( op === '>=' && outputLength > 1 ) {\r\n\r\n\t\t\t\treturn builder.format( `${ builder.getMethod( 'greaterThanEqual' ) }( ${a}, ${b} )`, type, output );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn builder.format( `( ${a} ${this.op} ${b} )`, type, output );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( typeA !== 'void' ) {\r\n\r\n\t\t\treturn builder.format( `${a} ${this.op} ${b}`, type, output );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.op = this.op;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.op = data.op;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default OperatorNode;\r\n", "import Node from './Node.js';\r\nimport OperatorNode from '../math/OperatorNode.js';\r\n\r\nclass VarNode extends Node {\r\n\r\n\tconstructor( node, name = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.node = node;\r\n\t\tthis.name = name;\r\n\r\n\t}\r\n\r\n\top( op, ...params ) {\r\n\r\n\t\tthis.node = new OperatorNode( op, this.node, ...params );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tassign( ...params ) {\r\n\r\n\t\treturn this.op( '=', ...params );\r\n\r\n\t}\r\n\r\n\tadd( ...params ) {\r\n\r\n\t\treturn this.op( '+', ...params );\r\n\r\n\t}\r\n\r\n\tsub( ...params ) {\r\n\r\n\t\treturn this.op( '-', ...params );\r\n\r\n\t}\r\n\r\n\tmul( ...params ) {\r\n\r\n\t\treturn this.op( '*', ...params );\r\n\r\n\t}\r\n\r\n\tdiv( ...params ) {\r\n\r\n\t\treturn this.op( '/', ...params );\r\n\r\n\t}\r\n\r\n\tisGlobal() {\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tgetHash( builder ) {\r\n\r\n\t\treturn this.name || super.getHash( builder );\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.node.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst node = this.node;\r\n\t\tconst name = this.name;\r\n\r\n\t\tif ( name === null && node.isTempNode === true ) {\r\n\r\n\t\t\treturn node.build( builder );\r\n\r\n\t\t}\r\n\r\n\t\tconst type = builder.getVectorType( this.getNodeType( builder ) );\r\n\r\n\t\tconst snippet = node.build( builder, type );\r\n\t\tconst nodeVar = builder.getVarFromNode( this, type );\r\n\r\n\t\tif ( name !== null ) {\r\n\r\n\t\t\tnodeVar.name = name;\r\n\r\n\t\t}\r\n\r\n\t\tconst propertyName = builder.getPropertyName( nodeVar );\r\n\r\n\t\tbuilder.addFlowCode( `${propertyName} = ${snippet}` );\r\n\r\n\t\treturn propertyName;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default VarNode;\r\n", "import Node from '../core/Node.js';\r\nimport { vector } from '../core/NodeBuilder.js';\r\n\r\nconst vectorComponents = 'xyzw';\r\n\r\nclass SplitNode extends Node {\r\n\r\n\tconstructor( node, components = 'x' ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.node = node;\r\n\t\tthis.components = components;\r\n\r\n\t}\r\n\r\n\tgetVectorLength() {\r\n\r\n\t\tlet vectorLength = this.components.length;\r\n\r\n\t\tfor ( const c of this.components ) {\r\n\r\n\t\t\tvectorLength = Math.max( vector.indexOf( c ) + 1, vectorLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn vectorLength;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn builder.getTypeFromLength( this.components.length );\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst node = this.node;\r\n\t\tconst nodeTypeLength = builder.getTypeLength( node.getNodeType( builder ) );\r\n\r\n\t\tlet snippet = null;\r\n\r\n\t\tif ( nodeTypeLength > 1 ) {\r\n\r\n\t\t\tlet type = null;\r\n\r\n\t\t\tconst componentsLength = this.getVectorLength();\r\n\r\n\t\t\tif ( componentsLength >= nodeTypeLength ) {\r\n\r\n\t\t\t\t// needed expand the input node\r\n\r\n\t\t\t\ttype = builder.getTypeFromLength( this.getVectorLength() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst nodeSnippet = node.build( builder, type );\r\n\r\n\t\t\tif ( this.components.length === nodeTypeLength && this.components === vectorComponents.slice( 0, this.components.length ) ) {\r\n\r\n\t\t\t\t// unecessary swizzle\r\n\r\n\t\t\t\tsnippet = builder.format( nodeSnippet, type, output );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsnippet = builder.format( `${nodeSnippet}.${this.components}`, this.getNodeType( builder ), output );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// ignore .components if .node returns float/integer\r\n\r\n\t\t\tsnippet = node.build( builder, output );\r\n\r\n\t\t}\r\n\r\n\t\treturn snippet;\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.components = this.components;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.components = data.components;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default SplitNode;\r\n", "import TempNode from '../core/TempNode.js';\r\nimport ExpressionNode from '../core/ExpressionNode.js';\r\nimport SplitNode from '../utils/SplitNode.js';\r\nimport OperatorNode from './OperatorNode.js';\r\n\r\nclass MathNode extends TempNode {\r\n\r\n\tconstructor( method, aNode, bNode = null, cNode = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.method = method;\r\n\r\n\t\tthis.aNode = aNode;\r\n\t\tthis.bNode = bNode;\r\n\t\tthis.cNode = cNode;\r\n\r\n\t}\r\n\r\n\tgetInputType( builder ) {\r\n\r\n\t\tconst aType = this.aNode.getNodeType( builder );\r\n\t\tconst bType = this.bNode ? this.bNode.getNodeType( builder ) : null;\r\n\t\tconst cType = this.cNode ? this.cNode.getNodeType( builder ) : null;\r\n\r\n\t\tconst aLen = builder.isMatrix( aType ) ? 0 : builder.getTypeLength( aType );\r\n\t\tconst bLen = builder.isMatrix( bType ) ? 0 : builder.getTypeLength( bType );\r\n\t\tconst cLen = builder.isMatrix( cType ) ? 0 : builder.getTypeLength( cType );\r\n\r\n\t\tif ( aLen > bLen && aLen > cLen ) {\r\n\r\n\t\t\treturn aType;\r\n\r\n\t\t} else if ( bLen > cLen ) {\r\n\r\n\t\t\treturn bType;\r\n\r\n\t\t} else if ( cLen > aLen ) {\r\n\r\n\t\t\treturn cType;\r\n\r\n\t\t}\r\n\r\n\t\treturn aType;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\tconst method = this.method;\r\n\r\n\t\tif ( method === MathNode.LENGTH || method === MathNode.DISTANCE || method === MathNode.DOT ) {\r\n\r\n\t\t\treturn 'float';\r\n\r\n\t\t} else if ( method === MathNode.CROSS ) {\r\n\r\n\t\t\treturn 'vec3';\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn this.getInputType( builder );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst method = this.method;\r\n\r\n\t\tconst type = this.getNodeType( builder );\r\n\t\tconst inputType = this.getInputType( builder );\r\n\r\n\t\tconst a = this.aNode;\r\n\t\tconst b = this.bNode;\r\n\t\tconst c = this.cNode;\r\n\r\n\t\tconst isWebGL = builder.renderer.isWebGLRenderer === true;\r\n\r\n\t\tif ( method === MathNode.TRANSFORM_DIRECTION ) {\r\n\r\n\t\t\t// dir can be either a direction vector or a normal vector\r\n\t\t\t// upper-left 3x3 of matrix is assumed to be orthogonal\r\n\r\n\t\t\tlet tA = a;\r\n\t\t\tlet tB = b;\r\n\r\n\t\t\tif ( builder.isMatrix( tA.getNodeType( builder ) ) ) {\r\n\r\n\t\t\t\ttB = new ExpressionNode( `${ builder.getType( 'vec4' ) }( ${ tB.build( builder, 'vec3' ) }, 0.0 )`, 'vec4' );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttA = new ExpressionNode( `${ builder.getType( 'vec4' ) }( ${ tA.build( builder, 'vec3' ) }, 0.0 )`, 'vec4' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst mulNode = new SplitNode( new OperatorNode( '*', tA, tB ), 'xyz' );\r\n\r\n\t\t\treturn new MathNode( MathNode.NORMALIZE, mulNode ).build( builder );\r\n\r\n\t\t} else if ( method === MathNode.NEGATE ) {\r\n\r\n\t\t\treturn builder.format( '( -' + a.build( builder, inputType ) + ' )', type, output );\r\n\r\n\t\t} else if ( method === MathNode.INVERT ) {\r\n\r\n\t\t\treturn builder.format( '( 1.0 - ' + a.build( builder, inputType ) + ' )', type, output );\r\n\r\n\t\t} else if ( method === MathNode.RECIPROCAL ) {\r\n\r\n\t\t\treturn builder.format( '( 1.0 / ' + a.build( builder, inputType ) + ' )', type, output );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst params = [];\r\n\r\n\t\t\tif ( method === MathNode.CROSS ) {\r\n\r\n\t\t\t\tparams.push(\r\n\t\t\t\t\ta.build( builder, type ),\r\n\t\t\t\t\tb.build( builder, type )\r\n\t\t\t\t);\r\n\r\n\t\t\t} else if ( method === MathNode.STEP ) {\r\n\r\n\t\t\t\tparams.push(\r\n\t\t\t\t\ta.build( builder, builder.getTypeLength( a.getNodeType( builder ) ) === 1 ? 'float' : inputType ),\r\n\t\t\t\t\tb.build( builder, inputType )\r\n\t\t\t\t);\r\n\r\n\t\t\t} else if ( ( isWebGL && ( method === MathNode.MIN || method === MathNode.MAX ) ) || method === MathNode.MOD ) {\r\n\r\n\t\t\t\tparams.push(\r\n\t\t\t\t\ta.build( builder, inputType ),\r\n\t\t\t\t\tb.build( builder, builder.getTypeLength( b.getNodeType( builder ) ) === 1 ? 'float' : inputType )\r\n\t\t\t\t);\r\n\r\n\t\t\t} else if ( method === MathNode.REFRACT ) {\r\n\r\n\t\t\t\tparams.push(\r\n\t\t\t\t\ta.build( builder, inputType ),\r\n\t\t\t\t\tb.build( builder, inputType ),\r\n\t\t\t\t\tc.build( builder, 'float' )\r\n\t\t\t\t);\r\n\r\n\t\t\t} else if ( method === MathNode.MIX ) {\r\n\r\n\t\t\t\tparams.push(\r\n\t\t\t\t\ta.build( builder, inputType ),\r\n\t\t\t\t\tb.build( builder, inputType ),\r\n\t\t\t\t\tc.build( builder, builder.getTypeLength( c.getNodeType( builder ) ) === 1 ? 'float' : inputType )\r\n\t\t\t\t);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tparams.push( a.build( builder, inputType ) );\r\n\r\n\t\t\t\tif ( c !== null ) {\r\n\r\n\t\t\t\t\tparams.push( b.build( builder, inputType ), c.build( builder, inputType ) );\r\n\r\n\t\t\t\t} else if ( b !== null ) {\r\n\r\n\t\t\t\t\tparams.push( b.build( builder, inputType ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn builder.format( `${ builder.getMethod( method ) }( ${params.join( ', ' )} )`, type, output );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.method = this.method;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.method = data.method;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// 1 input\r\n\r\nMathNode.RADIANS = 'radians';\r\nMathNode.DEGREES = 'degrees';\r\nMathNode.EXP = 'exp';\r\nMathNode.EXP2 = 'exp2';\r\nMathNode.LOG = 'log';\r\nMathNode.LOG2 = 'log2';\r\nMathNode.SQRT = 'sqrt';\r\nMathNode.INVERSE_SQRT = 'inversesqrt';\r\nMathNode.FLOOR = 'floor';\r\nMathNode.CEIL = 'ceil';\r\nMathNode.NORMALIZE = 'normalize';\r\nMathNode.FRACT = 'fract';\r\nMathNode.SIN = 'sin';\r\nMathNode.COS = 'cos';\r\nMathNode.TAN = 'tan';\r\nMathNode.ASIN = 'asin';\r\nMathNode.ACOS = 'acos';\r\nMathNode.ATAN = 'atan';\r\nMathNode.ABS = 'abs';\r\nMathNode.SIGN = 'sign';\r\nMathNode.LENGTH = 'length';\r\nMathNode.NEGATE = 'negate';\r\nMathNode.INVERT = 'invert';\r\nMathNode.DFDX = 'dFdx';\r\nMathNode.DFDY = 'dFdy';\r\nMathNode.ROUND = 'round';\r\nMathNode.RECIPROCAL = 'reciprocal';\r\n\r\n// 2 inputs\r\n\r\nMathNode.ATAN2 = 'atan2';\r\nMathNode.MIN = 'min';\r\nMathNode.MAX = 'max';\r\nMathNode.MOD = 'mod';\r\nMathNode.STEP = 'step';\r\nMathNode.REFLECT = 'reflect';\r\nMathNode.DISTANCE = 'distance';\r\nMathNode.DOT = 'dot';\r\nMathNode.CROSS = 'cross';\r\nMathNode.POW = 'pow';\r\nMathNode.TRANSFORM_DIRECTION = 'transformDirection';\r\n\r\n// 3 inputs\r\n\r\nMathNode.MIX = 'mix';\r\nMathNode.CLAMP = 'clamp';\r\nMathNode.REFRACT = 'refract';\r\nMathNode.SMOOTHSTEP = 'smoothstep';\r\nMathNode.FACEFORWARD = 'faceforward';\r\n\r\nexport default MathNode;\r\n", "import { Vector3 } from 'three';\r\nimport Node from '../core/Node.js';\r\nimport UniformNode from '../core/UniformNode.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\n\r\nclass Object3DNode extends Node {\r\n\r\n\tconstructor( scope = Object3DNode.VIEW_MATRIX, object3d = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.scope = scope;\r\n\t\tthis.object3d = object3d;\r\n\r\n\t\tthis.updateType = NodeUpdateType.OBJECT;\r\n\r\n\t\tthis._uniformNode = new UniformNode( null );\r\n\r\n\t}\r\n\r\n\tgetNodeType() {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tif ( scope === Object3DNode.WORLD_MATRIX || scope === Object3DNode.VIEW_MATRIX ) {\r\n\r\n\t\t\treturn 'mat4';\r\n\r\n\t\t} else if ( scope === Object3DNode.NORMAL_MATRIX ) {\r\n\r\n\t\t\treturn 'mat3';\r\n\r\n\t\t} else if ( scope === Object3DNode.POSITION || scope === Object3DNode.VIEW_POSITION || scope === Object3DNode.DIRECTION ) {\r\n\r\n\t\t\treturn 'vec3';\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdate( frame ) {\r\n\r\n\t\tconst object = this.object3d;\r\n\t\tconst uniformNode = this._uniformNode;\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tif ( scope === Object3DNode.VIEW_MATRIX ) {\r\n\r\n\t\t\tuniformNode.value = object.modelViewMatrix;\r\n\r\n\t\t} else if ( scope === Object3DNode.NORMAL_MATRIX ) {\r\n\r\n\t\t\tuniformNode.value = object.normalMatrix;\r\n\r\n\t\t} else if ( scope === Object3DNode.WORLD_MATRIX ) {\r\n\r\n\t\t\tuniformNode.value = object.matrixWorld;\r\n\r\n\t\t} else if ( scope === Object3DNode.POSITION ) {\r\n\r\n\t\t\tuniformNode.value = uniformNode.value || new Vector3();\r\n\r\n\t\t\tuniformNode.value.setFromMatrixPosition( object.matrixWorld );\r\n\r\n\t\t} else if ( scope === Object3DNode.DIRECTION ) {\r\n\r\n\t\t\tuniformNode.value = uniformNode.value || new Vector3();\r\n\r\n\t\t\tobject.getWorldDirection( uniformNode.value );\r\n\r\n\t\t} else if ( scope === Object3DNode.VIEW_POSITION ) {\r\n\r\n\t\t\tconst camera = frame.camera;\r\n\r\n\t\t\tuniformNode.value = uniformNode.value || new Vector3();\r\n\t\t\tuniformNode.value.setFromMatrixPosition( object.matrixWorld );\r\n\r\n\t\t\tuniformNode.value.applyMatrix4( camera.matrixWorldInverse );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tif ( scope === Object3DNode.WORLD_MATRIX || scope === Object3DNode.VIEW_MATRIX ) {\r\n\r\n\t\t\tthis._uniformNode.nodeType = 'mat4';\r\n\r\n\t\t} else if ( scope === Object3DNode.NORMAL_MATRIX ) {\r\n\r\n\t\t\tthis._uniformNode.nodeType = 'mat3';\r\n\r\n\t\t} else if ( scope === Object3DNode.POSITION || scope === Object3DNode.VIEW_POSITION || scope === Object3DNode.DIRECTION ) {\r\n\r\n\t\t\tthis._uniformNode.nodeType = 'vec3';\r\n\r\n\t\t}\r\n\r\n\t\treturn this._uniformNode.build( builder );\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.scope = this.scope;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.scope = data.scope;\r\n\r\n\t}\r\n\r\n}\r\n\r\nObject3DNode.VIEW_MATRIX = 'viewMatrix';\r\nObject3DNode.NORMAL_MATRIX = 'normalMatrix';\r\nObject3DNode.WORLD_MATRIX = 'worldMatrix';\r\nObject3DNode.POSITION = 'position';\r\nObject3DNode.VIEW_POSITION = 'viewPosition';\r\nObject3DNode.DIRECTION = 'direction';\r\n\r\nexport default Object3DNode;\r\n", "import Object3DNode from './Object3DNode.js';\r\n\r\nclass ModelNode extends Object3DNode {\r\n\r\n\tconstructor( scope = ModelNode.VIEW_MATRIX ) {\r\n\r\n\t\tsuper( scope );\r\n\r\n\t}\r\n\r\n\tupdate( frame ) {\r\n\r\n\t\tthis.object3d = frame.object;\r\n\r\n\t\tsuper.update( frame );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ModelNode;\r\n", "import Object3DNode from './Object3DNode.js';\r\n\r\nclass CameraNode extends Object3DNode {\r\n\r\n\tconstructor( scope = CameraNode.POSITION ) {\r\n\r\n\t\tsuper( scope );\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tif ( scope === CameraNode.PROJECTION_MATRIX ) {\r\n\r\n\t\t\treturn 'mat4';\r\n\r\n\t\t}\r\n\r\n\t\treturn super.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tupdate( frame ) {\r\n\r\n\t\tconst camera = frame.camera;\r\n\t\tconst uniformNode = this._uniformNode;\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tif ( scope === CameraNode.PROJECTION_MATRIX ) {\r\n\r\n\t\t\tuniformNode.value = camera.projectionMatrix;\r\n\r\n\t\t} else if ( scope === CameraNode.VIEW_MATRIX ) {\r\n\r\n\t\t\tuniformNode.value = camera.matrixWorldInverse;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.object3d = camera;\r\n\r\n\t\t\tsuper.update( frame );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tif ( scope === CameraNode.PROJECTION_MATRIX ) {\r\n\r\n\t\t\tthis._uniformNode.nodeType = 'mat4';\r\n\r\n\t\t}\r\n\r\n\t\treturn super.generate( builder );\r\n\r\n\t}\r\n\r\n}\r\n\r\nCameraNode.PROJECTION_MATRIX = 'projectionMatrix';\r\n\r\nexport default CameraNode;\r\n", "import Node from '../core/Node.js';\r\nimport AttributeNode from '../core/AttributeNode.js';\r\nimport VaryingNode from '../core/VaryingNode.js';\r\nimport ModelNode from '../accessors/ModelNode.js';\r\nimport CameraNode from '../accessors/CameraNode.js';\r\nimport OperatorNode from '../math/OperatorNode.js';\r\nimport MathNode from '../math/MathNode.js';\r\n\r\nclass NormalNode extends Node {\r\n\r\n\tconstructor( scope = NormalNode.LOCAL ) {\r\n\r\n\t\tsuper( 'vec3' );\r\n\r\n\t\tthis.scope = scope;\r\n\r\n\t}\r\n\r\n\tisGlobal() {\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tgetHash( /*builder*/ ) {\r\n\r\n\t\treturn `normal-${this.scope}`;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tlet outputNode = null;\r\n\r\n\t\tif ( scope === NormalNode.GEOMETRY ) {\r\n\r\n\t\t\toutputNode = new AttributeNode( 'normal', 'vec3' );\r\n\r\n\t\t} else if ( scope === NormalNode.LOCAL ) {\r\n\r\n\t\t\toutputNode = new VaryingNode( new NormalNode( NormalNode.GEOMETRY ) );\r\n\r\n\t\t} else if ( scope === NormalNode.VIEW ) {\r\n\r\n\t\t\tconst vertexNode = new OperatorNode( '*', new ModelNode( ModelNode.NORMAL_MATRIX ), new NormalNode( NormalNode.LOCAL ) );\r\n\t\t\toutputNode = new MathNode( MathNode.NORMALIZE, new VaryingNode( vertexNode ) );\r\n\r\n\t\t} else if ( scope === NormalNode.WORLD ) {\r\n\r\n\t\t\t// To use INVERSE_TRANSFORM_DIRECTION only inverse the param order like this: MathNode( ..., Vector, Matrix );\r\n\t\t\tconst vertexNode = new MathNode( MathNode.TRANSFORM_DIRECTION, new NormalNode( NormalNode.VIEW ), new CameraNode( CameraNode.VIEW_MATRIX ) );\r\n\t\t\toutputNode = new MathNode( MathNode.NORMALIZE, new VaryingNode( vertexNode ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn outputNode.build( builder, this.getNodeType( builder ) );\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.scope = this.scope;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.scope = data.scope;\r\n\r\n\t}\r\n\r\n}\r\n\r\nNormalNode.GEOMETRY = 'geometry';\r\nNormalNode.LOCAL = 'local';\r\nNormalNode.VIEW = 'view';\r\nNormalNode.WORLD = 'world';\r\n\r\nexport default NormalNode;\r\n", "import Node from '../core/Node.js';\r\nimport AttributeNode from '../core/AttributeNode.js';\r\nimport VaryingNode from '../core/VaryingNode.js';\r\nimport ModelNode from '../accessors/ModelNode.js';\r\nimport CameraNode from '../accessors/CameraNode.js';\r\nimport OperatorNode from '../math/OperatorNode.js';\r\nimport MathNode from '../math/MathNode.js';\r\nimport SplitNode from '../utils/SplitNode.js';\r\n\r\nclass TangentNode extends Node {\r\n\r\n\tconstructor( scope = TangentNode.LOCAL ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.scope = scope;\r\n\r\n\t}\r\n\r\n\tgetHash( /*builder*/ ) {\r\n\r\n\t\treturn `tangent-${this.scope}`;\r\n\r\n\t}\r\n\r\n\tgetNodeType() {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tif ( scope === TangentNode.GEOMETRY ) {\r\n\r\n\t\t\treturn 'vec4';\r\n\r\n\t\t}\r\n\r\n\t\treturn 'vec3';\r\n\r\n\t}\r\n\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tlet outputNode = null;\r\n\r\n\t\tif ( scope === TangentNode.GEOMETRY ) {\r\n\r\n\t\t\toutputNode = new AttributeNode( 'tangent', 'vec4' );\r\n\r\n\t\t} else if ( scope === TangentNode.LOCAL ) {\r\n\r\n\t\t\toutputNode = new VaryingNode( new SplitNode( new TangentNode( TangentNode.GEOMETRY ), 'xyz' ) );\r\n\r\n\t\t} else if ( scope === TangentNode.VIEW ) {\r\n\r\n\t\t\tconst vertexNode = new SplitNode( new OperatorNode( '*', new ModelNode( ModelNode.VIEW_MATRIX ), new TangentNode( TangentNode.LOCAL ) ), 'xyz' );\r\n\r\n\t\t\toutputNode = new MathNode( MathNode.NORMALIZE, new VaryingNode( vertexNode ) );\r\n\r\n\t\t} else if ( scope === TangentNode.WORLD ) {\r\n\r\n\t\t\tconst vertexNode = new MathNode( MathNode.TRANSFORM_DIRECTION, new TangentNode( TangentNode.VIEW ), new CameraNode( CameraNode.VIEW_MATRIX ) );\r\n\t\t\toutputNode = new MathNode( MathNode.NORMALIZE, new VaryingNode( vertexNode ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn outputNode.build( builder, this.getNodeType( builder ) );\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.scope = this.scope;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.scope = data.scope;\r\n\r\n\t}\r\n\r\n}\r\n\r\nTangentNode.GEOMETRY = 'geometry';\r\nTangentNode.LOCAL = 'local';\r\nTangentNode.VIEW = 'view';\r\nTangentNode.WORLD = 'world';\r\n\r\nexport default TangentNode;\r\n", "import Node from '../core/Node.js';\r\nimport VaryingNode from '../core/VaryingNode.js';\r\nimport OperatorNode from '../math/OperatorNode.js';\r\nimport MathNode from '../math/MathNode.js';\r\nimport SplitNode from '../utils/SplitNode.js';\r\nimport NormalNode from './NormalNode.js';\r\nimport TangentNode from './TangentNode.js';\r\n\r\nclass BitangentNode extends Node {\r\n\r\n\tconstructor( scope = BitangentNode.LOCAL ) {\r\n\r\n\t\tsuper( 'vec3' );\r\n\r\n\t\tthis.scope = scope;\r\n\r\n\t}\r\n\r\n\tgetHash( /*builder*/ ) {\r\n\r\n\t\treturn `bitangent-${this.scope}`;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tconst crossNormalTangent = new MathNode( MathNode.CROSS, new NormalNode( scope ), new TangentNode( scope ) );\r\n\t\tconst tangentW = new SplitNode( new TangentNode( TangentNode.GEOMETRY ), 'w' );\r\n\t\tconst vertexNode = new SplitNode( new OperatorNode( '*', crossNormalTangent, tangentW ), 'xyz' );\r\n\r\n\t\tconst outputNode = new MathNode( MathNode.NORMALIZE, new VaryingNode( vertexNode ) );\r\n\r\n\t\treturn outputNode.build( builder, this.getNodeType( builder ) );\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.scope = this.scope;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.scope = data.scope;\r\n\r\n\t}\r\n\r\n}\r\n\r\nBitangentNode.GEOMETRY = 'geometry';\r\nBitangentNode.LOCAL = 'local';\r\nBitangentNode.VIEW = 'view';\r\nBitangentNode.WORLD = 'world';\r\n\r\nexport default BitangentNode;\r\n", "import UniformNode from '../core/UniformNode.js';\r\n\r\nclass BufferNode extends UniformNode {\r\n\r\n\tconstructor( value, bufferType, bufferCount = 0 ) {\r\n\r\n\t\tsuper( value, bufferType );\r\n\r\n\t\tthis.isBufferNode = true;\r\n\r\n\t\tthis.bufferType = bufferType;\r\n\t\tthis.bufferCount = bufferCount;\r\n\r\n\t}\r\n\r\n\tgetInputType( /*builder*/ ) {\r\n\r\n\t\treturn 'buffer';\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default BufferNode;\r\n", "import TempNode from '../core/Node.js';\r\n\r\nclass JoinNode extends TempNode {\r\n\r\n\tconstructor( nodes = [], nodeType = null ) {\r\n\r\n\t\tsuper( nodeType );\r\n\r\n\t\tthis.nodes = nodes;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\tif ( this.nodeType !== null ) {\r\n\r\n\t\t\treturn builder.getVectorType( this.nodeType );\r\n\r\n\t\t}\r\n\r\n\t\treturn builder.getTypeFromLength( this.nodes.reduce( ( count, cur ) => count + builder.getTypeLength( cur.getNodeType( builder ) ), 0 ) );\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst type = this.getNodeType( builder );\r\n\t\tconst nodes = this.nodes;\r\n\r\n\t\tconst snippetValues = [];\r\n\r\n\t\tfor ( const input of nodes ) {\r\n\r\n\t\t\tconst inputSnippet = input.build( builder );\r\n\r\n\t\t\tsnippetValues.push( inputSnippet );\r\n\r\n\t\t}\r\n\r\n\t\tconst snippet = `${ builder.getType( type ) }( ${ snippetValues.join( ', ' ) } )`;\r\n\r\n\t\treturn builder.format( snippet, type, output );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default JoinNode;\r\n", "import Node from '../core/Node.js';\r\nimport UniformNode from '../core/UniformNode.js';\r\nimport TextureNode from '../accessors/TextureNode.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\n\r\nclass ReferenceNode extends Node {\r\n\r\n\tconstructor( property, uniformType, object = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.property = property;\r\n\r\n\t\tthis.uniformType = uniformType;\r\n\r\n\t\tthis.object = object;\r\n\r\n\t\tthis.node = null;\r\n\r\n\t\tthis.updateType = NodeUpdateType.OBJECT;\r\n\r\n\t\tthis.setNodeType( uniformType );\r\n\r\n\t}\r\n\r\n\tsetNodeType( uniformType ) {\r\n\r\n\t\tlet node = null;\r\n\r\n\t\tif ( uniformType === 'texture' ) {\r\n\r\n\t\t\tnode = new TextureNode( null );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tnode = new UniformNode( null, uniformType );\r\n\r\n\t\t}\r\n\r\n\t\tthis.node = node;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.node.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tupdate( frame ) {\r\n\r\n\t\tconst object = this.object !== null ? this.object : frame.object;\r\n\t\tconst property = this.property;\r\n\r\n\t\tthis.node.value = object[ property ];\r\n\r\n\t}\r\n\r\n\tconstruct( /*builder*/ ) {\r\n\r\n\t\treturn this.node;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ReferenceNode;\r\n", "import ReferenceNode from './ReferenceNode.js';\r\n\r\nclass MaterialReferenceNode extends ReferenceNode {\r\n\r\n\tconstructor( property, inputType, material = null ) {\r\n\r\n\t\tsuper( property, inputType, material );\r\n\r\n\t\tthis.material = material;\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) {\r\n\r\n\t\tconst material = this.material !== null ? this.material : builder.material;\r\n\r\n\t\tthis.node.value = material[ this.property ];\r\n\r\n\t\treturn super.construct( builder );\r\n\r\n\t}\r\n\r\n\tupdate( frame ) {\r\n\r\n\t\tthis.object = this.material !== null ? this.material : frame.material;\r\n\r\n\t\tsuper.update( frame );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default MaterialReferenceNode;\r\n", "import Node from '../core/Node.js';\r\nimport UniformNode from '../core/UniformNode.js';\r\nimport UVNode from '../accessors/UVNode.js';\r\nimport ConstNode from '../core/ConstNode.js';\r\nimport OperatorNode from '../math/OperatorNode.js';\r\nimport JoinNode from '../utils/JoinNode.js';\r\nimport MaterialReferenceNode from './MaterialReferenceNode.js';\r\nimport SplitNode from '../utils/SplitNode.js';\r\n\r\nclass MaterialNode extends Node {\r\n\r\n\tconstructor( scope ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.scope = scope;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\t\tconst material = builder.context.material;\r\n\r\n\t\tif ( scope === MaterialNode.COLOR ) {\r\n\r\n\t\t\treturn material.map !== null ? 'vec4' : 'vec3';\r\n\r\n\t\t} else if ( scope === MaterialNode.OPACITY || scope === MaterialNode.ROTATION ) {\r\n\r\n\t\t\treturn 'float';\r\n\r\n\t\t} else if ( scope === MaterialNode.UV ) {\r\n\r\n\t\t\treturn 'vec2';\r\n\r\n\t\t} else if ( scope === MaterialNode.EMISSIVE ) {\r\n\r\n\t\t\treturn 'vec3';\r\n\r\n\t\t} else if ( scope === MaterialNode.ROUGHNESS || scope === MaterialNode.METALNESS || scope === MaterialNode.SPECULAR || scope === MaterialNode.SHININESS ) {\r\n\r\n\t\t\treturn 'float';\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetFloat( property ) {\r\n\r\n\t\t//@TODO: Check if it can be cached by property name.\r\n\r\n\t\treturn new MaterialReferenceNode( property, 'float' );\r\n\r\n\t}\r\n\r\n\tgetColor( property ) {\r\n\r\n\t\t//@TODO: Check if it can be cached by property name.\r\n\r\n\t\treturn new MaterialReferenceNode( property, 'color' );\r\n\r\n\t}\r\n\r\n\tgetTexture( property ) {\r\n\r\n\t\t//@TODO: Check if it can be cached by property name.\r\n\r\n\t\tconst textureRefNode = new MaterialReferenceNode( property, 'texture' );\r\n\t\ttextureRefNode.node.uvNode = new MaterialNode( MaterialNode.UV );\r\n\r\n\t\treturn textureRefNode;\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) {\r\n\r\n\t\tconst material = builder.context.material;\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tlet node = null;\r\n\r\n\t\tif ( scope === MaterialNode.ALPHA_TEST ) {\r\n\r\n\t\t\tnode = this.getFloat( 'alphaTest' );\r\n\r\n\t\t} else if ( scope === MaterialNode.COLOR ) {\r\n\r\n\t\t\tconst colorNode = this.getColor( 'color' );\r\n\r\n\t\t\tif ( material.map && material.map.isTexture === true ) {\r\n\r\n\t\t\t\tnode = new OperatorNode( '*', colorNode, this.getTexture( 'map' ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode = colorNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( scope === MaterialNode.OPACITY ) {\r\n\r\n\t\t\tconst opacityNode = this.getFloat( 'opacity' );\r\n\r\n\t\t\tif ( material.alphaMap && material.alphaMap.isTexture === true ) {\r\n\r\n\t\t\t\tnode = new OperatorNode( '*', opacityNode, this.getTexture( 'alphaMap' ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode = opacityNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( scope === MaterialNode.SHININESS ) {\r\n\r\n\t\t\tnode = this.getFloat( 'shininess' );\r\n\r\n\t\t} else if ( scope === MaterialNode.SPECULAR_COLOR ) {\r\n\r\n\t\t\tnode = this.getColor( 'specular' );\r\n\r\n\t\t} else if ( scope === MaterialNode.REFLECTIVITY ) {\r\n\r\n\t\t\tconst reflectivityNode = this.getFloat( 'reflectivity' );\r\n\r\n\t\t\tif ( material.specularMap && material.specularMap.isTexture === true ) {\r\n\r\n\t\t\t\tnode = new OperatorNode( '*', reflectivityNode, new SplitNode( this.getTexture( 'specularMap' ), 'r' ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode = reflectivityNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( scope === MaterialNode.ROUGHNESS ) {\r\n\r\n\t\t\tconst roughnessNode = this.getFloat( 'roughness' );\r\n\r\n\t\t\tif ( material.roughnessMap && material.roughnessMap.isTexture === true ) {\r\n\r\n\t\t\t\tnode = new OperatorNode( '*', roughnessNode, new SplitNode( this.getTexture( 'roughnessMap' ), 'g' ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode = roughnessNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( scope === MaterialNode.METALNESS ) {\r\n\r\n\t\t\tconst metalnessNode = this.getFloat( 'metalness' );\r\n\r\n\t\t\tif ( material.metalnessMap && material.metalnessMap.isTexture === true ) {\r\n\r\n\t\t\t\tnode = new OperatorNode( '*', metalnessNode, new SplitNode( this.getTexture( 'metalnessMap' ), 'b' ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode = metalnessNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( scope === MaterialNode.EMISSIVE ) {\r\n\r\n\t\t\tconst emissiveNode = this.getColor( 'emissive' );\r\n\r\n\t\t\tif ( material.emissiveMap && material.emissiveMap.isTexture === true ) {\r\n\r\n\t\t\t\tnode = new OperatorNode( '*', emissiveNode, this.getTexture( 'emissiveMap' ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode = emissiveNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( scope === MaterialNode.ROTATION ) {\r\n\r\n\t\t\tnode = this.getFloat( 'rotation' );\r\n\r\n\t\t} else if ( scope === MaterialNode.UV ) {\r\n\r\n\t\t\t// uv repeat and offset setting priorities\r\n\r\n\t\t\tlet uvNode;\r\n\t\t\tlet uvScaleMap =\r\n\t\t\t\tmaterial.map ||\r\n\t\t\t\tmaterial.specularMap ||\r\n\t\t\t\tmaterial.displacementMap ||\r\n\t\t\t\tmaterial.normalMap ||\r\n\t\t\t\tmaterial.bumpMap ||\r\n\t\t\t\tmaterial.roughnessMap ||\r\n\t\t\t\tmaterial.metalnessMap ||\r\n\t\t\t\tmaterial.alphaMap ||\r\n\t\t\t\tmaterial.emissiveMap ||\r\n\t\t\t\tmaterial.clearcoatMap ||\r\n\t\t\t\tmaterial.clearcoatNormalMap ||\r\n\t\t\t\tmaterial.clearcoatRoughnessMap ||\r\n\t\t\t\tmaterial.iridescenceMap ||\r\n\t\t\t\tmaterial.iridescenceThicknessMap ||\r\n\t\t\t\tmaterial.specularIntensityMap ||\r\n\t\t\t\tmaterial.specularColorMap ||\r\n\t\t\t\tmaterial.transmissionMap ||\r\n\t\t\t\tmaterial.thicknessMap ||\r\n\t\t\t\tmaterial.sheenColorMap ||\r\n\t\t\t\tmaterial.sheenRoughnessMap;\r\n\r\n\t\t\tif ( uvScaleMap ) {\r\n\r\n\t\t\t\t// backwards compatibility\r\n\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\r\n\r\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\r\n\r\n\t\t\t\t\tuvScaleMap.updateMatrix();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuvNode = new OperatorNode( '*', new UniformNode( uvScaleMap.matrix ), new JoinNode( [ new UVNode(), new ConstNode( 1 ) ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn uvNode || new UVNode();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst outputType = this.getNodeType( builder );\r\n\r\n\t\t\tnode = new MaterialReferenceNode( scope, outputType );\r\n\r\n\t\t}\r\n\r\n\t\treturn node;\r\n\r\n\t}\r\n\r\n}\r\n\r\nMaterialNode.ALPHA_TEST = 'alphaTest';\r\nMaterialNode.COLOR = 'color';\r\nMaterialNode.OPACITY = 'opacity';\r\nMaterialNode.SHININESS = 'shininess';\r\nMaterialNode.SPECULAR_COLOR = 'specularColor';\r\nMaterialNode.REFLECTIVITY = 'reflectivity';\r\nMaterialNode.ROUGHNESS = 'roughness';\r\nMaterialNode.METALNESS = 'metalness';\r\nMaterialNode.EMISSIVE = 'emissive';\r\nMaterialNode.ROTATION = 'rotation';\r\nMaterialNode.UV = 'uv';\r\n\r\nexport default MaterialNode;\r\n", "import Node from '../core/Node.js';\r\nimport AttributeNode from '../core/AttributeNode.js';\r\nimport VaryingNode from '../core/VaryingNode.js';\r\nimport ModelNode from '../accessors/ModelNode.js';\r\nimport MathNode from '../math/MathNode.js';\r\nimport OperatorNode from '../math/OperatorNode.js';\r\n\r\nclass PositionNode extends Node {\r\n\r\n\tconstructor( scope = PositionNode.LOCAL ) {\r\n\r\n\t\tsuper( 'vec3' );\r\n\r\n\t\tthis.scope = scope;\r\n\r\n\t}\r\n\r\n\tisGlobal() {\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tgetHash( /*builder*/ ) {\r\n\r\n\t\treturn `position-${this.scope}`;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tlet outputNode = null;\r\n\r\n\t\tif ( scope === PositionNode.GEOMETRY ) {\r\n\r\n\t\t\toutputNode = new AttributeNode( 'position', 'vec3' );\r\n\r\n\t\t} else if ( scope === PositionNode.LOCAL ) {\r\n\r\n\t\t\toutputNode = new VaryingNode( new PositionNode( PositionNode.GEOMETRY ) );\r\n\r\n\t\t} else if ( scope === PositionNode.WORLD ) {\r\n\r\n\t\t\tconst vertexPositionNode = new MathNode( MathNode.TRANSFORM_DIRECTION, new ModelNode( ModelNode.WORLD_MATRIX ), new PositionNode( PositionNode.LOCAL ) );\r\n\t\t\toutputNode = new VaryingNode( vertexPositionNode );\r\n\r\n\t\t} else if ( scope === PositionNode.VIEW ) {\r\n\r\n\t\t\tconst vertexPositionNode = new OperatorNode( '*', new ModelNode( ModelNode.VIEW_MATRIX ), new PositionNode( PositionNode.LOCAL ) );\r\n\t\t\toutputNode = new VaryingNode( vertexPositionNode );\r\n\r\n\t\t} else if ( scope === PositionNode.VIEW_DIRECTION ) {\r\n\r\n\t\t\tconst vertexPositionNode = new MathNode( MathNode.NEGATE, new PositionNode( PositionNode.VIEW ) );\r\n\t\t\toutputNode = new MathNode( MathNode.NORMALIZE, new VaryingNode( vertexPositionNode ) );\r\n\r\n\t\t} else if ( scope === PositionNode.WORLD_DIRECTION ) {\r\n\r\n\t\t\tconst vertexPositionNode = new MathNode( MathNode.NEGATE, new PositionNode( PositionNode.WORLD ) );\r\n\t\t\toutputNode = new MathNode( MathNode.NORMALIZE, new VaryingNode( vertexPositionNode ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn outputNode.build( builder, this.getNodeType( builder ) );\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.scope = this.scope;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.scope = data.scope;\r\n\r\n\t}\r\n\r\n}\r\n\r\nPositionNode.GEOMETRY = 'geometry';\r\nPositionNode.LOCAL = 'local';\r\nPositionNode.WORLD = 'world';\r\nPositionNode.WORLD_DIRECTION = 'worldDirection';\r\nPositionNode.VIEW = 'view';\r\nPositionNode.VIEW_DIRECTION = 'viewDirection';\r\n\r\nexport default PositionNode;\r\n", "import Node from '../core/Node.js';\r\nimport CameraNode from '../accessors/CameraNode.js';\r\nimport ModelNode from '../accessors/ModelNode.js';\r\nimport OperatorNode from '../math/OperatorNode.js';\r\nimport PositionNode from '../accessors/PositionNode.js';\r\n\r\nclass ModelViewProjectionNode extends Node {\r\n\r\n\tconstructor( position = new PositionNode() ) {\r\n\r\n\t\tsuper( 'vec4' );\r\n\r\n\t\tthis.position = position;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst position = this.position;\r\n\r\n\t\tconst mvpMatrix = new OperatorNode( '*', new CameraNode( CameraNode.PROJECTION_MATRIX ), new ModelNode( ModelNode.VIEW_MATRIX ) );\r\n\t\tconst mvpNode = new OperatorNode( '*', mvpMatrix, position );\r\n\r\n\t\treturn mvpNode.build( builder );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ModelViewProjectionNode;\r\n", "import Node from '../core/Node.js';\r\n\r\nclass PointUVNode extends Node {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper( 'vec2' );\r\n\r\n\t\tthis.isPointUVNode = true;\r\n\r\n\t}\r\n\r\n\tgenerate( /*builder*/ ) {\r\n\r\n\t\treturn 'vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )';\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default PointUVNode;\r\n", "import BufferNode from './BufferNode.js';\r\n\r\nclass StorageBufferNode extends BufferNode {\r\n\r\n\tconstructor( value, bufferType, bufferCount = 0 ) {\r\n\r\n\t\tsuper( value, bufferType, bufferCount );\r\n\r\n\t\tthis.isStorageBufferNode = true;\r\n\r\n\t}\r\n\r\n\tgetInputType( /*builder*/ ) {\r\n\r\n\t\treturn 'storageBuffer';\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default StorageBufferNode;\r\n", "import ReferenceNode from './ReferenceNode.js';\r\n\r\nclass UserDataNode extends ReferenceNode {\r\n\r\n\tconstructor( property, inputType, userData = null ) {\r\n\r\n\t\tsuper( property, inputType, userData );\r\n\r\n\t\tthis.userData = userData;\r\n\r\n\t}\r\n\r\n\tupdate( frame ) {\r\n\r\n\t\tthis.object = this.userData !== null ? this.userData : frame.object.userData;\r\n\r\n\t\tsuper.update( frame );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default UserDataNode;\r\n", "import Node from '../core/Node.js';\r\n\r\nclass FrontFacingNode extends Node {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper( 'bool' );\r\n\r\n\t\tthis.isFrontFacingNode = true;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\treturn builder.getFrontFacing();\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default FrontFacingNode;\r\n", "import Node from '../core/Node.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\n\r\nclass ComputeNode extends Node {\r\n\r\n\tconstructor( computeNode, count, workgroupSize = [ 64 ] ) {\r\n\r\n\t\tsuper( 'void' );\r\n\r\n\t\tthis.isComputeNode = true;\r\n\r\n\t\tthis.computeNode = computeNode;\r\n\r\n\t\tthis.count = count;\r\n\t\tthis.workgroupSize = workgroupSize;\r\n\t\tthis.dispatchCount = 0;\r\n\r\n\t\tthis.updateType = NodeUpdateType.OBJECT;\r\n\r\n\t\tthis.updateDispatchCount();\r\n\r\n\t}\r\n\r\n\tupdateDispatchCount() {\r\n\r\n\t\tconst { count, workgroupSize } = this;\r\n\r\n\t\tlet size = workgroupSize[ 0 ];\r\n\r\n\t\tfor ( let i = 1; i < workgroupSize.length; i ++ )\r\n\t\t\tsize *= workgroupSize[ i ];\r\n\r\n\t\tthis.dispatchCount = Math.ceil( count / size );\r\n\r\n\t}\r\n\r\n\tonInit() { }\r\n\r\n\tupdate( { renderer } ) {\r\n\r\n\t\trenderer.compute( this );\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst { shaderStage } = builder;\r\n\r\n\t\tif ( shaderStage === 'compute' ) {\r\n\r\n\t\t\tconst snippet = this.computeNode.build( builder, 'void' );\r\n\r\n\t\t\tif ( snippet !== '' ) {\r\n\r\n\t\t\t\tbuilder.addFlowCode( snippet );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ComputeNode;\r\n", "import Node from '../core/Node.js';\r\nimport PropertyNode from '../core/PropertyNode.js';\r\nimport ContextNode from '../core/ContextNode.js';\r\n\r\nclass CondNode extends Node {\r\n\r\n\tconstructor( condNode, ifNode, elseNode = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.condNode = condNode;\r\n\r\n\t\tthis.ifNode = ifNode;\r\n\t\tthis.elseNode = elseNode;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\tconst ifType = this.ifNode.getNodeType( builder );\r\n\r\n\t\tif ( this.elseNode !== null ) {\r\n\r\n\t\t\tconst elseType = this.elseNode.getNodeType( builder );\r\n\r\n\t\t\tif ( builder.getTypeLength( elseType ) > builder.getTypeLength( ifType ) ) {\r\n\r\n\t\t\t\treturn elseType;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn ifType;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst type = this.getNodeType( builder );\r\n\t\tconst context = { tempWrite: false };\r\n\r\n\t\tconst needsProperty = this.ifNode.getNodeType( builder ) !== 'void' || ( this.elseNode && this.elseNode.getNodeType( builder ) !== 'void' );\r\n\t\tconst nodeProperty = needsProperty ? new PropertyNode( type ).build( builder ) : '';\r\n\r\n\t\tconst nodeSnippet = new ContextNode( this.condNode/*, context*/ ).build( builder, 'bool' );\r\n\r\n\t\tbuilder.addFlowCode( `if ( ${nodeSnippet} ) {\\n\\n\\t\\t`, false );\r\n\r\n\t\tlet ifSnippet = new ContextNode( this.ifNode, context ).build( builder, type );\r\n\r\n\t\tifSnippet = needsProperty ? nodeProperty + ' = ' + ifSnippet + ';' : ifSnippet;\r\n\r\n\t\tbuilder.addFlowCode( ifSnippet + '\\n\\n\\t}', false );\r\n\r\n\t\tlet elseSnippet = this.elseNode ? new ContextNode( this.elseNode, context ).build( builder, type ) : null;\r\n\r\n\t\tif ( elseSnippet ) {\r\n\r\n\t\t\telseSnippet = nodeProperty ? nodeProperty + ' = ' + elseSnippet + ';' : elseSnippet;\r\n\r\n\t\t\tbuilder.addFlowCode( 'else {\\n\\n\\t\\t' + elseSnippet + '\\n\\n\\t}', false );\r\n\r\n\t\t}\r\n\r\n\t\treturn nodeProperty;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default CondNode;\r\n", "import TempNode from '../core/Node.js';\r\n\r\nclass ArrayElementNode extends TempNode {\r\n\r\n\tconstructor( node, indexNode ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.node = node;\r\n\t\tthis.indexNode = indexNode;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.node.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst nodeSnippet = this.node.build( builder );\r\n\t\tconst indexSnippet = this.indexNode.build( builder, 'uint' );\r\n\r\n\t\treturn `${nodeSnippet}[ ${indexSnippet} ]`;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ArrayElementNode;\r\n", "import Node from '../core/Node.js';\r\n\r\nclass ConvertNode extends Node {\r\n\r\n\tconstructor( node, convertTo ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.node = node;\r\n\t\tthis.convertTo = convertTo;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\tconst requestType = this.node.getNodeType( builder );\r\n\r\n\t\tlet convertTo = null;\r\n\r\n\t\tfor ( const overloadingType of this.convertTo.split( '|' ) ) {\r\n\r\n\t\t\tif ( convertTo === null || builder.getTypeLength( requestType ) === builder.getTypeLength( overloadingType ) ) {\r\n\r\n\t\t\t\tconvertTo = overloadingType;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn convertTo;\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst node = this.node;\r\n\t\tconst type = this.getNodeType( builder );\r\n\r\n\t\tconst snippet = node.build( builder, type );\r\n\r\n\t\treturn builder.format( snippet, type, output );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ConvertNode;\r\n", "import CondNode from '../math/CondNode.js';\r\nimport ExpressionNode from '../core/ExpressionNode.js';\r\n\r\nlet discardExpression;\r\n\r\nclass DiscardNode extends CondNode {\r\n\r\n\tconstructor( condNode ) {\r\n\r\n\t\tdiscardExpression = discardExpression || new ExpressionNode( 'discard' );\r\n\r\n\t\tsuper( condNode, discardExpression );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default DiscardNode;\r\n", "import UniformNode from '../core/UniformNode.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\n\r\nclass MaxMipLevelNode extends UniformNode {\r\n\r\n\tconstructor( textureNode ) {\r\n\r\n\t\tsuper( 0 );\r\n\r\n\t\tthis.textureNode = textureNode;\r\n\r\n\t\tthis.updateType = NodeUpdateType.FRAME;\r\n\r\n\t}\r\n\r\n\tget texture() {\r\n\r\n\t\treturn this.textureNode.value;\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tconst texture = this.texture;\r\n\t\tconst images = texture.images;\r\n\t\tconst image = ( images && images.length > 0 ) ? ( ( images[ 0 ] && images[ 0 ].image ) || images[ 0 ] ) : texture.image;\r\n\r\n\t\tif ( image && image.width !== undefined ) {\r\n\r\n\t\t\tconst { width, height } = image;\r\n\r\n\t\t\tthis.value = Math.log2( Math.max( width, height ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default MaxMipLevelNode;\r\n", "import Node from './Node.js';\r\nimport OperatorNode from '../math/OperatorNode.js';\r\nimport BypassNode from '../core/BypassNode.js';\r\nimport ExpressionNode from '../core/ExpressionNode.js';\r\n\r\nclass StackNode extends Node {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.nodes = [];\r\n\t\tthis.outputNode = null;\r\n\r\n\t\tthis.isStackNode = true;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.outputNode ? this.outputNode.getNodeType( builder ) : 'void';\r\n\r\n\t}\r\n\r\n\tadd( node ) {\r\n\r\n\t\tthis.nodes.push( new BypassNode( new ExpressionNode(), node ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tassign( targetNode, sourceValue ) {\r\n\r\n\t\treturn this.add( new OperatorNode( '=', targetNode, sourceValue ) );\r\n\r\n\t}\r\n\r\n\tbuild( builder, ...params ) {\r\n\r\n\t\tfor ( const node of this.nodes ) {\r\n\r\n\t\t\tnode.build( builder );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.outputNode ? this.outputNode.build( builder, ...params ) : super.build( builder, ...params );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default StackNode;\r\n", "import Node from '../core/Node.js';\r\nimport ArrayElementNode from '../utils/ArrayElementNode.js';\r\nimport ConvertNode from '../utils/ConvertNode.js';\r\nimport JoinNode from '../utils/JoinNode.js';\r\nimport SplitNode from '../utils/SplitNode.js';\r\nimport ConstNode from '../core/ConstNode.js';\r\nimport StackNode from '../core/StackNode.js';\r\nimport { getValueFromType } from '../core/NodeUtils.js';\r\n\r\nimport * as NodeElements from './ShaderNodeElements.js';\r\n\r\nconst shaderNodeHandler = {\r\n\r\n\tconstruct( NodeClosure, params ) {\r\n\r\n\t\tconst inputs = params.shift();\r\n\r\n\t\treturn NodeClosure( nodeObjects( inputs ), ...params );\r\n\r\n\t},\r\n\r\n\tget: function ( node, prop, nodeObj ) {\r\n\r\n\t\tif ( typeof prop === 'string' && node[ prop ] === undefined ) {\r\n\r\n\t\t\tif ( /^[xyzwrgbastpq]{1,4}$/.test( prop ) === true ) {\r\n\r\n\t\t\t\t// accessing properties ( swizzle )\r\n\r\n\t\t\t\tprop = prop\r\n\t\t\t\t\t.replace( /r|s/g, 'x' )\r\n\t\t\t\t\t.replace( /g|t/g, 'y' )\r\n\t\t\t\t\t.replace( /b|p/g, 'z' )\r\n\t\t\t\t\t.replace( /a|q/g, 'w' );\r\n\r\n\t\t\t\treturn nodeObject( new SplitNode( node, prop ) );\r\n\r\n\t\t\t} else if ( /^\\d+$/.test( prop ) === true ) {\r\n\r\n\t\t\t\t// accessing array\r\n\r\n\t\t\t\treturn nodeObject( new ArrayElementNode( node, new ConstNode( Number( prop ), 'uint' ) ) );\r\n\r\n\t\t\t} else if ( NodeElements[ prop ] ) {\r\n\r\n\t\t\t\tconst nodeElement = NodeElements[ prop ];\r\n\r\n\t\t\t\treturn ( ...params ) => nodeElement( nodeObj, ...params );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn node[ prop ];\r\n\r\n\t}\r\n\r\n};\r\n\r\nconst nodeObjectsCacheMap = new WeakMap();\r\n\r\nconst ShaderNodeObject = function ( obj ) {\r\n\r\n\tconst type = typeof obj;\r\n\r\n\tif ( ( type === 'number' ) || ( type === 'boolean' ) ) {\r\n\r\n\t\treturn nodeObject( getAutoTypedConstNode( obj ) );\r\n\r\n\t} else if ( type === 'object' ) {\r\n\r\n\t\tif ( obj && obj.isNode === true ) {\r\n\r\n\t\t\tlet nodeObject = nodeObjectsCacheMap.get( obj );\r\n\r\n\t\t\tif ( nodeObject === undefined ) {\r\n\r\n\t\t\t\tnodeObject = new Proxy( obj, shaderNodeHandler );\r\n\t\t\t\tnodeObjectsCacheMap.set( obj, nodeObject );\r\n\t\t\t\tnodeObjectsCacheMap.set( nodeObject, nodeObject );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn nodeObject;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn obj;\r\n\r\n};\r\n\r\nconst ShaderNodeObjects = function ( objects ) {\r\n\r\n\tfor ( const name in objects ) {\r\n\r\n\t\tobjects[ name ] = nodeObject( objects[ name ] );\r\n\r\n\t}\r\n\r\n\treturn objects;\r\n\r\n};\r\n\r\nconst ShaderNodeArray = function ( array ) {\r\n\r\n\tconst len = array.length;\r\n\r\n\tfor ( let i = 0; i < len; i ++ ) {\r\n\r\n\t\tarray[ i ] = nodeObject( array[ i ] );\r\n\r\n\t}\r\n\r\n\treturn array;\r\n\r\n};\r\n\r\nconst ShaderNodeProxy = function ( NodeClass, scope = null, factor = null, settings = null ) {\r\n\r\n\tconst assignNode = ( node ) => nodeObject( settings !== null ? Object.assign( node, settings ) : node );\r\n\r\n\tif ( scope === null ) {\r\n\r\n\t\treturn ( ...params ) => {\r\n\r\n\t\t\treturn assignNode( new NodeClass( ...nodeArray( params ) ) );\r\n\r\n\t\t};\r\n\r\n\t} else if ( factor !== null ) {\r\n\r\n\t\tfactor = nodeObject( factor );\r\n\r\n\t\treturn ( ...params ) => {\r\n\r\n\t\t\treturn assignNode( new NodeClass( scope, ...nodeArray( params ), factor ) );\r\n\r\n\t\t};\r\n\r\n\t} else {\r\n\r\n\t\treturn ( ...params ) => {\r\n\r\n\t\t\treturn assignNode( new NodeClass( scope, ...nodeArray( params ) ) );\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n};\r\n\r\nconst ShaderNodeImmutable = function ( NodeClass, ...params ) {\r\n\r\n\treturn nodeObject( new NodeClass( ...nodeArray( params ) ) );\r\n\r\n};\r\n\r\nclass ShaderNodeInternal extends Node {\r\n\r\n\tconstructor( jsFunc ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._jsFunc = jsFunc;\r\n\r\n\t}\r\n\r\n\tcall( inputs, builder ) {\r\n\r\n\t\tinputs = nodeObjects( inputs );\r\n\r\n\t\treturn nodeObject( this._jsFunc( inputs, builder ) );\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\tconst { outputNode } = builder.getNodeProperties( this );\r\n\r\n\t\treturn outputNode ? outputNode.getNodeType( builder ) : super.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) {\r\n\r\n\t\tconst stackNode = new StackNode();\r\n\t\tstackNode.outputNode = this.call( {}, stackNode, builder );\r\n\r\n\t\treturn stackNode;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst ShaderNodeScript = function ( jsFunc ) {\r\n\r\n\treturn new ShaderNodeInternal( jsFunc );\r\n\r\n};\r\n\r\nexport const ShaderNode = new Proxy( ShaderNodeScript, shaderNodeHandler );\r\n\r\nexport const nodeObject = ( val ) => /* new */ ShaderNodeObject( val );\r\nexport const nodeObjects = ( val ) => new ShaderNodeObjects( val );\r\nexport const nodeArray = ( val ) => new ShaderNodeArray( val );\r\nexport const nodeProxy = ( ...val ) => new ShaderNodeProxy( ...val );\r\nexport const nodeImmutable = ( ...val ) => new ShaderNodeImmutable( ...val );\r\n\r\nconst bools = [ false, true ];\r\nconst uints = [ 0, 1, 2, 3 ];\r\nconst ints = [ - 1, - 2 ];\r\nconst floats = [ 0.5, 1.5, 1 / 3, 1e-6, 1e6, Math.PI, Math.PI * 2, 1 / Math.PI, 2 / Math.PI, 1 / ( Math.PI * 2 ), Math.PI / 2 ];\r\n\r\nconst boolsCacheMap = new Map();\r\nfor ( const bool of bools ) boolsCacheMap.set( bool, new ConstNode( bool ) );\r\n\r\nconst uintsCacheMap = new Map();\r\nfor ( const uint of uints ) uintsCacheMap.set( uint, new ConstNode( uint, 'uint' ) );\r\n\r\nconst intsCacheMap = new Map( [ ...uintsCacheMap ].map( el => new ConstNode( el.value, 'int' ) ) );\r\nfor ( const int of ints ) intsCacheMap.set( int, new ConstNode( int, 'int' ) );\r\n\r\nconst floatsCacheMap = new Map( [ ...intsCacheMap ].map( el => new ConstNode( el.value ) ) );\r\nfor ( const float of floats ) floatsCacheMap.set( float, new ConstNode( float ) );\r\nfor ( const float of floats ) floatsCacheMap.set( - float, new ConstNode( - float ) );\r\n\r\nexport const cacheMaps = { bool: boolsCacheMap, uint: uintsCacheMap, ints: intsCacheMap, float: floatsCacheMap };\r\n\r\nconst constNodesCacheMap = new Map( [ ...boolsCacheMap, ...floatsCacheMap ] );\r\n\r\nconst getAutoTypedConstNode = ( value ) => {\r\n\r\n\tif ( constNodesCacheMap.has( value ) ) {\r\n\r\n\t\treturn constNodesCacheMap.get( value );\r\n\r\n\t} else if ( value.isNode === true ) {\r\n\r\n\t\treturn value;\r\n\r\n\t} else {\r\n\r\n\t\treturn new ConstNode( value );\r\n\r\n\t}\r\n\r\n};\r\n\r\nexport const ConvertType = function ( type, cacheMap = null ) {\r\n\r\n\treturn ( ...params ) => {\r\n\r\n\t\tif ( params.length === 0 ) {\r\n\r\n\t\t\treturn nodeObject( new ConstNode( getValueFromType( type ), type ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( type === 'color' && params[ 0 ].isNode !== true ) {\r\n\r\n\t\t\t\tparams = [ getValueFromType( type, ...params ) ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( params.length === 1 && cacheMap !== null && cacheMap.has( params[ 0 ] ) ) {\r\n\r\n\t\t\t\treturn cacheMap.get( params[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst nodes = params.map( getAutoTypedConstNode );\r\n\r\n\t\t\tif ( nodes.length === 1 ) {\r\n\r\n\t\t\t\treturn nodeObject( nodes[ 0 ].nodeType === type ? nodes[ 0 ] : new ConvertNode( nodes[ 0 ], type ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn nodeObject( new JoinNode( nodes, type ) );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n};\r\n\r\nexport const getConstNodeType = ( value ) => value.nodeType || value.convertTo || ( typeof value === 'string' ? value : null );\r\n", "// core\r\n//import ArrayUniformNode from '../core/ArrayUniformNode.js';\r\nimport AttributeNode from '../core/AttributeNode.js';\r\nimport BypassNode from '../core/BypassNode.js';\r\nimport CacheNode from '../core/CacheNode.js';\r\nimport CodeNode from '../core/CodeNode.js';\r\nimport ContextNode from '../core/ContextNode.js';\r\nimport ExpressionNode from '../core/ExpressionNode.js';\r\nimport FunctionCallNode from '../core/FunctionCallNode.js';\r\nimport FunctionNode from '../core/FunctionNode.js';\r\nimport InstanceIndexNode from '../core/InstanceIndexNode.js';\r\nimport LightingModel from '../core/LightingModel.js';\r\nimport PropertyNode from '../core/PropertyNode.js';\r\nimport UniformNode from '../core/UniformNode.js';\r\nimport VarNode from '../core/VarNode.js';\r\nimport VaryingNode from '../core/VaryingNode.js';\r\n\r\n// accessors\r\nimport BitangentNode from '../accessors/BitangentNode.js';\r\nimport BufferNode from '../accessors/BufferNode.js';\r\nimport CameraNode from '../accessors/CameraNode.js';\r\nimport MaterialNode from '../accessors/MaterialNode.js';\r\nimport MaterialReferenceNode from '../accessors/MaterialReferenceNode.js';\r\nimport ModelViewProjectionNode from '../accessors/ModelViewProjectionNode.js';\r\nimport NormalNode from '../accessors/NormalNode.js';\r\nimport ModelNode from '../accessors/ModelNode.js';\r\nimport Object3DNode from '../accessors/Object3DNode.js';\r\nimport PointUVNode from '../accessors/PointUVNode.js';\r\nimport PositionNode from '../accessors/PositionNode.js';\r\nimport ReferenceNode from '../accessors/ReferenceNode.js';\r\nimport StorageBufferNode from '../accessors/StorageBufferNode.js';\r\nimport TangentNode from '../accessors/TangentNode.js';\r\nimport TextureNode from '../accessors/TextureNode.js';\r\nimport UserDataNode from '../accessors/UserDataNode.js';\r\nimport UVNode from '../accessors/UVNode.js';\r\n\r\n// display\r\nimport FrontFacingNode from '../display/FrontFacingNode.js';\r\n\r\n// gpgpu\r\nimport ComputeNode from '../gpgpu/ComputeNode.js';\r\n\r\n// math\r\nimport MathNode from '../math/MathNode.js';\r\nimport OperatorNode from '../math/OperatorNode.js';\r\nimport CondNode from '../math/CondNode.js';\r\n\r\n// utils\r\nimport ArrayElementNode from '../utils/ArrayElementNode.js';\r\nimport ConvertNode from '../utils/ConvertNode.js';\r\nimport DiscardNode from '../utils/DiscardNode.js';\r\nimport MaxMipLevelNode from '../utils/MaxMipLevelNode.js';\r\n\r\n// shader node utils\r\nimport { ShaderNode, nodeObject, nodeObjects, nodeArray, nodeProxy, nodeImmutable, ConvertType, getConstNodeType, cacheMaps } from './ShaderNode.js';\r\n\r\n// shader node base\r\n\r\nexport { ShaderNode, nodeObject, nodeObjects, nodeArray, nodeProxy, nodeImmutable };\r\n\r\nexport const color = new ConvertType( 'color' );\r\n\r\nexport const float = new ConvertType( 'float', cacheMaps.float );\r\nexport const int = new ConvertType( 'int', cacheMaps.int );\r\nexport const uint = new ConvertType( 'uint', cacheMaps.uint );\r\nexport const bool = new ConvertType( 'bool', cacheMaps.bool );\r\n\r\nexport const vec2 = new ConvertType( 'vec2' );\r\nexport const ivec2 = new ConvertType( 'ivec2' );\r\nexport const uvec2 = new ConvertType( 'uvec2' );\r\nexport const bvec2 = new ConvertType( 'bvec2' );\r\n\r\nexport const vec3 = new ConvertType( 'vec3' );\r\nexport const ivec3 = new ConvertType( 'ivec3' );\r\nexport const uvec3 = new ConvertType( 'uvec3' );\r\nexport const bvec3 = new ConvertType( 'bvec3' );\r\n\r\nexport const vec4 = new ConvertType( 'vec4' );\r\nexport const ivec4 = new ConvertType( 'ivec4' );\r\nexport const uvec4 = new ConvertType( 'uvec4' );\r\nexport const bvec4 = new ConvertType( 'bvec4' );\r\n\r\nexport const mat3 = new ConvertType( 'mat3' );\r\nexport const imat3 = new ConvertType( 'imat3' );\r\nexport const umat3 = new ConvertType( 'umat3' );\r\nexport const bmat3 = new ConvertType( 'bmat3' );\r\n\r\nexport const mat4 = new ConvertType( 'mat4' );\r\nexport const imat4 = new ConvertType( 'imat4' );\r\nexport const umat4 = new ConvertType( 'umat4' );\r\nexport const bmat4 = new ConvertType( 'bmat4' );\r\n\r\n// core\r\n\r\n// @TODO: ArrayUniformNode\r\n\r\nexport const func = ( code, includes ) => {\r\n\r\n\tconst node = nodeObject( new FunctionNode( code, includes ) );\r\n\r\n\tconst call = node.call.bind( node );\r\n\tnode.call = ( ...params ) => nodeObject( call( params.length > 1 || ( params[ 0 ] && params[ 0 ].isNode === true ) ? nodeArray( params ) : nodeObjects( params[ 0 ] ) ) );\r\n\r\n\treturn node;\r\n\r\n};\r\n\r\nexport const uniform = ( nodeOrType ) => {\r\n\r\n\tconst nodeType = getConstNodeType( nodeOrType );\r\n\r\n\t// @TODO: get ConstNode from .traverse() in the future\r\n\tconst value = nodeOrType.isNode === true ? ( nodeOrType.node && nodeOrType.node.value ) || nodeOrType.value : nodeOrType;\r\n\r\n\treturn nodeObject( new UniformNode( value, nodeType ) );\r\n\r\n};\r\n\r\nexport const fn = ( code, includes ) => func( code, includes ).call;\r\n\r\nexport const attribute = ( name, nodeType ) => nodeObject( new AttributeNode( name, nodeType ) );\r\nexport const property = ( name, nodeOrType ) => nodeObject( new PropertyNode( name, getConstNodeType( nodeOrType ) ) );\r\n\r\nexport const convert = ( node, types ) => nodeObject( new ConvertNode( nodeObject( node ), types ) );\r\nexport const maxMipLevel = nodeProxy( MaxMipLevelNode );\r\n\r\nexport const bypass = nodeProxy( BypassNode );\r\nexport const cache = nodeProxy( CacheNode );\r\nexport const code = nodeProxy( CodeNode );\r\nexport const context = nodeProxy( ContextNode );\r\nexport const expression = nodeProxy( ExpressionNode );\r\nexport const call = nodeProxy( FunctionCallNode );\r\nexport const instanceIndex = nodeImmutable( InstanceIndexNode );\r\nexport const label = nodeProxy( VarNode );\r\nexport const temp = label;\r\nexport const varying = nodeProxy( VaryingNode );\r\n\r\n// math\r\n\r\nexport const EPSILON = float( 1e-6 );\r\nexport const INFINITY = float( 1e6 );\r\n\r\nexport const cond = nodeProxy( CondNode );\r\n\r\nexport const add = nodeProxy( OperatorNode, '+' );\r\nexport const sub = nodeProxy( OperatorNode, '-' );\r\nexport const mul = nodeProxy( OperatorNode, '*' );\r\nexport const div = nodeProxy( OperatorNode, '/' );\r\nexport const remainder = nodeProxy( OperatorNode, '%' );\r\nexport const equal = nodeProxy( OperatorNode, '==' );\r\nexport const assign = nodeProxy( OperatorNode, '=' );\r\nexport const lessThan = nodeProxy( OperatorNode, '<' );\r\nexport const greaterThan = nodeProxy( OperatorNode, '>' );\r\nexport const lessThanEqual = nodeProxy( OperatorNode, '<=' );\r\nexport const greaterThanEqual = nodeProxy( OperatorNode, '>=' );\r\nexport const and = nodeProxy( OperatorNode, '&&' );\r\nexport const or = nodeProxy( OperatorNode, '||' );\r\nexport const xor = nodeProxy( OperatorNode, '^^' );\r\nexport const bitAnd = nodeProxy( OperatorNode, '&' );\r\nexport const bitOr = nodeProxy( OperatorNode, '|' );\r\nexport const bitXor = nodeProxy( OperatorNode, '^' );\r\nexport const shiftLeft = nodeProxy( OperatorNode, '<<' );\r\nexport const shiftRight = nodeProxy( OperatorNode, '>>' );\r\n\r\nexport const radians = nodeProxy( MathNode, MathNode.RADIANS );\r\nexport const degrees = nodeProxy( MathNode, MathNode.DEGREES );\r\nexport const exp = nodeProxy( MathNode, MathNode.EXP );\r\nexport const exp2 = nodeProxy( MathNode, MathNode.EXP2 );\r\nexport const log = nodeProxy( MathNode, MathNode.LOG );\r\nexport const log2 = nodeProxy( MathNode, MathNode.LOG2 );\r\nexport const sqrt = nodeProxy( MathNode, MathNode.SQRT );\r\nexport const inversesqrt = nodeProxy( MathNode, MathNode.INVERSE_SQRT );\r\nexport const floor = nodeProxy( MathNode, MathNode.FLOOR );\r\nexport const ceil = nodeProxy( MathNode, MathNode.CEIL );\r\nexport const normalize = nodeProxy( MathNode, MathNode.NORMALIZE );\r\nexport const fract = nodeProxy( MathNode, MathNode.FRACT );\r\nexport const sin = nodeProxy( MathNode, MathNode.SIN );\r\nexport const cos = nodeProxy( MathNode, MathNode.COS );\r\nexport const tan = nodeProxy( MathNode, MathNode.TAN );\r\nexport const asin = nodeProxy( MathNode, MathNode.ASIN );\r\nexport const acos = nodeProxy( MathNode, MathNode.ACOS );\r\nexport const atan = nodeProxy( MathNode, MathNode.ATAN );\r\nexport const abs = nodeProxy( MathNode, MathNode.ABS );\r\nexport const sign = nodeProxy( MathNode, MathNode.SIGN );\r\nexport const length = nodeProxy( MathNode, MathNode.LENGTH );\r\nexport const negate = nodeProxy( MathNode, MathNode.NEGATE );\r\nexport const invert = nodeProxy( MathNode, MathNode.INVERT );\r\nexport const dFdx = nodeProxy( MathNode, MathNode.DFDX );\r\nexport const dFdy = nodeProxy( MathNode, MathNode.DFDY );\r\nexport const round = nodeProxy( MathNode, MathNode.ROUND );\r\nexport const reciprocal = nodeProxy( MathNode, MathNode.RECIPROCAL );\r\n\r\nexport const atan2 = nodeProxy( MathNode, MathNode.ATAN2 );\r\nexport const min = nodeProxy( MathNode, MathNode.MIN );\r\nexport const max = nodeProxy( MathNode, MathNode.MAX );\r\nexport const mod = nodeProxy( MathNode, MathNode.MOD );\r\nexport const step = nodeProxy( MathNode, MathNode.STEP );\r\nexport const reflect = nodeProxy( MathNode, MathNode.REFLECT );\r\nexport const distance = nodeProxy( MathNode, MathNode.DISTANCE );\r\nexport const dot = nodeProxy( MathNode, MathNode.DOT );\r\nexport const cross = nodeProxy( MathNode, MathNode.CROSS );\r\nexport const pow = nodeProxy( MathNode, MathNode.POW );\r\nexport const pow2 = nodeProxy( MathNode, MathNode.POW, 2 );\r\nexport const pow3 = nodeProxy( MathNode, MathNode.POW, 3 );\r\nexport const pow4 = nodeProxy( MathNode, MathNode.POW, 4 );\r\nexport const transformDirection = nodeProxy( MathNode, MathNode.TRANSFORM_DIRECTION );\r\n\r\nexport const mix = nodeProxy( MathNode, MathNode.MIX );\r\nexport const clamp = ( value, low = 0, high = 1 ) => nodeObject( new MathNode( MathNode.CLAMP, nodeObject( value ), nodeObject( low ), nodeObject( high ) ) );\r\nexport const refract = nodeProxy( MathNode, MathNode.REFRACT );\r\nexport const smoothstep = nodeProxy( MathNode, MathNode.SMOOTHSTEP );\r\nexport const faceforward = nodeProxy( MathNode, MathNode.FACEFORWARD );\r\n\r\n// accessors\r\n\r\nexport const buffer = ( value, nodeOrType, count ) => nodeObject( new BufferNode( value, getConstNodeType( nodeOrType ), count ) );\r\nexport const storage = ( value, nodeOrType, count ) => nodeObject( new StorageBufferNode( value, getConstNodeType( nodeOrType ), count ) );\r\n\r\nexport const cameraProjectionMatrix = nodeImmutable( CameraNode, CameraNode.PROJECTION_MATRIX );\r\nexport const cameraViewMatrix = nodeImmutable( CameraNode, CameraNode.VIEW_MATRIX );\r\nexport const cameraNormalMatrix = nodeImmutable( CameraNode, CameraNode.NORMAL_MATRIX );\r\nexport const cameraWorldMatrix = nodeImmutable( CameraNode, CameraNode.WORLD_MATRIX );\r\nexport const cameraPosition = nodeImmutable( CameraNode, CameraNode.POSITION );\r\n\r\nexport const materialUV = nodeImmutable( MaterialNode, MaterialNode.UV );\r\nexport const materialAlphaTest = nodeImmutable( MaterialNode, MaterialNode.ALPHA_TEST );\r\nexport const materialColor = nodeImmutable( MaterialNode, MaterialNode.COLOR );\r\nexport const materialShininess = nodeImmutable( MaterialNode, MaterialNode.SHININESS );\r\nexport const materialEmissive = nodeImmutable( MaterialNode, MaterialNode.EMISSIVE );\r\nexport const materialOpacity = nodeImmutable( MaterialNode, MaterialNode.OPACITY );\r\nexport const materialSpecularColor = nodeImmutable( MaterialNode, MaterialNode.SPECULAR_COLOR );\r\nexport const materialReflectivity = nodeImmutable( MaterialNode, MaterialNode.REFLECTIVITY );\r\nexport const materialRoughness = nodeImmutable( MaterialNode, MaterialNode.ROUGHNESS );\r\nexport const materialMetalness = nodeImmutable( MaterialNode, MaterialNode.METALNESS );\r\nexport const materialRotation = nodeImmutable( MaterialNode, MaterialNode.ROTATION );\r\n\r\nexport const diffuseColor = nodeImmutable( PropertyNode, 'vec4', 'DiffuseColor' );\r\nexport const roughness = nodeImmutable( PropertyNode, 'float', 'Roughness' );\r\nexport const metalness = nodeImmutable( PropertyNode, 'float', 'Metalness' );\r\nexport const specularColor = nodeImmutable( PropertyNode, 'color', 'SpecularColor' );\r\nexport const shininess = nodeImmutable( PropertyNode, 'float', 'Shininess' );\r\n\r\nexport const reference = ( name, nodeOrType, object ) => nodeObject( new ReferenceNode( name, getConstNodeType( nodeOrType ), object ) );\r\nexport const materialReference = ( name, nodeOrType, material ) => nodeObject( new MaterialReferenceNode( name, getConstNodeType( nodeOrType ), material ) );\r\nexport const userData = ( name, inputType, userData ) => nodeObject( new UserDataNode( name, inputType, userData ) );\r\n\r\nexport const modelViewProjection = nodeProxy( ModelViewProjectionNode );\r\n\r\nexport const normalGeometry = nodeImmutable( NormalNode, NormalNode.GEOMETRY );\r\nexport const normalLocal = nodeImmutable( NormalNode, NormalNode.LOCAL );\r\nexport const normalView = nodeImmutable( NormalNode, NormalNode.VIEW );\r\nexport const normalWorld = nodeImmutable( NormalNode, NormalNode.WORLD );\r\nexport const transformedNormalView = nodeImmutable( VarNode, normalView, 'TransformedNormalView' );\r\nexport const transformedNormalWorld = normalize( transformDirection( transformedNormalView, cameraViewMatrix ) );\r\n\r\nexport const tangentGeometry = nodeImmutable( TangentNode, TangentNode.GEOMETRY );\r\nexport const tangentLocal = nodeImmutable( TangentNode, TangentNode.LOCAL );\r\nexport const tangentView = nodeImmutable( TangentNode, TangentNode.VIEW );\r\nexport const tangentWorld = nodeImmutable( TangentNode, TangentNode.WORLD );\r\nexport const transformedTangentView = nodeImmutable( VarNode, tangentView, 'TransformedTangentView' );\r\nexport const transformedTangentWorld = normalize( transformDirection( transformedTangentView, cameraViewMatrix ) );\r\n\r\nexport const bitangentGeometry = nodeImmutable( BitangentNode, BitangentNode.GEOMETRY );\r\nexport const bitangentLocal = nodeImmutable( BitangentNode, BitangentNode.LOCAL );\r\nexport const bitangentView = nodeImmutable( BitangentNode, BitangentNode.VIEW );\r\nexport const bitangentWorld = nodeImmutable( BitangentNode, BitangentNode.WORLD );\r\nexport const transformedBitangentView = normalize( mul( cross( transformedNormalView, transformedTangentView ), tangentGeometry.w ) );\r\nexport const transformedBitangentWorld = normalize( transformDirection( transformedBitangentView, cameraViewMatrix ) );\r\n\r\nexport const modelDirection = nodeImmutable( ModelNode, ModelNode.DIRECTION );\r\nexport const modelViewMatrix = nodeImmutable( ModelNode, ModelNode.VIEW_MATRIX );\r\nexport const modelNormalMatrix = nodeImmutable( ModelNode, ModelNode.NORMAL_MATRIX );\r\nexport const modelWorldMatrix = nodeImmutable( ModelNode, ModelNode.WORLD_MATRIX );\r\nexport const modelPosition = nodeImmutable( ModelNode, ModelNode.POSITION );\r\nexport const modelViewPosition = nodeImmutable( ModelNode, ModelNode.VIEW_POSITION );\r\n\r\nexport const objectDirection = nodeProxy( Object3DNode, Object3DNode.DIRECTION );\r\nexport const objectViewMatrix = nodeProxy( Object3DNode, Object3DNode.VIEW_MATRIX );\r\nexport const objectNormalMatrix = nodeProxy( Object3DNode, Object3DNode.NORMAL_MATRIX );\r\nexport const objectWorldMatrix = nodeProxy( Object3DNode, Object3DNode.WORLD_MATRIX );\r\nexport const objectPosition = nodeProxy( Object3DNode, Object3DNode.POSITION );\r\nexport const objectViewPosition = nodeProxy( Object3DNode, Object3DNode.VIEW_POSITION );\r\n\r\nexport const positionGeometry = nodeImmutable( PositionNode, PositionNode.GEOMETRY );\r\nexport const positionLocal = nodeImmutable( PositionNode, PositionNode.LOCAL );\r\nexport const positionWorld = nodeImmutable( PositionNode, PositionNode.WORLD );\r\nexport const positionWorldDirection = nodeImmutable( PositionNode, PositionNode.WORLD_DIRECTION );\r\nexport const positionView = nodeImmutable( PositionNode, PositionNode.VIEW );\r\nexport const positionViewDirection = nodeImmutable( PositionNode, PositionNode.VIEW_DIRECTION );\r\n\r\nexport const texture = nodeProxy( TextureNode );\r\nexport const sampler = ( texture ) => nodeObject( new ConvertNode( texture.isNode === true ? texture : new TextureNode( texture ), 'sampler' ) );\r\nexport const uv = ( ...params ) => nodeObject( new UVNode( ...params ) );\r\nexport const pointUV = nodeImmutable( PointUVNode );\r\n\r\n// gpgpu\r\n\r\nexport const compute = ( node, count, workgroupSize ) => nodeObject( new ComputeNode( nodeObject( node ), count, workgroupSize ) );\r\n\r\n// display\r\n\r\nexport const frontFacing = nodeImmutable( FrontFacingNode );\r\nexport const faceDirection = sub( mul( float( frontFacing ), 2 ), 1 );\r\n\r\n// lighting\r\n\r\nexport const lightingModel = ( ...params ) => new LightingModel( ...params );\r\n\r\n// utils\r\n\r\nexport const element = nodeProxy( ArrayElementNode );\r\nexport const discard = nodeProxy( DiscardNode );\r\n\r\n// miscellaneous\r\n\r\nexport const lumaCoeffs = vec3( 0.2125, 0.7154, 0.0721 );\r\n\r\nexport const luminance = ( color, luma = lumaCoeffs ) => dot( color, luma );\r\nexport const difference = ( a, b ) => abs( sub( a, b ) );\r\nexport const dotNV = clamp( dot( transformedNormalView, positionViewDirection ) );\r\nexport const TBNViewMatrix = mat3( tangentView, bitangentView, normalView );\r\n", "import Node from '../core/Node.js';\r\nimport {\r\n\ttransformedNormalView, positionViewDirection, cameraViewMatrix\r\n} from '../shadernode/ShaderNodeBaseElements.js';\r\n\r\nclass ReflectVectorNode extends Node {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper( 'vec3' );\r\n\r\n\t}\r\n\r\n\tgetHash( /*builder*/ ) {\r\n\r\n\t\treturn 'reflectVector';\r\n\r\n\t}\r\n\r\n\tconstruct() {\r\n\r\n\t\tconst reflectView = positionViewDirection.negate().reflect( transformedNormalView );\r\n\r\n\t\treturn reflectView.transformDirection( cameraViewMatrix );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ReflectVectorNode;\r\n", "import TextureNode from './TextureNode.js';\r\nimport UniformNode from '../core/UniformNode.js';\r\nimport ReflectVectorNode from './ReflectVectorNode.js';\r\n\r\nimport { vec3, nodeObject } from '../shadernode/ShaderNodeBaseElements.js';\r\n\r\nlet defaultUV;\r\n\r\nclass CubeTextureNode extends TextureNode {\r\n\r\n\tconstructor( value, uvNode = null, levelNode = null ) {\r\n\r\n\t\tsuper( value, uvNode, levelNode );\r\n\r\n\t\tthis.isCubeTextureNode = true;\r\n\r\n\t}\r\n\r\n\tgetInputType( /*builder*/ ) {\r\n\r\n\t\treturn 'cubeTexture';\r\n\r\n\t}\r\n\r\n\tgetDefaultUV() {\r\n\r\n\t\treturn defaultUV || ( defaultUV = new ReflectVectorNode() );\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst { uvNode, levelNode } = builder.getNodeProperties( this );\r\n\r\n\t\tconst texture = this.value;\r\n\r\n\t\tif ( ! texture || texture.isCubeTexture !== true ) {\r\n\r\n\t\t\tthrow new Error( 'CubeTextureNode: Need a three.js cube texture.' );\r\n\r\n\t\t}\r\n\r\n\t\tconst textureProperty = UniformNode.prototype.generate.call( this, builder, 'cubeTexture' );\r\n\r\n\t\tif ( output === 'sampler' ) {\r\n\r\n\t\t\treturn textureProperty + '_sampler';\r\n\r\n\t\t} else if ( builder.isReference( output ) ) {\r\n\r\n\t\t\treturn textureProperty;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst nodeData = builder.getDataFromNode( this );\r\n\r\n\t\t\tlet propertyName = nodeData.propertyName;\r\n\r\n\t\t\tif ( propertyName === undefined ) {\r\n\r\n\t\t\t\tconst uvNodeObject = nodeObject( uvNode );\r\n\t\t\t\tconst cubeUV = vec3( uvNodeObject.x.negate(), uvNodeObject.yz );\r\n\t\t\t\tconst uvSnippet = cubeUV.build( builder, 'vec3' );\r\n\r\n\t\t\t\tconst nodeVar = builder.getVarFromNode( this, 'vec4' );\r\n\r\n\t\t\t\tpropertyName = builder.getPropertyName( nodeVar );\r\n\r\n\t\t\t\tlet snippet = null;\r\n\r\n\t\t\t\tif ( levelNode && levelNode.isNode === true ) {\r\n\r\n\t\t\t\t\tconst levelSnippet = levelNode.build( builder, 'float' );\r\n\r\n\t\t\t\t\tsnippet = builder.getCubeTextureLevel( textureProperty, uvSnippet, levelSnippet );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsnippet = builder.getCubeTexture( textureProperty, uvSnippet );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbuilder.addFlowCode( `${propertyName} = ${snippet}` );\r\n\r\n\t\t\t\tnodeData.snippet = snippet;\r\n\t\t\t\tnodeData.propertyName = propertyName;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn builder.format( propertyName, 'vec4', output );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default CubeTextureNode;\r\n", "import Node from '../core/Node.js';\r\nimport {\r\n\tvec3,\r\n\tmat3,\r\n\tmul,\r\n\tassign,\r\n\tbuffer,\r\n\telement,\r\n\tdot,\r\n\tdiv,\r\n\ttemp,\r\n\tinstanceIndex,\r\n\tpositionLocal,\r\n\tnormalLocal\r\n} from '../shadernode/ShaderNodeBaseElements.js';\r\n\r\nclass InstanceNode extends Node {\r\n\r\n\tconstructor( instanceMesh ) {\r\n\r\n\t\tsuper( 'void' );\r\n\r\n\t\tthis.instanceMesh = instanceMesh;\r\n\r\n\t\t//\r\n\r\n\t\tconst instanceBufferNode = buffer( instanceMesh.instanceMatrix.array, 'mat4', instanceMesh.count );\r\n\r\n\t\tthis.instanceMatrixNode = temp( element( instanceBufferNode, instanceIndex ) ); // @TODO: a possible caching issue here?\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst { instanceMatrixNode } = this;\r\n\r\n\t\t// POSITION\r\n\r\n\t\tconst instancePosition = mul( instanceMatrixNode, positionLocal ).xyz;\r\n\r\n\t\t// NORMAL\r\n\r\n\t\tconst m = mat3( instanceMatrixNode[ 0 ].xyz, instanceMatrixNode[ 1 ].xyz, instanceMatrixNode[ 2 ].xyz );\r\n\r\n\t\tconst transformedNormal = div( normalLocal, vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) ) );\r\n\r\n\t\tconst instanceNormal = mul( m, transformedNormal ).xyz;\r\n\r\n\t\t// ASSIGNS\r\n\r\n\t\tassign( positionLocal, instancePosition ).build( builder );\r\n\t\tassign( normalLocal, instanceNormal ).build( builder );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default InstanceNode;\r\n", "import Node from '../core/Node.js';\r\nimport {\r\n\tShaderNode,\r\n\tattribute,\r\n\tbuffer,\r\n\tmat4,\r\n\tuniform,\r\n\tpositionLocal,\r\n\tnormalLocal,\r\n\ttangentLocal,\r\n\tassign,\r\n\telement,\r\n\tadd,\r\n\tmul,\r\n\ttransformDirection\r\n} from '../shadernode/ShaderNodeBaseElements.js';\r\n\r\nimport { NodeUpdateType } from '../core/constants.js';\r\n\r\nconst Skinning = new ShaderNode( ( inputs, builder ) => {\r\n\r\n\tconst { index, weight, bindMatrix, bindMatrixInverse, boneMatrices } = inputs;\r\n\r\n\tconst boneMatX = element( boneMatrices, index.x );\r\n\tconst boneMatY = element( boneMatrices, index.y );\r\n\tconst boneMatZ = element( boneMatrices, index.z );\r\n\tconst boneMatW = element( boneMatrices, index.w );\r\n\r\n\t// POSITION\r\n\r\n\tconst skinVertex = mul( bindMatrix, positionLocal );\r\n\r\n\tconst skinned = add(\r\n\t\tmul( mul( boneMatX, skinVertex ), weight.x ),\r\n\t\tmul( mul( boneMatY, skinVertex ), weight.y ),\r\n\t\tmul( mul( boneMatZ, skinVertex ), weight.z ),\r\n\t\tmul( mul( boneMatW, skinVertex ), weight.w )\r\n\t);\r\n\r\n\tconst skinPosition = mul( bindMatrixInverse, skinned ).xyz;\r\n\r\n\t// NORMAL\r\n\r\n\tlet skinMatrix = add(\r\n\t\tmul( weight.x, boneMatX ),\r\n\t\tmul( weight.y, boneMatY ),\r\n\t\tmul( weight.z, boneMatZ ),\r\n\t\tmul( weight.w, boneMatW )\r\n\t);\r\n\r\n\tskinMatrix = mul( mul( bindMatrixInverse, skinMatrix ), bindMatrix );\r\n\r\n\tconst skinNormal = transformDirection( skinMatrix, normalLocal ).xyz;\r\n\r\n\t// ASSIGNS\r\n\r\n\tassign( positionLocal, skinPosition ).build( builder );\r\n\tassign( normalLocal, skinNormal ).build( builder );\r\n\r\n\tif ( builder.hasGeometryAttribute( 'tangent' ) ) {\r\n\r\n\t\tassign( tangentLocal, skinNormal ).build( builder );\r\n\r\n\t}\r\n\r\n} );\r\n\r\nclass SkinningNode extends Node {\r\n\r\n\tconstructor( skinnedMesh ) {\r\n\r\n\t\tsuper( 'void' );\r\n\r\n\t\tthis.skinnedMesh = skinnedMesh;\r\n\r\n\t\tthis.updateType = NodeUpdateType.OBJECT;\r\n\r\n\t\t//\r\n\r\n\t\tthis.skinIndexNode = attribute( 'skinIndex', 'uvec4' );\r\n\t\tthis.skinWeightNode = attribute( 'skinWeight', 'vec4' );\r\n\r\n\t\tthis.bindMatrixNode = uniform( mat4( skinnedMesh.bindMatrix ) );\r\n\t\tthis.bindMatrixInverseNode = uniform( mat4( skinnedMesh.bindMatrixInverse ) );\r\n\t\tthis.boneMatricesNode = buffer( skinnedMesh.skeleton.boneMatrices, 'mat4', skinnedMesh.skeleton.bones.length );\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tSkinning.call( {\r\n\t\t\tindex: this.skinIndexNode,\r\n\t\t\tweight: this.skinWeightNode,\r\n\t\t\tbindMatrix: this.bindMatrixNode,\r\n\t\t\tbindMatrixInverse: this.bindMatrixInverseNode,\r\n\t\t\tboneMatrices: this.boneMatricesNode\r\n\t\t}, builder );\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tthis.skinnedMesh.skeleton.update();\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default SkinningNode;\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { ShaderNode, positionView, normalView, uv, vec3, add, sub, mul, dFdx, dFdy, cross, max, dot, normalize, inversesqrt, faceDirection, modelNormalMatrix, TBNViewMatrix } from '../shadernode/ShaderNodeBaseElements.js';\r\n\r\nimport { TangentSpaceNormalMap, ObjectSpaceNormalMap } from 'three';\r\n\r\n// Normal Mapping Without Precomputed Tangents\r\n// http://www.thetenthplanet.de/archives/1180\r\n\r\nconst perturbNormal2ArbNode = new ShaderNode( ( inputs ) => {\r\n\r\n\tconst { eye_pos, surf_norm, mapN, uv } = inputs;\r\n\r\n\tconst q0 = dFdx( eye_pos.xyz );\r\n\tconst q1 = dFdy( eye_pos.xyz );\r\n\tconst st0 = dFdx( uv.st );\r\n\tconst st1 = dFdy( uv.st );\r\n\r\n\tconst N = surf_norm; // normalized\r\n\r\n\tconst q1perp = cross( q1, N );\r\n\tconst q0perp = cross( N, q0 );\r\n\r\n\tconst T = add( mul( q1perp, st0.x ), mul( q0perp, st1.x ) );\r\n\tconst B = add( mul( q1perp, st0.y ), mul( q0perp, st1.y ) );\r\n\r\n\tconst det = max( dot( T, T ), dot( B, B ) );\r\n\tconst scale = mul( faceDirection, inversesqrt( det ) );\r\n\r\n\treturn normalize( add( mul( T, mul( mapN.x, scale ) ), mul( B, mul( mapN.y, scale ) ), mul( N, mapN.z ) ) );\r\n\r\n} );\r\n\r\nclass NormalMapNode extends TempNode {\r\n\r\n\tconstructor( node, scaleNode = null ) {\r\n\r\n\t\tsuper( 'vec3' );\r\n\r\n\t\tthis.node = node;\r\n\t\tthis.scaleNode = scaleNode;\r\n\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) {\r\n\r\n\t\tconst { normalMapType, scaleNode } = this;\r\n\r\n\t\tconst normalOP = mul( this.node, 2.0 );\r\n\t\tlet normalMap = sub( normalOP, 1.0 );\r\n\r\n\t\tif ( scaleNode !== null ) {\r\n\r\n\t\t\tconst normalMapScale = mul( normalMap.xy, scaleNode );\r\n\t\t\tnormalMap = vec3( normalMapScale, normalMap.z );\r\n\r\n\t\t}\r\n\r\n\t\tlet outputNode = null;\r\n\r\n\t\tif ( normalMapType === ObjectSpaceNormalMap ) {\r\n\r\n\t\t\toutputNode = normalize( mul( modelNormalMatrix, normalMap ) );\r\n\r\n\t\t} else if ( normalMapType === TangentSpaceNormalMap ) {\r\n\r\n\t\t\tconst tangent = builder.hasGeometryAttribute( 'tangent' );\r\n\r\n\t\t\tif ( tangent === true ) {\r\n\r\n\t\t\t\toutputNode = normalize( mul( TBNViewMatrix, normalMap ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\toutputNode = perturbNormal2ArbNode.call( {\r\n\t\t\t\t\teye_pos: positionView,\r\n\t\t\t\t\tsurf_norm: normalView,\r\n\t\t\t\t\tmapN: normalMap,\r\n\t\t\t\t\tuv: uv()\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn outputNode;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NormalMapNode;\r\n", "import MaterialNode from './MaterialNode.js';\r\nimport NormalMapNode from '../display/NormalMapNode.js';\r\n\r\nimport {\r\n\tnormalView, materialReference\r\n} from '../shadernode/ShaderNodeElements.js';\r\n\r\nclass ExtendedMaterialNode extends MaterialNode {\r\n\r\n\tconstructor( scope ) {\r\n\r\n\t\tsuper( scope );\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\t\tlet type = null;\r\n\r\n\t\tif ( scope === ExtendedMaterialNode.NORMAL ) {\r\n\r\n\t\t\ttype = 'vec3';\r\n\r\n\t\t}\r\n\r\n\t\treturn type || super.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) {\r\n\r\n\t\tconst material = builder.material;\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tlet node = null;\r\n\r\n\t\tif ( scope === ExtendedMaterialNode.NORMAL ) {\r\n\r\n\t\t\tnode = material.normalMap ? new NormalMapNode( this.getTexture( 'normalMap' ), materialReference( 'normalScale', 'vec2' ) ) : normalView;\r\n\r\n\t\t}\r\n\r\n\t\treturn node || super.construct( builder );\r\n\r\n\t}\r\n\r\n}\r\n\r\nExtendedMaterialNode.NORMAL = 'normal';\r\n\r\nexport default ExtendedMaterialNode;\r\n", "import TempNode from '../core/Node.js';\r\nimport { ShaderNode, EPSILON, vec3, sub, mul, div, cond, lessThan, equal, max } from '../shadernode/ShaderNodeBaseElements.js';\r\n\r\nexport const BurnNode = new ShaderNode( ( { base, blend } ) => {\r\n\r\n\tconst fn = ( c ) => cond( lessThan( blend[ c ], EPSILON ), blend[ c ], max( sub( 1.0, div( sub( 1.0, base[ c ] ), blend[ c ] ) ), 0 ) );\r\n\r\n\treturn vec3( fn( 'x' ), fn( 'y' ), fn( 'z' ) );\r\n\r\n} );\r\n\r\nexport const DodgeNode = new ShaderNode( ( { base, blend } ) => {\r\n\r\n\tconst fn = ( c ) => cond( equal( blend[ c ], 1.0 ), blend[ c ], max( div( base[ c ], sub( 1.0, blend[ c ] ) ), 0 ) );\r\n\r\n\treturn vec3( fn( 'x' ), fn( 'y' ), fn( 'z' ) );\r\n\r\n} );\r\n\r\nexport const ScreenNode = new ShaderNode( ( { base, blend } ) => {\r\n\r\n\tconst fn = ( c ) => sub( 1.0, mul( sub( 1.0, base[ c ] ), sub( 1.0, blend[ c ] ) ) );\r\n\r\n\treturn vec3( fn( 'x' ), fn( 'y' ), fn( 'z' ) );\r\n\r\n} );\r\n\r\nexport const OverlayNode = new ShaderNode( ( { base, blend } ) => {\r\n\r\n\tconst fn = ( c ) => cond( lessThan( base[ c ], 0.5 ), mul( 2.0, base[ c ], blend[ c ] ), sub( 1.0, mul( sub( 1.0, base[ c ] ), sub( 1.0, blend[ c ] ) ) ) );\r\n\r\n\treturn vec3( fn( 'x' ), fn( 'y' ), fn( 'z' ) );\r\n\r\n} );\r\n\r\nclass BlendModeNode extends TempNode {\r\n\r\n\tconstructor( blendMode, baseNode, blendNode ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.blendMode = blendMode;\r\n\r\n\t\tthis.baseNode = baseNode;\r\n\t\tthis.blendNode = blendNode;\r\n\r\n\t}\r\n\r\n\tconstruct() {\r\n\r\n\t\tconst { blendMode, baseNode, blendNode } = this;\r\n\t\tconst params = { base: baseNode, blend: blendNode };\r\n\r\n\t\tlet outputNode = null;\r\n\r\n\t\tif ( blendMode === BlendModeNode.BURN ) {\r\n\r\n\t\t\toutputNode = BurnNode.call( params );\r\n\r\n\t\t} else if ( blendMode === BlendModeNode.DODGE ) {\r\n\r\n\t\t\toutputNode = DodgeNode.call( params );\r\n\r\n\t\t} else if ( blendMode === BlendModeNode.SCREEN ) {\r\n\r\n\t\t\toutputNode = ScreenNode.call( params );\r\n\r\n\t\t} else if ( blendMode === BlendModeNode.OVERLAY ) {\r\n\r\n\t\t\toutputNode = OverlayNode.call( params );\r\n\r\n\t\t}\r\n\r\n\t\treturn outputNode;\r\n\r\n\t}\r\n\r\n}\r\n\r\nBlendModeNode.BURN = 'burn';\r\nBlendModeNode.DODGE = 'dodge';\r\nBlendModeNode.SCREEN = 'screen';\r\nBlendModeNode.OVERLAY = 'overlay';\r\n\r\nexport default BlendModeNode;\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { ShaderNode, vec3, mat3, add, sub, mul, max, div, float, mix, cos, sin, atan2, sqrt, luminance } from '../shadernode/ShaderNodeBaseElements.js';\r\n\r\nconst saturationNode = new ShaderNode( ( { color, adjustment } ) => {\r\n\r\n\treturn mix( luminance( color ), color, adjustment );\r\n\r\n} );\r\n\r\nconst vibranceNode = new ShaderNode( ( { color, adjustment } ) => {\r\n\r\n\tconst average = div( add( color.r, color.g, color.b ), 3.0 );\r\n\r\n\tconst mx = max( color.r, max( color.g, color.b ) );\r\n\tconst amt = mul( sub( mx, average ), mul( - 3.0, adjustment ) );\r\n\r\n\treturn mix( color.rgb, vec3( mx ), amt );\r\n\r\n} );\r\n\r\nconst hueNode = new ShaderNode( ( { color, adjustment } ) => {\r\n\r\n\tconst RGBtoYIQ = mat3( 0.299, 0.587, 0.114, 0.595716, - 0.274453, - 0.321263, 0.211456, - 0.522591, 0.311135 );\r\n\tconst YIQtoRGB = mat3( 1.0, 0.9563, 0.6210, 1.0, - 0.2721, - 0.6474, 1.0, - 1.107, 1.7046 );\r\n\r\n\tconst yiq = mul( RGBtoYIQ, color );\r\n\r\n\tconst hue = add( atan2( yiq.z, yiq.y ), adjustment );\r\n\tconst chroma = sqrt( add( mul( yiq.z, yiq.z ), mul( yiq.y, yiq.y ) ) );\r\n\r\n\treturn mul( YIQtoRGB, vec3( yiq.x, mul( chroma, cos( hue ) ), mul( chroma, sin( hue ) ) ) );\r\n\r\n} );\r\n\r\nclass ColorAdjustmentNode extends TempNode {\r\n\r\n\tconstructor( method, colorNode, adjustmentNode = float( 1 ) ) {\r\n\r\n\t\tsuper( 'vec3' );\r\n\r\n\t\tthis.method = method;\r\n\r\n\t\tthis.colorNode = colorNode;\r\n\t\tthis.adjustmentNode = adjustmentNode;\r\n\r\n\t}\r\n\r\n\tconstruct() {\r\n\r\n\t\tconst { method, colorNode, adjustmentNode } = this;\r\n\r\n\t\tconst callParams = { color: colorNode, adjustment: adjustmentNode };\r\n\r\n\t\tlet outputNode = null;\r\n\r\n\t\tif ( method === ColorAdjustmentNode.SATURATION ) {\r\n\r\n\t\t\toutputNode = saturationNode.call( callParams );\r\n\r\n\t\t} else if ( method === ColorAdjustmentNode.VIBRANCE ) {\r\n\r\n\t\t\toutputNode = vibranceNode.call( callParams );\r\n\r\n\t\t} else if ( method === ColorAdjustmentNode.HUE ) {\r\n\r\n\t\t\toutputNode = hueNode.call( callParams );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( `${ this.type }: Method \"${ this.method }\" not supported!` );\r\n\r\n\t\t}\r\n\r\n\t\treturn outputNode;\r\n\r\n\t}\r\n\r\n}\r\n\r\nColorAdjustmentNode.SATURATION = 'saturation';\r\nColorAdjustmentNode.VIBRANCE = 'vibrance';\r\nColorAdjustmentNode.HUE = 'hue';\r\n\r\nexport default ColorAdjustmentNode;\r\n", "import TempNode from '../core/Node.js';\r\nimport { ShaderNode, vec3, pow, mul, sub, mix, vec4, lessThanEqual } from '../shadernode/ShaderNodeBaseElements.js';\r\n\r\nimport { LinearEncoding, sRGBEncoding } from 'three';\r\n\r\nexport const LinearToLinear = new ShaderNode( ( inputs ) => {\r\n\r\n\treturn inputs.value;\r\n\r\n} );\r\n\r\nexport const LinearTosRGB = new ShaderNode( ( inputs ) => {\r\n\r\n\tconst { value } = inputs;\r\n\r\n\tconst rgb = value.rgb;\r\n\r\n\tconst a = sub( mul( pow( value.rgb, vec3( 0.41666 ) ), 1.055 ), vec3( 0.055 ) );\r\n\tconst b = mul( rgb, 12.92 );\r\n\tconst factor = vec3( lessThanEqual( rgb, vec3( 0.0031308 ) ) );\r\n\r\n\tconst rgbResult = mix( a, b, factor );\r\n\r\n\treturn vec4( rgbResult, value.a );\r\n\r\n} );\r\n\r\nconst EncodingLib = {\r\n\tLinearToLinear,\r\n\tLinearTosRGB\r\n};\r\n\r\nclass ColorSpaceNode extends TempNode {\r\n\r\n\tconstructor( method, node ) {\r\n\r\n\t\tsuper( 'vec4' );\r\n\r\n\t\tthis.method = method;\r\n\r\n\t\tthis.node = node;\r\n\r\n\t}\r\n\r\n\tfromEncoding( encoding ) {\r\n\r\n\t\tlet method = null;\r\n\r\n\t\tif ( encoding === LinearEncoding ) {\r\n\r\n\t\t\tmethod = 'Linear';\r\n\r\n\t\t} else if ( encoding === sRGBEncoding ) {\r\n\r\n\t\t\tmethod = 'sRGB';\r\n\r\n\t\t}\r\n\r\n\t\tthis.method = 'LinearTo' + method;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tconstruct() {\r\n\r\n\t\tconst method = this.method;\r\n\t\tconst node = this.node;\r\n\r\n\t\tlet outputNode = null;\r\n\r\n\t\tif ( method !== ColorSpaceNode.LINEAR_TO_LINEAR ) {\r\n\r\n\t\t\tconst encodingFunctionNode = EncodingLib[ method ];\r\n\r\n\t\t\toutputNode = encodingFunctionNode.call( {\r\n\t\t\t\tvalue: node\r\n\t\t\t} );\r\n\r\n\t\t} else {\r\n\r\n\t\t\toutputNode = node;\r\n\r\n\t\t}\r\n\r\n\t\treturn outputNode;\r\n\r\n\t}\r\n\r\n}\r\n\r\nColorSpaceNode.LINEAR_TO_LINEAR = 'LinearToLinear';\r\nColorSpaceNode.LINEAR_TO_SRGB = 'LinearTosRGB';\r\n\r\nexport default ColorSpaceNode;\r\n", "import TempNode from '../core/Node.js';\r\nimport { mul, floor, reciprocal } from '../shadernode/ShaderNodeBaseElements.js';\r\n\r\nclass PosterizeNode extends TempNode {\r\n\r\n\tconstructor( sourceNode, stepsNode ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.sourceNode = sourceNode;\r\n\t\tthis.stepsNode = stepsNode;\r\n\r\n\t}\r\n\r\n\tconstruct() {\r\n\r\n\t\tconst { sourceNode, stepsNode } = this;\r\n\r\n\t\treturn mul( floor( mul( sourceNode, stepsNode ) ), reciprocal( stepsNode ) );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default PosterizeNode;\r\n", "import TempNode from '../core/Node.js';\r\nimport { ShaderNode, vec3, mat3, float, clamp, max, pow } from '../shadernode/ShaderNodeBaseElements.js';\r\n\r\nimport { NoToneMapping, LinearToneMapping, ReinhardToneMapping, CineonToneMapping, ACESFilmicToneMapping } from 'three';\r\n\r\n// exposure only\r\nexport const LinearToneMappingNode = new ShaderNode( ( { color, exposure } ) => {\r\n\r\n\treturn color.mul( exposure );\r\n\r\n} );\r\n\r\n// source: https://www.cs.utah.edu/docs/techreports/2002/pdf/UUCS-02-001.pdf\r\nexport const ReinhardToneMappingNode = new ShaderNode( ( { color, exposure } ) => {\r\n\r\n\tcolor = color.mul( exposure );\r\n\r\n\treturn clamp( color.div( vec3( 1.0 ).add( color ) ) );\r\n\r\n} );\r\n\r\n// source: http://filmicworlds.com/blog/filmic-tonemapping-operators/\r\nexport const OptimizedCineonToneMappingNode = new ShaderNode( ( { color, exposure } ) => {\r\n\r\n\t// optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\r\n\tcolor = color.mul( exposure );\r\n\tcolor = max( vec3( 0.0 ), color.sub( 0.004 ) );\r\n\r\n\tconst a = color.mul( color.mul( 6.2 ).add( 0.5 ) );\r\n\tconst b = color.mul( color.mul( 6.2 ).add( 1.7 ) ).add( 0.06 );\r\n\r\n\treturn pow( a.div( b ), vec3( 2.2 ) );\r\n\r\n} );\r\n\r\n// source: https://github.com/selfshadow/ltc_code/blob/master/webgl/shaders/ltc/ltc_blit.fs\r\nconst RRTAndODTFit = new ShaderNode( ( { color } ) => {\r\n\r\n\tconst a = color.mul( color.add( 0.0245786 ) ).sub( 0.000090537 );\r\n\tconst b = color.mul( color.add( 0.4329510 ).mul( 0.983729 ) ).add( 0.238081 );\r\n\r\n\treturn a.div( b );\r\n\r\n} );\r\n\r\n// source: https://github.com/selfshadow/ltc_code/blob/master/webgl/shaders/ltc/ltc_blit.fs\r\nconst ACESFilmicToneMappingNode = new ShaderNode( ( { color, exposure } ) => {\r\n\r\n\t// sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT\r\n\tconst ACESInputMat = mat3(\r\n\t\tvec3( 0.59719, 0.07600, 0.02840 ), // transposed from source\r\n\t\tvec3( 0.35458, 0.90834, 0.13383 ),\r\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\r\n\t);\r\n\r\n\t// ODT_SAT => XYZ => D60_2_D65 => sRGB\r\n\tconst ACESOutputMat = mat3(\r\n\t\tvec3( 1.60475, - 0.10208, - 0.00327 ), // transposed from source\r\n\t\tvec3( - 0.53108, 1.10813, - 0.07276 ),\r\n\t\tvec3( - 0.07367, - 0.00605, 1.07602 )\r\n\t);\r\n\r\n\tcolor = color.mul( exposure ).div( 0.6 );\r\n\r\n\tcolor = ACESInputMat.mul( color );\r\n\r\n\t// Apply RRT and ODT\r\n\tcolor = RRTAndODTFit.call( { color } );\r\n\r\n\tcolor = ACESOutputMat.mul( color );\r\n\r\n\t// Clamp to [0, 1]\r\n\treturn clamp( color );\r\n\r\n} );\r\n\r\nconst toneMappingLib = {\r\n\t[ LinearToneMapping ]: LinearToneMappingNode,\r\n\t[ ReinhardToneMapping ]: ReinhardToneMappingNode,\r\n\t[ CineonToneMapping ]: OptimizedCineonToneMappingNode,\r\n\t[ ACESFilmicToneMapping ]: ACESFilmicToneMappingNode\r\n};\r\n\r\nclass ToneMappingNode extends TempNode {\r\n\r\n\tconstructor( toneMapping = NoToneMapping, exposureNode = float( 1 ), colorNode = null ) {\r\n\r\n\t\tsuper( 'vec3' );\r\n\r\n\t\tthis.toneMapping = toneMapping;\r\n\r\n\t\tthis.exposureNode = exposureNode;\r\n\t\tthis.colorNode = colorNode;\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) {\r\n\r\n\t\tconst colorNode = this.colorNode || builder.context.color;\r\n\t\tconst toneMapping = this.toneMapping;\r\n\r\n\t\tif ( toneMapping === NoToneMapping ) return colorNode;\r\n\r\n\t\tconst toneMappingParams = { exposure: this.exposureNode, color: colorNode };\r\n\t\tconst toneMappingNode = toneMappingLib[ toneMapping ];\r\n\r\n\t\tlet outputNode = null;\r\n\r\n\t\tif ( toneMappingNode ) {\r\n\r\n\t\t\toutputNode = toneMappingNode.call( toneMappingParams );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( 'ToneMappingNode: Unsupported Tone Mapping configuration.', toneMapping );\r\n\r\n\t\t\toutputNode = colorNode;\r\n\r\n\t\t}\r\n\r\n\t\treturn outputNode;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ToneMappingNode;\r\n", "import Node from '../core/Node.js';\r\nimport { uniform, div, vec2, invert } from '../shadernode/ShaderNodeBaseElements.js';\r\nimport { Vector2 } from 'three';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\n\r\nlet resolution;\r\n\r\nclass ViewportNode extends Node {\r\n\r\n\tconstructor( scope ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.scope = scope;\r\n\r\n\t\tthis.isViewportNode = true;\r\n\r\n\t}\r\n\r\n\tgetNodeType() {\r\n\r\n\t\treturn this.scope === ViewportNode.COORDINATE ? 'vec4' : 'vec2';\r\n\r\n\t}\r\n\r\n\tgetUpdateType() {\r\n\r\n\t\tlet updateType = NodeUpdateType.NONE;\r\n\r\n\t\tif ( this.scope === ViewportNode.RESOLUTION ) {\r\n\r\n\t\t\tupdateType = NodeUpdateType.FRAME;\r\n\r\n\t\t}\r\n\r\n\t\tthis.updateType = updateType;\r\n\r\n\t\treturn updateType;\r\n\r\n\t}\r\n\r\n\tupdate( { renderer } ) {\r\n\r\n\t\trenderer.getSize( resolution );\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tif ( scope === ViewportNode.COORDINATE ) return;\r\n\r\n\t\tlet output = null;\r\n\r\n\t\tif ( scope === ViewportNode.RESOLUTION ) {\r\n\r\n\t\t\toutput = uniform( resolution || ( resolution = new Vector2() ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst coordinateNode = vec2( new ViewportNode( ViewportNode.COORDINATE ) );\r\n\t\t\tconst resolutionNode = new ViewportNode( ViewportNode.RESOLUTION );\r\n\r\n\t\t\toutput = div( coordinateNode, resolutionNode );\r\n\r\n\t\t\tlet outX = output.x;\r\n\t\t\tlet outY = output.y;\r\n\r\n\t\t\tif ( /top/i.test( scope ) && builder.isFlipY() ) outY = invert( outY );\r\n\t\t\telse if ( /bottom/i.test( scope ) && builder.isFlipY() === false ) outY = invert( outY );\r\n\r\n\t\t\tif ( /right/i.test( scope ) ) outX = invert( outX );\r\n\r\n\t\t\toutput = vec2( outX, outY );\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tif ( this.scope === ViewportNode.COORDINATE ) {\r\n\r\n\t\t\treturn builder.getFragCoord();\r\n\r\n\t\t}\r\n\r\n\t\treturn super.generate( builder );\r\n\r\n\t}\r\n\r\n}\r\n\r\nViewportNode.COORDINATE = 'coordinate';\r\nViewportNode.RESOLUTION = 'resolution';\r\nViewportNode.TOP_LEFT = 'topLeft';\r\nViewportNode.BOTTOM_LEFT = 'bottomLeft';\r\nViewportNode.TOP_RIGHT = 'topRight';\r\nViewportNode.BOTTOM_RIGHT = 'bottomRight';\r\n\r\nexport default ViewportNode;\r\n", "import Node from '../core/Node.js';\r\n\r\nclass LightingNode extends Node {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper( 'vec3' );\r\n\r\n\t}\r\n\r\n\tgenerate( /*builder*/ ) {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default LightingNode;\r\n", "import LightingNode from './LightingNode.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\nimport { uniform } from '../shadernode/ShaderNodeElements.js';\r\n\r\nimport { Color } from 'three';\r\n\r\nclass AnalyticLightNode extends LightingNode {\r\n\r\n\tconstructor( light = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.updateType = NodeUpdateType.OBJECT;\r\n\r\n\t\tthis.light = light;\r\n\r\n\t\tthis.colorNode = uniform( new Color() );\r\n\r\n\t}\r\n\r\n\tgetHash( /*builder*/ ) {\r\n\r\n\t\treturn this.light.uuid;\r\n\r\n\t}\r\n\r\n\tupdate( /*frame*/ ) {\r\n\r\n\t\tconst { light } = this;\r\n\r\n\t\tthis.colorNode.value.copy( light.color ).multiplyScalar( light.intensity );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default AnalyticLightNode;\r\n", "import Node from '../core/Node.js';\r\nimport AnalyticLightNode from './AnalyticLightNode.js';\r\n\r\nconst references = new WeakMap();\r\n\r\nconst sortLights = ( lights ) => {\r\n\r\n\treturn lights.sort( ( a, b ) => a.id - b.id );\r\n\r\n};\r\n\r\nclass LightsNode extends Node {\r\n\r\n\tconstructor( lightNodes = [] ) {\r\n\r\n\t\tsuper( 'vec3' );\r\n\r\n\t\tthis.lightNodes = lightNodes;\r\n\r\n\t\tthis._hash = null;\r\n\r\n\t}\r\n\r\n\tget hasLight() {\r\n\r\n\t\treturn this.lightNodes.length > 0;\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) {\r\n\r\n\t\tconst lightNodes = this.lightNodes;\r\n\r\n\t\tfor ( const lightNode of lightNodes ) {\r\n\r\n\t\t\tlightNode.build( builder );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetHash( builder ) {\r\n\r\n\t\tif ( this._hash === null ) {\r\n\r\n\t\t\tlet hash = '';\r\n\r\n\t\t\tconst lightNodes = this.lightNodes;\r\n\r\n\t\t\tfor ( const lightNode of lightNodes ) {\r\n\r\n\t\t\t\thash += lightNode.getHash( builder ) + ' ';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._hash = hash;\r\n\r\n\t\t}\r\n\r\n\t\treturn this._hash;\r\n\r\n\t}\r\n\r\n\tgetLightNodeByHash( hash ) {\r\n\r\n\t\tconst lightNodes = this.lightNodes;\r\n\r\n\t\tfor ( const lightNode of lightNodes ) {\r\n\r\n\t\t\tif ( lightNode.light.uuid === hash ) {\r\n\r\n\t\t\t\treturn lightNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tfromLights( lights ) {\r\n\r\n\t\tconst lightNodes = [];\r\n\r\n\t\tlights = sortLights( lights );\r\n\r\n\t\tfor ( const light of lights ) {\r\n\r\n\t\t\tlet lightNode = this.getLightNodeByHash( light.uuid );\r\n\r\n\t\t\tif ( lightNode === null ) {\r\n\r\n\t\t\t\tconst lightClass = light.constructor;\r\n\t\t\t\tconst lightNodeClass = references.has( lightClass ) ? references.get( lightClass ) : AnalyticLightNode;\r\n\r\n\t\t\t\tlightNode = new lightNodeClass( light );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlightNodes.push( lightNode );\r\n\r\n\t\t}\r\n\r\n\t\tthis.lightNodes = lightNodes;\r\n\t\tthis._hash = null;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstatic setReference( lightClass, lightNodeClass ) {\r\n\r\n\t\treferences.set( lightClass, lightNodeClass );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default LightsNode;\r\n", "import ContextNode from '../core/ContextNode.js';\r\nimport { float, vec3, add, temp } from '../shadernode/ShaderNodeBaseElements.js';\r\n\r\nclass LightingContextNode extends ContextNode {\r\n\r\n\tconstructor( node, lightingModelNode = null ) {\r\n\r\n\t\tsuper( node );\r\n\r\n\t\tthis.lightingModelNode = lightingModelNode;\r\n\r\n\t}\r\n\r\n\tgetNodeType( /*builder*/ ) {\r\n\r\n\t\treturn 'vec3';\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) {\r\n\r\n\t\tconst { lightingModelNode } = this;\r\n\r\n\t\tconst context = this.context = {}; // reset context\r\n\t\tconst properties = builder.getNodeProperties( this );\r\n\r\n\t\tconst directDiffuse = temp( vec3() ),\r\n\t\t\tdirectSpecular = temp( vec3() ),\r\n\t\t\tindirectDiffuse = temp( vec3() ),\r\n\t\t\tindirectSpecular = temp( vec3() ),\r\n\t\t\ttotal = add( directDiffuse, directSpecular, indirectDiffuse, indirectSpecular );\r\n\r\n\t\tconst reflectedLight = {\r\n\t\t\tdirectDiffuse,\r\n\t\t\tdirectSpecular,\r\n\t\t\tindirectDiffuse,\r\n\t\t\tindirectSpecular,\r\n\t\t\ttotal\r\n\t\t};\r\n\r\n\t\tconst lighting = {\r\n\t\t\tradiance: temp( vec3() ),\r\n\t\t\tirradiance: temp( vec3() ),\r\n\t\t\tiblIrradiance: temp( vec3() ),\r\n\t\t\tambientOcclusion: temp( float( 1 ) )\r\n\t\t};\r\n\r\n\t\tObject.assign( properties, reflectedLight, lighting );\r\n\t\tObject.assign( context, lighting );\r\n\r\n\t\tcontext.reflectedLight = reflectedLight;\r\n\t\tcontext.lightingModelNode = lightingModelNode || context.lightingModelNode;\r\n\r\n\t\tif ( lightingModelNode && lightingModelNode.indirectDiffuse ) lightingModelNode.indirectDiffuse.call( context );\r\n\t\tif ( lightingModelNode && lightingModelNode.indirectSpecular ) lightingModelNode.indirectSpecular.call( context );\r\n\t\tif ( lightingModelNode && lightingModelNode.ambientOcclusion ) lightingModelNode.ambientOcclusion.call( context );\r\n\r\n\t\treturn super.construct( builder );\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst { context } = this;\r\n\t\tconst type = this.getNodeType( builder );\r\n\r\n\t\tsuper.generate( builder, type );\r\n\r\n\t\treturn context.reflectedLight.total.build( builder, type );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default LightingContextNode;\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { nodeObject, vec2, add, mul, atan2, asin, clamp, positionWorldDirection } from '../shadernode/ShaderNodeElements.js';\r\n\r\nclass EquirectUVNode extends TempNode {\r\n\r\n\tconstructor( dirNode = positionWorldDirection ) {\r\n\r\n\t\tsuper( 'vec2' );\r\n\r\n\t\tthis.dirNode = dirNode;\r\n\r\n\t}\r\n\r\n\tconstruct() {\r\n\r\n\t\tconst dir = nodeObject( this.dirNode );\r\n\r\n\t\tconst u = add( mul( atan2( dir.z, dir.x ), 1 / ( Math.PI * 2 ) ), 0.5 );\r\n\t\tconst v = add( mul( asin( clamp( dir.y, - 1.0, 1.0 ) ), 1 / Math.PI ), 0.5 );\r\n\r\n\t\treturn vec2( u, v );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default EquirectUVNode;\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { vec2, vec3, negate, normalize, cross, dot, mul, add, transformedNormalView, positionViewDirection } from '../shadernode/ShaderNodeBaseElements.js';\r\n\r\nclass MatcapUVNode extends TempNode {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper( 'vec2' );\r\n\r\n\t}\r\n\r\n\tconstruct() {\r\n\r\n\t\tconst x = normalize( vec3( positionViewDirection.z, 0, negate( positionViewDirection.x ) ) );\r\n\t\tconst y = cross( positionViewDirection, x );\r\n\r\n\t\treturn add( mul( vec2( dot( x, transformedNormalView ), dot( y, transformedNormalView ) ), 0.495 ), 0.5 );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default MatcapUVNode;\r\n", "import UniformNode from '../core/UniformNode.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\n\r\nclass TimerNode extends UniformNode {\r\n\r\n\tconstructor( scope = TimerNode.LOCAL, scale = 1, value = 0 ) {\r\n\r\n\t\tsuper( value );\r\n\r\n\t\tthis.scope = scope;\r\n\t\tthis.scale = scale;\r\n\r\n\t\tthis.updateType = NodeUpdateType.FRAME;\r\n\r\n\t}\r\n\t/*\r\n\t@TODO:\r\n\tgetNodeType( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tif ( scope === TimerNode.FRAME ) {\r\n\r\n\t\t\treturn 'uint';\r\n\r\n\t\t}\r\n\r\n\t\treturn 'float';\r\n\r\n\t}\r\n*/\r\n\tupdate( frame ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\t\tconst scale = this.scale;\r\n\r\n\t\tif ( scope === TimerNode.LOCAL ) {\r\n\r\n\t\t\tthis.value += frame.deltaTime * scale;\r\n\r\n\t\t} else if ( scope === TimerNode.DELTA ) {\r\n\r\n\t\t\tthis.value = frame.deltaTime * scale;\r\n\r\n\t\t} else if ( scope === TimerNode.FRAME ) {\r\n\r\n\t\t\tthis.value = frame.frameId;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// global\r\n\r\n\t\t\tthis.value = frame.time * scale;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.scope = this.scope;\r\n\t\tdata.scale = this.scale;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.scope = data.scope;\r\n\t\tthis.scale = data.scale;\r\n\r\n\t}\r\n\r\n}\r\n\r\nTimerNode.LOCAL = 'local';\r\nTimerNode.GLOBAL = 'global';\r\nTimerNode.DELTA = 'delta';\r\nTimerNode.FRAME = 'frame';\r\n\r\nexport default TimerNode;\r\n", "import Node from '../core/Node.js';\r\nimport TimerNode from './TimerNode.js';\r\nimport { abs, fract, round, sin, add, sub, mul } from '../shadernode/ShaderNodeBaseElements.js';\r\n\r\nclass OscNode extends Node {\r\n\r\n\tconstructor( method = OscNode.SINE, timeNode = new TimerNode() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.method = method;\r\n\t\tthis.timeNode = timeNode;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn this.timeNode.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tconstruct() {\r\n\r\n\t\tconst method = this.method;\r\n\t\tconst timeNode = this.timeNode;\r\n\r\n\t\tlet outputNode = null;\r\n\r\n\t\tif ( method === OscNode.SINE ) {\r\n\r\n\t\t\toutputNode = add( mul( sin( mul( add( timeNode, .75 ), Math.PI * 2 ) ), .5 ), .5 );\r\n\r\n\t\t} else if ( method === OscNode.SQUARE ) {\r\n\r\n\t\t\toutputNode = round( fract( timeNode ) );\r\n\r\n\t\t} else if ( method === OscNode.TRIANGLE ) {\r\n\r\n\t\t\toutputNode = abs( sub( 1, mul( fract( add( timeNode, .5 ) ), 2 ) ) );\r\n\r\n\t\t} else if ( method === OscNode.SAWTOOTH ) {\r\n\r\n\t\t\toutputNode = fract( timeNode );\r\n\r\n\t\t}\r\n\r\n\t\treturn outputNode;\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.method = this.method;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.method = data.method;\r\n\r\n\t}\r\n\r\n}\r\n\r\nOscNode.SINE = 'sine';\r\nOscNode.SQUARE = 'square';\r\nOscNode.TRIANGLE = 'triangle';\r\nOscNode.SAWTOOTH = 'sawtooth';\r\n\r\nexport default OscNode;\r\n", "import Node from '../core/Node.js';\r\nimport { add, sub, div, mul, clamp } from '../shadernode/ShaderNodeBaseElements.js';\r\n\r\nclass RemapNode extends Node {\r\n\r\n\tconstructor( node, inLowNode, inHighNode, outLowNode, outHighNode ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.node = node;\r\n\t\tthis.inLowNode = inLowNode;\r\n\t\tthis.inHighNode = inHighNode;\r\n\t\tthis.outLowNode = outLowNode;\r\n\t\tthis.outHighNode = outHighNode;\r\n\r\n\t\tthis.doClamp = true;\r\n\r\n\t}\r\n\r\n\tconstruct() {\r\n\r\n\t\tconst { node, inLowNode, inHighNode, outLowNode, outHighNode, doClamp } = this;\r\n\r\n\t\tlet t = div( sub( node, inLowNode ), sub( inHighNode, inLowNode ) );\r\n\r\n\t\tif ( doClamp === true ) t = clamp( t );\r\n\r\n\t\treturn add( mul( sub( outHighNode, outLowNode ), t ), outLowNode );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default RemapNode;\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { vec2, add, sub, mul, cos, sin } from '../shadernode/ShaderNodeBaseElements.js';\r\n\r\nclass RotateUVNode extends TempNode {\r\n\r\n\tconstructor( uvNode, rotationNode, centerNode = vec2( .5 ) ) {\r\n\r\n\t\tsuper( 'vec2' );\r\n\r\n\t\tthis.uvNode = uvNode;\r\n\t\tthis.rotationNode = rotationNode;\r\n\t\tthis.centerNode = centerNode;\r\n\r\n\t}\r\n\r\n\tconstruct() {\r\n\r\n\t\tconst { uvNode, rotationNode, centerNode } = this;\r\n\r\n\t\tconst cosAngle = cos( rotationNode );\r\n\t\tconst sinAngle = sin( rotationNode );\r\n\r\n\t\treturn vec2(\r\n\t\t\tadd( add( mul( cosAngle, sub( uvNode.x, centerNode.x ) ), mul( sinAngle, sub( uvNode.y, centerNode.y ) ) ), centerNode.x ),\r\n\t\t\tadd( sub( mul( cosAngle, sub( uvNode.y, centerNode.y ) ), mul( sinAngle, sub( uvNode.x, centerNode.x ) ) ), centerNode.y )\r\n\t\t);\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default RotateUVNode;\r\n", "import Node from '../core/Node.js';\r\nimport { add, mul, div, log2, clamp, maxMipLevel } from '../shadernode/ShaderNodeBaseElements.js';\r\n\r\nclass SpecularMIPLevelNode extends Node {\r\n\r\n\tconstructor( textureNode, roughnessNode = null ) {\r\n\r\n\t\tsuper( 'float' );\r\n\r\n\t\tthis.textureNode = textureNode;\r\n\t\tthis.roughnessNode = roughnessNode;\r\n\r\n\t}\r\n\r\n\tconstruct() {\r\n\r\n\t\tconst { textureNode, roughnessNode } = this;\r\n\r\n\t\t// taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\r\n\r\n\t\tconst maxMIPLevelScalar = maxMipLevel( textureNode );\r\n\r\n\t\tconst sigma = div( mul( Math.PI, mul( roughnessNode, roughnessNode ) ), add( 1.0, roughnessNode ) );\r\n\t\tconst desiredMIPLevel = add( maxMIPLevelScalar, log2( sigma ) );\r\n\r\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default SpecularMIPLevelNode;\r\n", "import Node from '../core/Node.js';\r\nimport ConstNode from '../core/ConstNode.js';\r\nimport UVNode from '../accessors/UVNode.js';\r\nimport MathNode from '../math/MathNode.js';\r\nimport OperatorNode from '../math/OperatorNode.js';\r\nimport SplitNode from '../utils/SplitNode.js';\r\nimport JoinNode from '../utils/JoinNode.js';\r\n\r\nclass SpriteSheetUVNode extends Node {\r\n\r\n\tconstructor( countNode, uvNode = new UVNode(), frameNode = new ConstNode( 0 ) ) {\r\n\r\n\t\tsuper( 'vec2' );\r\n\r\n\t\tthis.countNode = countNode;\r\n\t\tthis.uvNode = uvNode;\r\n\t\tthis.frameNode = frameNode;\r\n\r\n\t}\r\n\r\n\tconstruct() {\r\n\r\n\t\tconst { frameNode, uvNode, countNode } = this;\r\n\r\n\t\tconst one = new ConstNode( 1 );\r\n\r\n\t\tconst width = new SplitNode( countNode, 'x' );\r\n\t\tconst height = new SplitNode( countNode, 'y' );\r\n\r\n\t\tconst total = new OperatorNode( '*', width, height );\r\n\r\n\t\tconst roundFrame = new MathNode( MathNode.FLOOR, new MathNode( MathNode.MOD, frameNode, total ) );\r\n\r\n\t\tconst frameNum = new OperatorNode( '+', roundFrame, one );\r\n\r\n\t\tconst cell = new MathNode( MathNode.MOD, roundFrame, width );\r\n\t\tconst row = new MathNode( MathNode.CEIL, new OperatorNode( '/', frameNum, width ) );\r\n\t\tconst rowInv = new OperatorNode( '-', height, row );\r\n\r\n\t\tconst scale = new OperatorNode( '/', one, countNode );\r\n\r\n\t\tconst uvFrameOffset = new JoinNode( [\r\n\t\t\tnew OperatorNode( '*', cell, new SplitNode( scale, 'x' ) ),\r\n\t\t\tnew OperatorNode( '*', rowInv, new SplitNode( scale, 'y' ) )\r\n\t\t] );\r\n\r\n\t\tconst uvScale = new OperatorNode( '*', uvNode, scale );\r\n\t\tconst uvFrame = new OperatorNode( '+', uvScale, uvFrameOffset );\r\n\r\n\t\treturn uvFrame;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default SpriteSheetUVNode;\r\n", "import Node from '../core/Node.js';\r\nimport { float, vec3, add, mul, div, dot, normalize, abs, texture, positionWorld, normalWorld } from '../shadernode/ShaderNodeBaseElements.js';\r\n\r\nclass TriplanarTexturesNode extends Node {\r\n\r\n\tconstructor( textureXNode, textureYNode = null, textureZNode = null, scaleNode = float( 1 ), positionNode = positionWorld, normalNode = normalWorld ) {\r\n\r\n\t\tsuper( 'vec4' );\r\n\r\n\t\tthis.textureXNode = textureXNode;\r\n\t\tthis.textureYNode = textureYNode;\r\n\t\tthis.textureZNode = textureZNode;\r\n\r\n\t\tthis.scaleNode = scaleNode;\r\n\r\n\t\tthis.positionNode = positionNode;\r\n\t\tthis.normalNode = normalNode;\r\n\r\n\t}\r\n\r\n\tconstruct() {\r\n\r\n\t\tconst { textureXNode, textureYNode, textureZNode, scaleNode, positionNode, normalNode } = this;\r\n\r\n\t\t// Ref: https://github.com/keijiro/StandardTriplanar\r\n\r\n\t\t// Blending factor of triplanar mapping\r\n\t\tlet bf = normalize( abs( normalNode ) );\r\n\t\tbf = div( bf, dot( bf, vec3( 1.0 ) ) );\r\n\r\n\t\t// Triplanar mapping\r\n\t\tconst tx = mul( positionNode.yz, scaleNode );\r\n\t\tconst ty = mul( positionNode.zx, scaleNode );\r\n\t\tconst tz = mul( positionNode.xy, scaleNode );\r\n\r\n\t\t// Base color\r\n\t\tconst textureX = textureXNode.value;\r\n\t\tconst textureY = textureYNode !== null ? textureYNode.value : textureX;\r\n\t\tconst textureZ = textureZNode !== null ? textureZNode.value : textureX;\r\n\r\n\t\tconst cx = mul( texture( textureX, tx ), bf.x );\r\n\t\tconst cy = mul( texture( textureY, ty ), bf.y );\r\n\t\tconst cz = mul( texture( textureZ, tz ), bf.z );\r\n\r\n\t\treturn add( cx, cy, cz );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default TriplanarTexturesNode;\r\n", "import Node from '../core/Node.js';\r\nimport { attribute, float } from '../shadernode/ShaderNodeBaseElements.js';\r\nimport { MathUtils, InstancedBufferAttribute } from 'three';\r\n\r\nclass RangeNode extends Node {\r\n\r\n\tconstructor( min, max ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.min = min;\r\n\t\tthis.max = max;\r\n\r\n\t}\r\n\r\n\tgetVectorLength() {\r\n\r\n\t\tconst min = this.min;\r\n\r\n\t\tlet length = 1;\r\n\r\n\t\tif ( min.isVector2 ) length = 2;\r\n\t\telse if ( min.isVector3 ) length = 3;\r\n\t\telse if ( min.isVector4 ) length = 4;\r\n\t\telse if ( min.isColor ) length = 3;\r\n\r\n\t\treturn length;\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\treturn ( builder.object.isInstancedMesh === true ) ? builder.getTypeFromLength( this.getVectorLength() ) : 'float';\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) {\r\n\r\n\t\tconst { min, max } = this;\r\n\t\tconst { object, geometry } = builder;\r\n\r\n\t\tlet output = null;\r\n\r\n\t\tif ( object.isInstancedMesh === true ) {\r\n\r\n\t\t\tconst vectorLength = this.getVectorLength();\r\n\t\t\tconst attributeName = 'node' + this.id;\r\n\r\n\t\t\tconst length = vectorLength * object.count;\r\n\t\t\tconst array = new Float32Array( length );\r\n\r\n\t\t\tconst attributeGeometry = geometry.getAttribute( attributeName );\r\n\r\n\t\t\tif ( attributeGeometry === undefined || attributeGeometry.array.length < length ) {\r\n\r\n\t\t\t\tif ( vectorLength === 1 ) {\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\t\t\tarray[ i ] = MathUtils.lerp( min, max, Math.random() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( min.isColor ) {\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < length; i += 3 ) {\r\n\r\n\t\t\t\t\t\tarray[ i ] = MathUtils.lerp( min.r, max.r, Math.random() );\r\n\t\t\t\t\t\tarray[ i + 1 ] = MathUtils.lerp( min.g, max.g, Math.random() );\r\n\t\t\t\t\t\tarray[ i + 2 ] = MathUtils.lerp( min.b, max.b, Math.random() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst index = i % vectorLength;\r\n\r\n\t\t\t\t\t\tconst minValue = min.getComponent( index );\r\n\t\t\t\t\t\tconst maxValue = max.getComponent( index );\r\n\r\n\t\t\t\t\t\tarray[ i ] = MathUtils.lerp( minValue, maxValue, Math.random() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.setAttribute( attributeName, new InstancedBufferAttribute( array, vectorLength ) );\r\n\r\n\t\t\t\tgeometry.dispose();\r\n\r\n\t\t\t}\r\n\r\n\t\t\toutput = attribute( attributeName, builder.getTypeFromLength( vectorLength ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\toutput = float( 0 );\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default RangeNode;\r\n", "import TempNode from '../core/TempNode.js';\r\nimport { ShaderNode, uv, add, mul, floor, mod, sign } from '../shadernode/ShaderNodeBaseElements.js';\r\n\r\nconst checkerShaderNode = new ShaderNode( ( inputs ) => {\r\n\r\n\tconst uv = mul( inputs.uv, 2.0 );\r\n\r\n\tconst cx = floor( uv.x );\r\n\tconst cy = floor( uv.y );\r\n\tconst result = mod( add( cx, cy ), 2.0 );\r\n\r\n\treturn sign( result );\r\n\r\n} );\r\n\r\nclass CheckerNode extends TempNode {\r\n\r\n\tconstructor( uvNode = uv() ) {\r\n\r\n\t\tsuper( 'float' );\r\n\r\n\t\tthis.uvNode = uvNode;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\treturn checkerShaderNode.call( { uv: this.uvNode } ).build( builder );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default CheckerNode;\r\n", "import Node from '../core/Node.js';\r\nimport MathNode from '../math/MathNode.js';\r\n\r\nclass FogNode extends Node {\r\n\r\n\tconstructor( colorNode, factorNode ) {\r\n\r\n\t\tsuper( 'float' );\r\n\r\n\t\tthis.isFogNode = true;\r\n\r\n\t\tthis.colorNode = colorNode;\r\n\t\tthis.factorNode = factorNode;\r\n\r\n\t}\r\n\r\n\tmix( outputNode ) {\r\n\r\n\t\treturn new MathNode( MathNode.MIX, outputNode, this.colorNode, this );\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\treturn this.factorNode.build( builder, 'float' );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default FogNode;\r\n", "import FogNode from './FogNode.js';\r\nimport { smoothstep, negate, positionView } from '../shadernode/ShaderNodeBaseElements.js';\r\n\r\nclass FogRangeNode extends FogNode {\r\n\r\n\tconstructor( colorNode, nearNode, farNode ) {\r\n\r\n\t\tsuper( colorNode );\r\n\r\n\t\tthis.isFogRangeNode = true;\r\n\r\n\t\tthis.nearNode = nearNode;\r\n\t\tthis.farNode = farNode;\r\n\r\n\t}\r\n\r\n\tconstruct() {\r\n\r\n\t\tthis.factorNode = smoothstep( this.nearNode, this.farNode, negate( positionView.z ) );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default FogRangeNode;\r\n", "import FogNode from './FogNode.js';\r\nimport { sub, exp, mul, negate, positionView } from '../shadernode/ShaderNodeBaseElements.js';\r\n\r\nclass FogExp2Node extends FogNode {\r\n\r\n\tconstructor( colorNode, densityNode ) {\r\n\r\n\t\tsuper( colorNode );\r\n\r\n\t\tthis.isFogExp2Node = true;\r\n\r\n\t\tthis.densityNode = densityNode;\r\n\r\n\t}\r\n\r\n\tconstruct() {\r\n\r\n\t\tconst depthNode = negate( positionView.z );\r\n\t\tconst densityNode = this.densityNode;\r\n\r\n\t\tthis.factorNode = sub( 1.0, exp( mul( negate( densityNode ), densityNode, depthNode, depthNode ) ) );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default FogExp2Node;\r\n", "import { ShaderNode, sub } from '../../shadernode/ShaderNodeBaseElements.js';\r\n\r\nconst F_Schlick = new ShaderNode( ( inputs ) => {\r\n\r\n\tconst { f0, f90, dotVH } = inputs;\r\n\r\n\t// Original approximation by Christophe Schlick '94\r\n\t// float fresnel = pow( 1.0 - dotVH, 5.0 );\r\n\r\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\r\n\t// https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\r\n\tconst fresnel = dotVH.mul( - 5.55473 ).sub( 6.98316 ).mul( dotVH ).exp2();\r\n\r\n\treturn f0.mul( sub( 1.0, fresnel ) ).add( f90.mul( fresnel ) );\r\n\r\n} ); // validated\r\n\r\nexport default F_Schlick;\r\n", "import F_Schlick from './F_Schlick.js';\r\nimport { ShaderNode, shininess, specularColor, float, add, clamp, dot, mul, normalize, positionViewDirection, transformedNormalView } from '../../shadernode/ShaderNodeBaseElements.js';\r\n\r\nconst G_BlinnPhong_Implicit = () => float( 0.25 );\r\n\r\nconst D_BlinnPhong = new ShaderNode( ( { dotNH } ) => {\r\n\r\n\treturn shininess.mul( 1 / Math.PI ).mul( 0.5 ).add( 1.0 ).mul( dotNH.pow( shininess ) );\r\n\r\n} );\r\n\r\nconst BRDF_BlinnPhong = new ShaderNode( ( { lightDirection } ) => {\r\n\r\n\tconst halfDir = normalize( add( lightDirection, positionViewDirection ) );\r\n\r\n\tconst dotNH = clamp( dot( transformedNormalView, halfDir ) );\r\n\tconst dotVH = clamp( dot( positionViewDirection, halfDir ) );\r\n\r\n\tconst F = F_Schlick.call( { f0: specularColor, f90: 1.0, dotVH } );\r\n\tconst G = G_BlinnPhong_Implicit();\r\n\tconst D = D_BlinnPhong.call( { dotNH } );\r\n\r\n\treturn mul( F, G, D );\r\n\r\n} );\r\n\r\nexport default BRDF_BlinnPhong;\r\n", "import { ShaderNode, add, sub, mul, div, pow2, max, sqrt, EPSILON } from '../../shadernode/ShaderNodeBaseElements.js';\r\n\r\n// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2\r\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\nconst V_GGX_SmithCorrelated = new ShaderNode( ( inputs ) => {\r\n\r\n\tconst { alpha, dotNL, dotNV } = inputs;\r\n\r\n\tconst a2 = pow2( alpha );\r\n\r\n\tconst gv = mul( dotNL, sqrt( add( a2, mul( sub( 1.0, a2 ), pow2( dotNV ) ) ) ) );\r\n\tconst gl = mul( dotNV, sqrt( add( a2, mul( sub( 1.0, a2 ), pow2( dotNL ) ) ) ) );\r\n\r\n\treturn div( 0.5, max( add( gv, gl ), EPSILON ) );\r\n\r\n} ); // validated\r\n\r\nexport default V_GGX_SmithCorrelated;\r\n", "import { ShaderNode, add, sub, mul, div, pow2 } from '../../shadernode/ShaderNodeBaseElements.js';\r\n\r\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\r\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\r\n// alpha is \"roughness squared\" in Disney’s reparameterization\r\nconst D_GGX = new ShaderNode( ( inputs ) => {\r\n\r\n\tconst { alpha, dotNH } = inputs;\r\n\r\n\tconst a2 = pow2( alpha );\r\n\r\n\tconst denom = add( mul( pow2( dotNH ), sub( a2, 1.0 ) ), 1.0 ); // avoid alpha = 0 with dotNH = 1\r\n\r\n\treturn mul( 1 / Math.PI, div( a2, pow2( denom ) ) );\r\n\r\n} ); // validated\r\n\r\nexport default D_GGX;\r\n", "import F_Schlick from './F_Schlick.js';\r\nimport V_GGX_SmithCorrelated from './V_GGX_SmithCorrelated.js';\r\nimport D_GGX from './D_GGX.js';\r\nimport {\r\n\tShaderNode, dotNV, add, mul, clamp, dot, pow2, normalize,\r\n\ttransformedNormalView, positionViewDirection\r\n} from '../../shadernode/ShaderNodeBaseElements.js';\r\n\r\n// GGX Distribution, Schlick Fresnel, GGX_SmithCorrelated Visibility\r\nconst BRDF_GGX = new ShaderNode( ( inputs ) => {\r\n\r\n\tconst { lightDirection, f0, f90, roughness } = inputs;\r\n\r\n\tconst alpha = pow2( roughness ); // UE4's roughness\r\n\r\n\tconst halfDir = normalize( add( lightDirection, positionViewDirection ) );\r\n\r\n\tconst dotNL = clamp( dot( transformedNormalView, lightDirection ) );\r\n\t//const dotNV = clamp( dot( transformedNormalView, positionViewDirection ) );\r\n\tconst dotNH = clamp( dot( transformedNormalView, halfDir ) );\r\n\tconst dotVH = clamp( dot( positionViewDirection, halfDir ) );\r\n\r\n\tconst F = F_Schlick.call( { f0, f90, dotVH } );\r\n\r\n\tconst V = V_GGX_SmithCorrelated.call( { alpha, dotNL, dotNV } );\r\n\r\n\tconst D = D_GGX.call( { alpha, dotNH } );\r\n\r\n\treturn mul( F, mul( V, D ) );\r\n\r\n} ); // validated\r\n\r\nexport default BRDF_GGX;\r\n", "import { ShaderNode, mul } from '../../shadernode/ShaderNodeBaseElements.js';\r\n\r\nconst BRDF_Lambert = new ShaderNode( ( inputs ) => {\r\n\r\n\treturn mul( 1 / Math.PI, inputs.diffuseColor ); // punctual light\r\n\r\n} ); // validated\r\n\r\nexport default BRDF_Lambert;\r\n", "import {\r\n\tShaderNode, dotNV, vec2, vec4, mul, min\r\n} from '../../shadernode/ShaderNodeElements.js';\r\n\r\n// Analytical approximation of the DFG LUT, one half of the\r\n// split-sum approximation used in indirect specular lighting.\r\n// via 'environmentBRDF' from \"Physically Based Shading on Mobile\"\r\n// https://www.unrealengine.com/blog/physically-based-shading-on-mobile\r\nconst DFGApprox = new ShaderNode( ( inputs ) => {\r\n\r\n\tconst { roughness } = inputs;\r\n\r\n\tconst c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\r\n\r\n\tconst c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\r\n\r\n\tconst r = roughness.mul( c0 ).add( c1 );\r\n\r\n\tconst a004 = min( mul( r.x, r.x ), dotNV.mul( - 9.28 ).exp2() ).mul( r.x ).add( r.y );\r\n\r\n\tconst fab = vec2( - 1.04, 1.04 ).mul( a004 ).add( r.zw );\r\n\r\n\treturn fab;\r\n\r\n} );\r\n\r\nexport default DFGApprox;\r\n", "import {\r\n\tShaderNode, div, max, sub, mul, clamp, pow, pow2, pow4, cond, greaterThan\r\n} from '../../shadernode/ShaderNodeBaseElements.js';\r\n\r\nconst getDistanceAttenuation = new ShaderNode( ( inputs ) => {\r\n\r\n\tconst { lightDistance, cutoffDistance, decayExponent } = inputs;\r\n\r\n\t// based upon Frostbite 3 Moving to Physically-based Rendering\r\n\t// page 32, equation 26: E[window1]\r\n\t// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n\tconst distanceFalloff = div( 1.0, max( pow( lightDistance, decayExponent ), 0.01 ) );\r\n\r\n\treturn cond(\r\n\t\tgreaterThan( cutoffDistance, 0 ),\r\n\t\tmul( distanceFalloff, pow2( clamp( sub( 1.0, pow4( div( lightDistance, cutoffDistance ) ) ) ) ) ),\r\n\t\tdistanceFalloff\r\n\t);\r\n\r\n} ); // validated\r\n\r\nexport default getDistanceAttenuation;\r\n", "import { ShaderNode, max, abs, dFdx, dFdy, normalGeometry } from '../../shadernode/ShaderNodeBaseElements.js';\r\n\r\nconst getGeometryRoughness = new ShaderNode( () => {\r\n\r\n\tconst dxy = max( abs( dFdx( normalGeometry ) ), abs( dFdy( normalGeometry ) ) );\r\n\tconst geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\r\n\r\n\treturn geometryRoughness;\r\n\r\n} );\r\n\r\nexport default getGeometryRoughness;\r\n", "import getGeometryRoughness from './getGeometryRoughness.js';\r\nimport { ShaderNode, add, max, min } from '../../shadernode/ShaderNodeBaseElements.js';\r\n\r\nconst getRoughness = new ShaderNode( ( inputs ) => {\r\n\r\n\tconst { roughness } = inputs;\r\n\r\n\tconst geometryRoughness = getGeometryRoughness.call();\r\n\r\n\tlet roughnessFactor = max( roughness, 0.0525 ); // 0.0525 corresponds to the base mip of a 256 cubemap.\r\n\troughnessFactor = add( roughnessFactor, geometryRoughness );\r\n\troughnessFactor = min( roughnessFactor, 1.0 );\r\n\r\n\treturn roughnessFactor;\r\n\r\n} );\r\n\r\nexport default getRoughness;\r\n", "import BRDF_Lambert from './BSDF/BRDF_Lambert.js';\r\nimport BRDF_BlinnPhong from './BSDF/BRDF_BlinnPhong.js';\r\n\r\nimport {\r\n\tShaderNode,\r\n\tmul, clamp, dot, transformedNormalView,\r\n\tdiffuseColor, materialReflectivity, lightingModel\r\n} from '../shadernode/ShaderNodeElements.js';\r\n\r\nconst RE_Direct_BlinnPhong = new ShaderNode( ( { lightDirection, lightColor, reflectedLight } ) => {\r\n\r\n\tconst dotNL = clamp( dot( transformedNormalView, lightDirection ) );\r\n\tconst irradiance = mul( dotNL, lightColor );\r\n\r\n\treflectedLight.directDiffuse.add( mul( irradiance, BRDF_Lambert.call( { diffuseColor: diffuseColor.rgb } ) ) );\r\n\r\n\treflectedLight.directSpecular.add( irradiance.mul( BRDF_BlinnPhong.call( { lightDirection } ) ).mul( materialReflectivity ) );\r\n\r\n} );\r\n\r\nconst RE_IndirectDiffuse_BlinnPhong = new ShaderNode( ( { irradiance, reflectedLight } ) => {\r\n\r\n\treflectedLight.indirectDiffuse.add( irradiance.mul( BRDF_Lambert.call( { diffuseColor } ) ) );\r\n\r\n} );\r\n\r\nconst phongLightingModel = lightingModel( RE_Direct_BlinnPhong, RE_IndirectDiffuse_BlinnPhong );\r\n\r\nexport default phongLightingModel;\r\n", "import BRDF_Lambert from './BSDF/BRDF_Lambert.js';\r\nimport BRDF_GGX from './BSDF/BRDF_GGX.js';\r\nimport DFGApprox from './BSDF/DFGApprox.js';\r\nimport {\r\n\tShaderNode,\r\n\tvec3, mul, clamp, add, sub, dot, div, transformedNormalView,\r\n\tpow, exp2, dotNV,\r\n\tdiffuseColor, specularColor, roughness, temp, lightingModel\r\n} from '../shadernode/ShaderNodeElements.js';\r\n\r\n// Fdez-Agüera's \"Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting\"\r\n// Approximates multiscattering in order to preserve energy.\r\n// http://www.jcgt.org/published/0008/01/03/\r\nconst computeMultiscattering = ( singleScatter, multiScatter, specularF90 = 1 ) => {\r\n\r\n\tconst fab = DFGApprox.call( { roughness } );\r\n\r\n\tconst FssEss = add( mul( specularColor, fab.x ), mul( specularF90, fab.y ) );\r\n\r\n\tconst Ess = add( fab.x, fab.y );\r\n\tconst Ems = sub( 1.0, Ess );\r\n\r\n\tconst Favg = add( specularColor, mul( sub( 1.0, specularColor ), 0.047619 ) ); // 1/21\r\n\tconst Fms = div( mul( FssEss, Favg ), sub( 1.0, mul( Ems, Favg ) ) );\r\n\r\n\tsingleScatter.add( FssEss );\r\n\tmultiScatter.add( mul( Fms, Ems ) );\r\n\r\n};\r\n\r\nconst RE_IndirectSpecular_Physical = new ShaderNode( ( inputs ) => {\r\n\r\n\tconst { radiance, iblIrradiance, reflectedLight } = inputs;\r\n\r\n\t// Both indirect specular and indirect diffuse light accumulate here\r\n\r\n\tconst singleScattering = temp( vec3() );\r\n\tconst multiScattering = temp( vec3() );\r\n\tconst cosineWeightedIrradiance = mul( iblIrradiance, 1 / Math.PI );\r\n\r\n\tcomputeMultiscattering( singleScattering, multiScattering );\r\n\r\n\tconst diffuse = mul( diffuseColor, sub( 1.0, add( singleScattering, multiScattering ) ) );\r\n\r\n\treflectedLight.indirectSpecular.add( mul( radiance, singleScattering ) );\r\n\treflectedLight.indirectSpecular.add( mul( multiScattering, cosineWeightedIrradiance ) );\r\n\r\n\treflectedLight.indirectDiffuse.add( mul( diffuse, cosineWeightedIrradiance ) );\r\n\r\n} );\r\n\r\nconst RE_IndirectDiffuse_Physical = new ShaderNode( ( inputs ) => {\r\n\r\n\tconst { irradiance, reflectedLight } = inputs;\r\n\r\n\treflectedLight.indirectDiffuse.add( mul( irradiance, BRDF_Lambert.call( { diffuseColor } ) ) );\r\n\r\n} );\r\n\r\nconst RE_Direct_Physical = new ShaderNode( ( inputs ) => {\r\n\r\n\tconst { lightDirection, lightColor, reflectedLight } = inputs;\r\n\r\n\tconst dotNL = clamp( dot( transformedNormalView, lightDirection ) );\r\n\tconst irradiance = mul( dotNL, lightColor );\r\n\r\n\treflectedLight.directDiffuse.add( mul( irradiance, BRDF_Lambert.call( { diffuseColor: diffuseColor.rgb } ) ) );\r\n\r\n\treflectedLight.directSpecular.add( mul( irradiance, BRDF_GGX.call( { lightDirection, f0: specularColor, f90: 1, roughness } ) ) );\r\n\r\n} );\r\n\r\nconst RE_AmbientOcclusion_Physical = new ShaderNode( ( { ambientOcclusion, reflectedLight } ) => {\r\n\r\n\tconst aoNV = add( dotNV, ambientOcclusion );\r\n\tconst aoExp = exp2( sub( mul( - 16.0, roughness ), 1.0 ) );\r\n\r\n\tconst aoNode = clamp( add( sub( pow( aoNV, aoExp ), 1.0 ), ambientOcclusion ) );\r\n\r\n\treflectedLight.indirectDiffuse.mul( ambientOcclusion );\r\n\r\n\treflectedLight.indirectSpecular.mul( aoNode );\r\n\r\n\r\n} );\r\n\r\nconst physicalLightingModel = lightingModel( RE_Direct_Physical, RE_IndirectDiffuse_Physical, RE_IndirectSpecular_Physical, RE_AmbientOcclusion_Physical );\r\n\r\nexport default physicalLightingModel;\r\n", "import NodeUniform from './NodeUniform.js';\r\nimport NodeAttribute from './NodeAttribute.js';\r\nimport NodeVarying from './NodeVarying.js';\r\nimport NodeVar from './NodeVar.js';\r\nimport NodeCode from './NodeCode.js';\r\nimport NodeKeywords from './NodeKeywords.js';\r\nimport NodeCache from './NodeCache.js';\r\nimport { NodeUpdateType } from './constants.js';\r\n\r\nimport { REVISION, LinearEncoding, Color, Vector2, Vector3, Vector4 } from 'three';\r\n\r\nimport { mul, maxMipLevel } from '../shadernode/ShaderNodeElements.js';\r\n\r\nexport const defaultShaderStages = [ 'fragment', 'vertex' ];\r\nexport const defaultBuildStages = [ 'construct', 'analyze', 'generate' ];\r\nexport const shaderStages = [ ...defaultShaderStages, 'compute' ];\r\nexport const vector = [ 'x', 'y', 'z', 'w' ];\r\n\r\nconst typeFromLength = new Map();\r\ntypeFromLength.set( 2, 'vec2' );\r\ntypeFromLength.set( 3, 'vec3' );\r\ntypeFromLength.set( 4, 'vec4' );\r\ntypeFromLength.set( 9, 'mat3' );\r\ntypeFromLength.set( 16, 'mat4' );\r\n\r\nconst toFloat = ( value ) => {\r\n\r\n\tvalue = Number( value );\r\n\r\n\treturn value + ( value % 1 ? '' : '.0' );\r\n\r\n};\r\n\r\nclass NodeBuilder {\r\n\r\n\tconstructor( object, renderer, parser ) {\r\n\r\n\t\tthis.object = object;\r\n\t\tthis.material = object.material || null;\r\n\t\tthis.geometry = object.geometry || null;\r\n\t\tthis.renderer = renderer;\r\n\t\tthis.parser = parser;\r\n\r\n\t\tthis.nodes = [];\r\n\t\tthis.updateNodes = [];\r\n\t\tthis.hashNodes = {};\r\n\r\n\t\tthis.scene = null;\r\n\t\tthis.lightsNode = null;\r\n\t\tthis.fogNode = null;\r\n\r\n\t\tthis.vertexShader = null;\r\n\t\tthis.fragmentShader = null;\r\n\t\tthis.computeShader = null;\r\n\r\n\t\tthis.flowNodes = { vertex: [], fragment: [], compute: [] };\r\n\t\tthis.flowCode = { vertex: '', fragment: '', compute: [] };\r\n\t\tthis.uniforms = { vertex: [], fragment: [], compute: [], index: 0 };\r\n\t\tthis.codes = { vertex: [], fragment: [], compute: [] };\r\n\t\tthis.attributes = [];\r\n\t\tthis.varyings = [];\r\n\t\tthis.vars = { vertex: [], fragment: [], compute: [] };\r\n\t\tthis.flow = { code: '' };\r\n\t\tthis.stack = [];\r\n\r\n\t\tthis.context = {\r\n\t\t\tkeywords: new NodeKeywords(),\r\n\t\t\tmaterial: object.material,\r\n\t\t\tgetMIPLevelAlgorithmNode: ( textureNode, levelNode ) => mul( levelNode, maxMipLevel( textureNode ) )\r\n\t\t};\r\n\r\n\t\tthis.cache = new NodeCache();\r\n\t\tthis.globalCache = this.cache;\r\n\r\n\t\tthis.flowsData = new WeakMap();\r\n\r\n\t\tthis.shaderStage = null;\r\n\t\tthis.buildStage = null;\r\n\r\n\t}\r\n\r\n\tget node() {\r\n\r\n\t\treturn this.stack[ this.stack.length - 1 ];\r\n\r\n\t}\r\n\r\n\taddStack( node ) {\r\n\r\n\t\t/*\r\n\t\tif ( this.stack.indexOf( node ) !== - 1 ) {\r\n\r\n\t\t\tconsole.warn( 'Recursive node: ', node );\r\n\r\n\t\t}\r\n\t\t*/\r\n\r\n\t\tthis.stack.push( node );\r\n\r\n\t}\r\n\r\n\tremoveStack( node ) {\r\n\r\n\t\tconst lastStack = this.stack.pop();\r\n\r\n\t\tif ( lastStack !== node ) {\r\n\r\n\t\t\tthrow new Error( 'NodeBuilder: Invalid node stack!' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetHashNode( node, hash ) {\r\n\r\n\t\tthis.hashNodes[ hash ] = node;\r\n\r\n\t}\r\n\r\n\taddNode( node ) {\r\n\r\n\t\tif ( this.nodes.indexOf( node ) === - 1 ) {\r\n\r\n\t\t\tconst updateType = node.getUpdateType( this );\r\n\r\n\t\t\tif ( updateType !== NodeUpdateType.NONE ) {\r\n\r\n\t\t\t\tthis.updateNodes.push( node );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.nodes.push( node );\r\n\r\n\t\t\tthis.setHashNode( node, node.getHash( this ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetMethod( method ) {\r\n\r\n\t\treturn method;\r\n\r\n\t}\r\n\r\n\tgetNodeFromHash( hash ) {\r\n\r\n\t\treturn this.hashNodes[ hash ];\r\n\r\n\t}\r\n\r\n\taddFlow( shaderStage, node ) {\r\n\r\n\t\tthis.flowNodes[ shaderStage ].push( node );\r\n\r\n\t\treturn node;\r\n\r\n\t}\r\n\r\n\tsetContext( context ) {\r\n\r\n\t\tthis.context = context;\r\n\r\n\t}\r\n\r\n\tgetContext() {\r\n\r\n\t\treturn this.context;\r\n\r\n\t}\r\n\r\n\tsetCache( cache ) {\r\n\r\n\t\tthis.cache = cache;\r\n\r\n\t}\r\n\r\n\tgetCache() {\r\n\r\n\t\treturn this.cache;\r\n\r\n\t}\r\n\r\n\tisAvailable( /*name*/ ) {\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tgetInstanceIndex() {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\tgetFrontFacing() {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\tgetFragCoord() {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\tisFlipY() {\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tgetTexture( /* textureProperty, uvSnippet */ ) {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\tgetTextureLevel( /* textureProperty, uvSnippet, levelSnippet */ ) {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\tgetCubeTexture( /* textureProperty, uvSnippet */ ) {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\tgetCubeTextureLevel( /* textureProperty, uvSnippet, levelSnippet */ ) {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\t// @TODO: rename to .generateConst()\r\n\tgetConst( type, value = null ) {\r\n\r\n\t\tif ( value === null ) {\r\n\r\n\t\t\tif ( type === 'float' || type === 'int' || type === 'uint' ) value = 0;\r\n\t\t\telse if ( type === 'bool' ) value = false;\r\n\t\t\telse if ( type === 'color' ) value = new Color();\r\n\t\t\telse if ( type === 'vec2' ) value = new Vector2();\r\n\t\t\telse if ( type === 'vec3' ) value = new Vector3();\r\n\t\t\telse if ( type === 'vec4' ) value = new Vector4();\r\n\r\n\t\t}\r\n\r\n\t\tif ( type === 'float' ) return toFloat( value );\r\n\t\tif ( type === 'int' ) return `${ Math.round( value ) }`;\r\n\t\tif ( type === 'uint' ) return value >= 0 ? `${ Math.round( value ) }u` : '0u';\r\n\t\tif ( type === 'bool' ) return value ? 'true' : 'false';\r\n\t\tif ( type === 'color' ) return `${ this.getType( 'vec3' ) }( ${ toFloat( value.r ) }, ${ toFloat( value.g ) }, ${ toFloat( value.b ) } )`;\r\n\r\n\t\tconst typeLength = this.getTypeLength( type );\r\n\r\n\t\tconst componentType = this.getComponentType( type );\r\n\r\n\t\tconst getConst = value => this.getConst( componentType, value );\r\n\r\n\t\tif ( typeLength === 2 ) {\r\n\r\n\t\t\treturn `${ this.getType( type ) }( ${ getConst( value.x ) }, ${ getConst( value.y ) } )`;\r\n\r\n\t\t} else if ( typeLength === 3 ) {\r\n\r\n\t\t\treturn `${ this.getType( type ) }( ${ getConst( value.x ) }, ${ getConst( value.y ) }, ${ getConst( value.z ) } )`;\r\n\r\n\t\t} else if ( typeLength === 4 ) {\r\n\r\n\t\t\treturn `${ this.getType( type ) }( ${ getConst( value.x ) }, ${ getConst( value.y ) }, ${ getConst( value.z ) }, ${ getConst( value.w ) } )`;\r\n\r\n\t\t} else if ( typeLength > 4 ) {\r\n\r\n\t\t\treturn `${ this.getType( type ) }()`;\r\n\r\n\t\t}\r\n\r\n\t\tthrow new Error( `NodeBuilder: Type '${type}' not found in generate constant attempt.` );\r\n\r\n\t}\r\n\r\n\tgetType( type ) {\r\n\r\n\t\treturn type;\r\n\r\n\t}\r\n\r\n\tgenerateMethod( method ) {\r\n\r\n\t\treturn method;\r\n\r\n\t}\r\n\r\n\thasGeometryAttribute( name ) {\r\n\r\n\t\treturn this.geometry && this.geometry.getAttribute( name ) !== undefined;\r\n\r\n\t}\r\n\r\n\tgetAttribute( name, type ) {\r\n\r\n\t\tconst attributes = this.attributes;\r\n\r\n\t\t// find attribute\r\n\r\n\t\tfor ( const attribute of attributes ) {\r\n\r\n\t\t\tif ( attribute.name === name ) {\r\n\r\n\t\t\t\treturn attribute;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// create a new if no exist\r\n\r\n\t\tconst attribute = new NodeAttribute( name, type );\r\n\r\n\t\tattributes.push( attribute );\r\n\r\n\t\treturn attribute;\r\n\r\n\t}\r\n\r\n\tgetPropertyName( node/*, shaderStage*/ ) {\r\n\r\n\t\treturn node.name;\r\n\r\n\t}\r\n\r\n\tisVector( type ) {\r\n\r\n\t\treturn /vec\\d/.test( type );\r\n\r\n\t}\r\n\r\n\tisMatrix( type ) {\r\n\r\n\t\treturn /mat\\d/.test( type );\r\n\r\n\t}\r\n\r\n\tisReference( type ) {\r\n\r\n\t\treturn type === 'void' || type === 'property' || type === 'sampler' || type === 'texture' || type === 'cubeTexture';\r\n\r\n\t}\r\n\r\n\tisShaderStage( shaderStage ) {\r\n\r\n\t\treturn this.shaderStage === shaderStage;\r\n\r\n\t}\r\n\r\n\tgetTextureEncodingFromMap( map ) {\r\n\r\n\t\tlet encoding;\r\n\r\n\t\tif ( map && map.isTexture ) {\r\n\r\n\t\t\tencoding = map.encoding;\r\n\r\n\t\t} else if ( map && map.isWebGLRenderTarget ) {\r\n\r\n\t\t\tencoding = map.texture.encoding;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tencoding = LinearEncoding;\r\n\r\n\t\t}\r\n\r\n\t\treturn encoding;\r\n\r\n\t}\r\n\r\n\tgetComponentType( type ) {\r\n\r\n\t\ttype = this.getVectorType( type );\r\n\r\n\t\tif ( type === 'float' || type === 'bool' || type === 'int' || type === 'uint' ) return type;\r\n\r\n\t\tconst componentType = /(b|i|u|)(vec|mat)([2-4])/.exec( type );\r\n\r\n\t\tif ( componentType === null ) return null;\r\n\r\n\t\tif ( componentType[ 1 ] === 'b' ) return 'bool';\r\n\t\tif ( componentType[ 1 ] === 'i' ) return 'int';\r\n\t\tif ( componentType[ 1 ] === 'u' ) return 'uint';\r\n\r\n\t\treturn 'float';\r\n\r\n\t}\r\n\r\n\tgetVectorType( type ) {\r\n\r\n\t\tif ( type === 'color' ) return 'vec3';\r\n\t\tif ( type === 'texture' ) return 'vec4';\r\n\r\n\t\treturn type;\r\n\r\n\t}\r\n\r\n\tgetTypeFromLength( length, componentType = 'float' ) {\r\n\r\n\t\tif ( length === 1 ) return componentType;\r\n\t\tconst baseType = typeFromLength.get( length );\r\n\t\tconst prefix = componentType === 'float' ? '' : componentType[ 0 ];\r\n\t\treturn prefix + baseType;\r\n\r\n\t}\r\n\r\n\tgetTypeLength( type ) {\r\n\r\n\t\tconst vecType = this.getVectorType( type );\r\n\t\tconst vecNum = /vec([2-4])/.exec( vecType );\r\n\r\n\t\tif ( vecNum !== null ) return Number( vecNum[ 1 ] );\r\n\t\tif ( vecType === 'float' || vecType === 'bool' || vecType === 'int' || vecType === 'uint' ) return 1;\r\n\t\tif ( /mat3/.test( type ) === true ) return 9;\r\n\t\tif ( /mat4/.test( type ) === true ) return 16;\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\tgetVectorFromMatrix( type ) {\r\n\r\n\t\treturn type.replace( 'mat', 'vec' );\r\n\r\n\t}\r\n\r\n\tchangeComponentType( type, newComponentType ) {\r\n\r\n\t\treturn this.getTypeFromLength( this.getTypeLength( type ), newComponentType );\r\n\r\n\t}\r\n\r\n\tgetIntegerType( type ) {\r\n\r\n\t\tconst componentType = this.getComponentType( type );\r\n\r\n\t\tif ( componentType === 'int' || componentType === 'uint' ) return type;\r\n\r\n\t\treturn this.changeComponentType( type, 'int' );\r\n\r\n\t}\r\n\r\n\tgetDataFromNode( node, shaderStage = this.shaderStage ) {\r\n\r\n\t\tconst cache = node.isGlobal( this ) ? this.globalCache : this.cache;\r\n\r\n\t\tlet nodeData = cache.getNodeData( node );\r\n\r\n\t\tif ( nodeData === undefined ) {\r\n\r\n\t\t\tnodeData = { vertex: {}, fragment: {}, compute: {} };\r\n\r\n\t\t\tcache.setNodeData( node, nodeData );\r\n\r\n\t\t}\r\n\r\n\t\treturn shaderStage !== null ? nodeData[ shaderStage ] : nodeData;\r\n\r\n\t}\r\n\r\n\tgetNodeProperties( node, shaderStage = this.shaderStage ) {\r\n\r\n\t\tconst nodeData = this.getDataFromNode( node, shaderStage );\r\n\r\n\t\treturn nodeData.properties || ( nodeData.properties = { outputNode: null } );\r\n\r\n\t}\r\n\r\n\tgetUniformFromNode( node, shaderStage, type ) {\r\n\r\n\t\tconst nodeData = this.getDataFromNode( node, shaderStage );\r\n\r\n\t\tlet nodeUniform = nodeData.uniform;\r\n\r\n\t\tif ( nodeUniform === undefined ) {\r\n\r\n\t\t\tconst index = this.uniforms.index ++;\r\n\r\n\t\t\tnodeUniform = new NodeUniform( 'nodeUniform' + index, type, node );\r\n\r\n\t\t\tthis.uniforms[ shaderStage ].push( nodeUniform );\r\n\r\n\t\t\tnodeData.uniform = nodeUniform;\r\n\r\n\t\t}\r\n\r\n\t\treturn nodeUniform;\r\n\r\n\t}\r\n\r\n\tgetVarFromNode( node, type, shaderStage = this.shaderStage ) {\r\n\r\n\t\tconst nodeData = this.getDataFromNode( node, shaderStage );\r\n\r\n\t\tlet nodeVar = nodeData.variable;\r\n\r\n\t\tif ( nodeVar === undefined ) {\r\n\r\n\t\t\tconst vars = this.vars[ shaderStage ];\r\n\t\t\tconst index = vars.length;\r\n\r\n\t\t\tnodeVar = new NodeVar( 'nodeVar' + index, type );\r\n\r\n\t\t\tvars.push( nodeVar );\r\n\r\n\t\t\tnodeData.variable = nodeVar;\r\n\r\n\t\t}\r\n\r\n\t\treturn nodeVar;\r\n\r\n\t}\r\n\r\n\tgetVaryingFromNode( node, type ) {\r\n\r\n\t\tconst nodeData = this.getDataFromNode( node, null );\r\n\r\n\t\tlet nodeVarying = nodeData.varying;\r\n\r\n\t\tif ( nodeVarying === undefined ) {\r\n\r\n\t\t\tconst varyings = this.varyings;\r\n\t\t\tconst index = varyings.length;\r\n\r\n\t\t\tnodeVarying = new NodeVarying( 'nodeVarying' + index, type );\r\n\r\n\t\t\tvaryings.push( nodeVarying );\r\n\r\n\t\t\tnodeData.varying = nodeVarying;\r\n\r\n\t\t}\r\n\r\n\t\treturn nodeVarying;\r\n\r\n\t}\r\n\r\n\tgetCodeFromNode( node, type, shaderStage = this.shaderStage ) {\r\n\r\n\t\tconst nodeData = this.getDataFromNode( node );\r\n\r\n\t\tlet nodeCode = nodeData.code;\r\n\r\n\t\tif ( nodeCode === undefined ) {\r\n\r\n\t\t\tconst codes = this.codes[ shaderStage ];\r\n\t\t\tconst index = codes.length;\r\n\r\n\t\t\tnodeCode = new NodeCode( 'nodeCode' + index, type );\r\n\r\n\t\t\tcodes.push( nodeCode );\r\n\r\n\t\t\tnodeData.code = nodeCode;\r\n\r\n\t\t}\r\n\r\n\t\treturn nodeCode;\r\n\r\n\t}\r\n\r\n\taddFlowCode( code, breakline = true ) {\r\n\r\n\t\tif ( breakline && ! /;\\s*$/.test( code ) ) {\r\n\r\n\t\t\tcode += ';\\n\\t';\r\n\r\n\t\t}\r\n\r\n\t\tthis.flow.code += code;\r\n\r\n\t}\r\n\r\n\tgetFlowData( node/*, shaderStage*/ ) {\r\n\r\n\t\treturn this.flowsData.get( node );\r\n\r\n\t}\r\n\r\n\tflowNode( node ) {\r\n\r\n\t\tconst output = node.getNodeType( this );\r\n\r\n\t\tconst flowData = this.flowChildNode( node, output );\r\n\r\n\t\tthis.flowsData.set( node, flowData );\r\n\r\n\t\treturn flowData;\r\n\r\n\t}\r\n\r\n\tflowChildNode( node, output = null ) {\r\n\r\n\t\tconst previousFlow = this.flow;\r\n\r\n\t\tconst flow = {\r\n\t\t\tcode: '',\r\n\t\t};\r\n\r\n\t\tthis.flow = flow;\r\n\r\n\t\tflow.result = node.build( this, output );\r\n\r\n\t\tthis.flow = previousFlow;\r\n\r\n\t\treturn flow;\r\n\r\n\t}\r\n\r\n\tflowNodeFromShaderStage( shaderStage, node, output = null, propertyName = null ) {\r\n\r\n\t\tconst previousShaderStage = this.shaderStage;\r\n\r\n\t\tthis.setShaderStage( shaderStage );\r\n\r\n\t\tconst flowData = this.flowChildNode( node, output );\r\n\r\n\t\tif ( propertyName !== null ) {\r\n\r\n\t\t\tflowData.code += `${propertyName} = ${flowData.result};\\n\\t`;\r\n\r\n\t\t}\r\n\r\n\t\tthis.flowCode[ shaderStage ] = this.flowCode[ shaderStage ] + flowData.code;\r\n\r\n\t\tthis.setShaderStage( previousShaderStage );\r\n\r\n\t\treturn flowData;\r\n\r\n\t}\r\n\r\n\tgetAttributes( /*shaderStage*/ ) {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\tgetVaryings( /*shaderStage*/ ) {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\tgetVars( shaderStage ) {\r\n\r\n\t\tlet snippet = '';\r\n\r\n\t\tconst vars = this.vars[ shaderStage ];\r\n\r\n\t\tfor ( const variable of vars ) {\r\n\r\n\t\t\tsnippet += `${variable.type} ${variable.name}; `;\r\n\r\n\t\t}\r\n\r\n\t\treturn snippet;\r\n\r\n\t}\r\n\r\n\tgetUniforms( /*shaderStage*/ ) {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\tgetCodes( shaderStage ) {\r\n\r\n\t\tconst codes = this.codes[ shaderStage ];\r\n\r\n\t\tlet code = '';\r\n\r\n\t\tfor ( const nodeCode of codes ) {\r\n\r\n\t\t\tcode += nodeCode.code + '\\n';\r\n\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\r\n\t}\r\n\r\n\tgetHash() {\r\n\r\n\t\treturn this.vertexShader + this.fragmentShader + this.computeShader;\r\n\r\n\t}\r\n\r\n\tsetShaderStage( shaderStage ) {\r\n\r\n\t\tthis.shaderStage = shaderStage;\r\n\r\n\t}\r\n\r\n\tgetShaderStage() {\r\n\r\n\t\treturn this.shaderStage;\r\n\r\n\t}\r\n\r\n\tsetBuildStage( buildStage ) {\r\n\r\n\t\tthis.buildStage = buildStage;\r\n\r\n\t}\r\n\r\n\tgetBuildStage() {\r\n\r\n\t\treturn this.buildStage;\r\n\r\n\t}\r\n\r\n\tbuildCode() {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n\tbuild() {\r\n\r\n\t\t// construct() -> stage 1: create possible new nodes and returns an output reference node\r\n\t\t// analyze()   -> stage 2: analyze nodes to possible optimization and validation\r\n\t\t// generate()  -> stage 3: generate shader\r\n\r\n\t\tfor ( const buildStage of defaultBuildStages ) {\r\n\r\n\t\t\tthis.setBuildStage( buildStage );\r\n\r\n\t\t\tif ( this.context.vertex && this.context.vertex.isNode ) {\r\n\r\n\t\t\t\tthis.flowNodeFromShaderStage( 'vertex', this.context.vertex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( const shaderStage of shaderStages ) {\r\n\r\n\t\t\t\tthis.setShaderStage( shaderStage );\r\n\r\n\t\t\t\tconst flowNodes = this.flowNodes[ shaderStage ];\r\n\r\n\t\t\t\tfor ( const node of flowNodes ) {\r\n\r\n\t\t\t\t\tif ( buildStage === 'generate' ) {\r\n\r\n\t\t\t\t\t\tthis.flowNode( node );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tnode.build( this );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.setBuildStage( null );\r\n\t\tthis.setShaderStage( null );\r\n\r\n\t\t// stage 4: build code for a specific output\r\n\r\n\t\tthis.buildCode();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tformat( snippet, fromType, toType ) {\r\n\r\n\t\tfromType = this.getVectorType( fromType );\r\n\t\ttoType = this.getVectorType( toType );\r\n\r\n\t\tif ( fromType === toType || toType === null || this.isReference( toType ) ) {\r\n\r\n\t\t\treturn snippet;\r\n\r\n\t\t}\r\n\r\n\t\tconst fromTypeLength = this.getTypeLength( fromType );\r\n\t\tconst toTypeLength = this.getTypeLength( toType );\r\n\r\n\t\tif ( fromTypeLength > 4 ) { // fromType is matrix-like\r\n\r\n\t\t\t// @TODO: ignore for now\r\n\r\n\t\t\treturn snippet;\r\n\r\n\t\t}\r\n\r\n\t\tif ( toTypeLength > 4 || toTypeLength === 0 ) { // toType is matrix-like or unknown\r\n\r\n\t\t\t// @TODO: ignore for now\r\n\r\n\t\t\treturn snippet;\r\n\r\n\t\t}\r\n\r\n\t\tif ( fromTypeLength === toTypeLength ) {\r\n\r\n\t\t\treturn `${ this.getType( toType ) }( ${ snippet } )`;\r\n\r\n\t\t}\r\n\r\n\t\tif ( fromTypeLength > toTypeLength ) {\r\n\r\n\t\t\treturn this.format( `${ snippet }.${ 'xyz'.slice( 0, toTypeLength ) }`, this.getTypeFromLength( toTypeLength ), toType );\r\n\r\n\t\t}\r\n\r\n\t\tif ( toTypeLength === 4 ) { // toType is vec4-like\r\n\r\n\t\t\treturn `${ this.getType( toType ) }( ${ this.format( snippet, fromType, 'vec3' ) }, 1.0 )`;\r\n\r\n\t\t}\r\n\r\n\t\tif ( fromTypeLength === 2 ) { // fromType is vec2-like and toType is vec3-like\r\n\r\n\t\t\treturn `${ this.getType( toType ) }( ${ this.format( snippet, fromType, 'vec2' ) }, 0.0 )`;\r\n\r\n\t\t}\r\n\r\n\t\treturn `${ this.getType( toType ) }( ${ snippet } )`; // fromType is float-like\r\n\r\n\t}\r\n\r\n\tgetSignature() {\r\n\r\n\t\treturn `// Three.js r${ REVISION } - NodeMaterial System\\n`;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeBuilder;\r\n", "import { NodeUpdateType } from './constants.js';\r\n\r\nclass NodeFrame {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.time = 0;\r\n\t\tthis.deltaTime = 0;\r\n\r\n\t\tthis.frameId = 0;\r\n\r\n\t\tthis.startTime = null;\r\n\r\n\t\tthis.updateMap = new WeakMap();\r\n\r\n\t\tthis.renderer = null;\r\n\t\tthis.material = null;\r\n\t\tthis.camera = null;\r\n\t\tthis.object = null;\r\n\r\n\t}\r\n\r\n\tupdateNode( node ) {\r\n\r\n\t\tif ( node.updateType === NodeUpdateType.FRAME ) {\r\n\r\n\t\t\tif ( this.updateMap.get( node ) !== this.frameId ) {\r\n\r\n\t\t\t\tthis.updateMap.set( node, this.frameId );\r\n\r\n\t\t\t\tnode.update( this );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( node.updateType === NodeUpdateType.OBJECT ) {\r\n\r\n\t\t\tnode.update( this );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tthis.frameId ++;\r\n\r\n\t\tif ( this.lastTime === undefined ) this.lastTime = performance.now();\r\n\r\n\t\tthis.deltaTime = ( performance.now() - this.lastTime ) / 1000;\r\n\r\n\t\tthis.lastTime = performance.now();\r\n\r\n\t\tthis.time += this.deltaTime;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeFrame;\r\n", "class NodeFunctionInput {\r\n\r\n\tconstructor( type, name, count = null, qualifier = '', isConst = false ) {\r\n\r\n\t\tthis.type = type;\r\n\t\tthis.name = name;\r\n\t\tthis.count = count;\r\n\t\tthis.qualifier = qualifier;\r\n\t\tthis.isConst = isConst;\r\n\r\n\t}\r\n\r\n}\r\n\r\nNodeFunctionInput.isNodeFunctionInput = true;\r\n\r\nexport default NodeFunctionInput;\r\n", "import AnalyticLightNode from './AnalyticLightNode.js';\r\nimport LightsNode from './LightsNode.js';\r\nimport getDistanceAttenuation from '../functions/light/getDistanceAttenuation.js';\r\nimport { uniform, positionView, objectViewPosition } from '../shadernode/ShaderNodeElements.js';\r\n\r\nimport { PointLight } from 'three';\r\n\r\nclass PointLightNode extends AnalyticLightNode {\r\n\r\n\tconstructor( light = null ) {\r\n\r\n\t\tsuper( light );\r\n\r\n\t\tthis.cutoffDistanceNode = uniform( 0 );\r\n\t\tthis.decayExponentNode = uniform( 0 );\r\n\r\n\t}\r\n\r\n\tupdate( frame ) {\r\n\r\n\t\tconst { light } = this;\r\n\r\n\t\tsuper.update( frame );\r\n\r\n\t\tthis.cutoffDistanceNode.value = light.distance;\r\n\t\tthis.decayExponentNode.value = light.decay;\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) {\r\n\r\n\t\tconst { colorNode, cutoffDistanceNode, decayExponentNode, light } = this;\r\n\r\n\t\tconst lVector = objectViewPosition( light ).sub( positionView );\r\n\r\n\t\tconst lightDirection = lVector.normalize();\r\n\t\tconst lightDistance = lVector.length();\r\n\r\n\t\tconst lightAttenuation = getDistanceAttenuation.call( {\r\n\t\t\tlightDistance,\r\n\t\t\tcutoffDistance: cutoffDistanceNode,\r\n\t\t\tdecayExponent: decayExponentNode\r\n\t\t} );\r\n\r\n\t\tconst lightColor = colorNode.mul( lightAttenuation );\r\n\r\n\t\tconst lightingModelFunctionNode = builder.context.lightingModelNode;\r\n\t\tconst reflectedLight = builder.context.reflectedLight;\r\n\r\n\t\tif ( lightingModelFunctionNode && lightingModelFunctionNode.direct ) {\r\n\r\n\t\t\tlightingModelFunctionNode.direct.call( {\r\n\t\t\t\tlightDirection,\r\n\t\t\t\tlightColor,\r\n\t\t\t\treflectedLight\r\n\t\t\t}, builder );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nLightsNode.setReference( PointLight, PointLightNode );\r\n\r\nexport default PointLightNode;\r\n", "import { Vector3 } from 'three';\r\n\r\nlet vector3;\r\n\r\nconst getDirectionVector = ( light, camera, directionVector ) => {\r\n\r\n\tvector3 || ( vector3 = new Vector3() );\r\n\r\n\tdirectionVector.setFromMatrixPosition( light.matrixWorld );\r\n\tvector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\tdirectionVector.sub( vector3 );\r\n\tdirectionVector.transformDirection( camera.matrixWorldInverse );\r\n\r\n};\r\n\r\nexport default getDirectionVector;\r\n", "import AnalyticLightNode from './AnalyticLightNode.js';\r\nimport LightsNode from './LightsNode.js';\r\nimport getDirectionVector from '../functions/light/getDirectionVector.js';\r\nimport { uniform } from '../shadernode/ShaderNodeElements.js';\r\n\r\nimport { Vector3, DirectionalLight } from 'three';\r\n\r\nclass DirectionalLightNode extends AnalyticLightNode {\r\n\r\n\tconstructor( light = null ) {\r\n\r\n\t\tsuper( light );\r\n\r\n\t\tthis.directionNode = uniform( new Vector3() );\r\n\r\n\t}\r\n\r\n\tupdate( frame ) {\r\n\r\n\t\tgetDirectionVector( this.light, frame.camera, this.directionNode.value );\r\n\r\n\t\tsuper.update( frame );\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) {\r\n\r\n\t\tconst lightDirection = this.directionNode.normalize();\r\n\t\tconst lightColor = this.colorNode;\r\n\r\n\t\tconst lightingModelFunctionNode = builder.context.lightingModelNode;\r\n\t\tconst reflectedLight = builder.context.reflectedLight;\r\n\r\n\t\tif ( lightingModelFunctionNode && lightingModelFunctionNode.direct ) {\r\n\r\n\t\t\tlightingModelFunctionNode.direct.call( {\r\n\t\t\t\tlightDirection,\r\n\t\t\t\tlightColor,\r\n\t\t\t\treflectedLight\r\n\t\t\t}, builder );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nLightsNode.setReference( DirectionalLight, DirectionalLightNode );\r\n\r\nexport default DirectionalLightNode;\r\n", "import AnalyticLightNode from './AnalyticLightNode.js';\r\nimport LightsNode from './LightsNode.js';\r\nimport getDistanceAttenuation from '../functions/light/getDistanceAttenuation.js';\r\nimport getDirectionVector from '../functions/light/getDirectionVector.js';\r\nimport { uniform, smoothstep, positionView, objectViewPosition } from '../shadernode/ShaderNodeElements.js';\r\n\r\nimport { Vector3, SpotLight } from 'three';\r\n\r\nclass SpotLightNode extends AnalyticLightNode {\r\n\r\n\tconstructor( light = null ) {\r\n\r\n\t\tsuper( light );\r\n\r\n\t\tthis.directionNode = uniform( new Vector3() );\r\n\r\n\t\tthis.coneCosNode = uniform( 0 );\r\n\t\tthis.penumbraCosNode = uniform( 0 );\r\n\r\n\t\tthis.cutoffDistanceNode = uniform( 0 );\r\n\t\tthis.decayExponentNode = uniform( 0 );\r\n\r\n\t}\r\n\r\n\tupdate( frame ) {\r\n\r\n\t\tsuper.update( frame );\r\n\r\n\t\tconst { light } = this;\r\n\r\n\t\tgetDirectionVector( light, frame.camera, this.directionNode.value );\r\n\r\n\t\tthis.coneCosNode.value = Math.cos( light.angle );\r\n\t\tthis.penumbraCosNode.value = Math.cos( light.angle * ( 1 - light.penumbra ) );\r\n\r\n\t\tthis.cutoffDistanceNode.value = light.distance;\r\n\t\tthis.decayExponentNode.value = light.decay;\r\n\r\n\t}\r\n\r\n\tgetSpotAttenuation( angleCosine ) {\r\n\r\n\t\tconst { coneCosNode, penumbraCosNode } = this;\r\n\r\n\t\treturn smoothstep( coneCosNode, penumbraCosNode, angleCosine );\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) {\r\n\r\n\t\tconst { colorNode, cutoffDistanceNode, decayExponentNode, light } = this;\r\n\r\n\t\tconst lVector = objectViewPosition( light ).sub( positionView );\r\n\r\n\t\tconst lightDirection = lVector.normalize();\r\n\t\tconst angleCos = lightDirection.dot( this.directionNode );\r\n\t\tconst spotAttenuation = this.getSpotAttenuation( angleCos );\r\n\r\n\t\tconst lightDistance = lVector.length();\r\n\r\n\t\tconst lightAttenuation = getDistanceAttenuation.call( {\r\n\t\t\tlightDistance,\r\n\t\t\tcutoffDistance: cutoffDistanceNode,\r\n\t\t\tdecayExponent: decayExponentNode\r\n\t\t} );\r\n\r\n\t\tconst finalColor = colorNode.mul( spotAttenuation ).mul( lightAttenuation );\r\n\r\n\t\tconst lightColor = spotAttenuation.greaterThan( 0 ).cond( finalColor, 0 );\r\n\r\n\t\tconst lightingModelFunctionNode = builder.context.lightingModelNode;\r\n\t\tconst reflectedLight = builder.context.reflectedLight;\r\n\r\n\t\tif ( lightingModelFunctionNode && lightingModelFunctionNode.direct ) {\r\n\r\n\t\t\tlightingModelFunctionNode.direct.call( {\r\n\t\t\t\tlightDirection,\r\n\t\t\t\tlightColor,\r\n\t\t\t\treflectedLight\r\n\t\t\t}, builder );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nLightsNode.setReference( SpotLight, SpotLightNode );\r\n\r\nexport default SpotLightNode;\r\n", "import { SpotLight } from 'three';\r\n\r\nclass IESSpotLight extends SpotLight {\r\n\r\n\tconstructor( color, intensity, distance, angle, penumbra, decay ) {\r\n\r\n\t\tsuper( color, intensity, distance, angle, penumbra, decay );\r\n\r\n\t\tthis.iesMap = null;\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.iesMap = source.iesMap;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default IESSpotLight;\r\n", "import SpotLightNode from './SpotLightNode.js';\r\nimport LightsNode from './LightsNode.js';\r\nimport { acos, texture, vec2 } from '../shadernode/ShaderNodeElements.js';\r\n\r\nimport IESSpotLight from '../../lights/IESSpotLight.js';\r\n\r\nclass IESSpotLightNode extends SpotLightNode {\r\n\r\n\tgetSpotAttenuation( angleCosine ) {\r\n\r\n\t\tconst iesMap = this.light.iesMap;\r\n\r\n\t\tlet spotAttenuation = null;\r\n\r\n\t\tif ( iesMap && iesMap.isTexture === true ) {\r\n\r\n\t\t\tconst angle = acos( angleCosine ).mul( 1.0 / Math.PI );\r\n\r\n\t\t\tspotAttenuation = texture( iesMap, vec2( angle, 0 ), 0 ).r;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tspotAttenuation = super.getSpotAttenuation( angleCosine );\r\n\r\n\t\t}\r\n\r\n\t\treturn spotAttenuation;\r\n\r\n\t}\r\n\r\n}\r\n\r\nLightsNode.setReference( IESSpotLight, IESSpotLightNode );\r\n\r\nexport default IESSpotLightNode;\r\n", "import AnalyticLightNode from './AnalyticLightNode.js';\r\nimport LightsNode from './LightsNode.js';\r\n\r\nimport { AmbientLight } from 'three';\r\n\r\nclass AmbientLightNode extends AnalyticLightNode {\r\n\r\n\tconstructor( light = null ) {\r\n\r\n\t\tsuper( light );\r\n\r\n\t}\r\n\r\n\tconstruct( { context } ) {\r\n\r\n\t\tcontext.irradiance.add( this.colorNode );\r\n\r\n\t}\r\n\r\n}\r\n\r\nLightsNode.setReference( AmbientLight, AmbientLightNode );\r\n\r\nexport default AmbientLightNode;\r\n", "import AnalyticLightNode from './AnalyticLightNode.js';\r\nimport LightsNode from './LightsNode.js';\r\nimport Object3DNode from '../accessors/Object3DNode.js';\r\nimport { uniform, add, mul, dot, mix, normalize, normalView } from '../shadernode/ShaderNodeElements.js';\r\n\r\nimport { Color, HemisphereLight } from 'three';\r\n\r\nclass HemisphereLightNode extends AnalyticLightNode {\r\n\r\n\tconstructor( light = null ) {\r\n\r\n\t\tsuper( light );\r\n\r\n\t\tthis.lightPositionNode = new Object3DNode( Object3DNode.POSITION );\r\n\t\tthis.lightDirectionNode = normalize( this.lightPositionNode );\r\n\r\n\t\tthis.groundColorNode = uniform( new Color() );\r\n\r\n\t}\r\n\r\n\tupdate( frame ) {\r\n\r\n\t\tconst { light } = this;\r\n\r\n\t\tsuper.update( frame );\r\n\r\n\t\tthis.lightPositionNode.object3d = light;\r\n\r\n\t\tthis.groundColorNode.value.copy( light.groundColor ).multiplyScalar( light.intensity );\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst { colorNode, groundColorNode, lightDirectionNode } = this;\r\n\r\n\t\tconst dotNL = dot( normalView, lightDirectionNode );\r\n\t\tconst hemiDiffuseWeight = add( mul( 0.5, dotNL ), 0.5 );\r\n\r\n\t\tconst irradiance = mix( groundColorNode, colorNode, hemiDiffuseWeight );\r\n\r\n\t\tbuilder.context.irradiance.add( irradiance );\r\n\r\n\t}\r\n\r\n}\r\n\r\nLightsNode.setReference( HemisphereLight, HemisphereLightNode );\r\n\r\nexport default HemisphereLightNode;\r\n", "import LightingNode from './LightingNode.js';\r\nimport ContextNode from '../core/ContextNode.js';\r\nimport CacheNode from '../core/CacheNode.js';\r\nimport SpecularMIPLevelNode from '../utils/SpecularMIPLevelNode.js';\r\nimport { float, mul, roughness, positionViewDirection, transformedNormalView, transformedNormalWorld, cameraViewMatrix, equirectUV, vec2 } from '../shadernode/ShaderNodeElements.js';\r\n\r\nclass EnvironmentNode extends LightingNode {\r\n\r\n\tconstructor( envNode = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.envNode = envNode;\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) {\r\n\r\n\t\tconst envNode = this.envNode;\r\n\t\tconst properties = builder.getNodeProperties( this );\r\n\r\n\t\tlet reflectVec;\r\n\t\tlet radianceTextureUVNode;\r\n\t\tlet irradianceTextureUVNode;\r\n\r\n\t\tconst radianceContext = new ContextNode( envNode, {\r\n\t\t\tgetUVNode: ( textureNode ) => {\r\n\r\n\t\t\t\tlet node = null;\r\n\r\n\t\t\t\tif ( reflectVec === undefined ) {\r\n\r\n\t\t\t\t\treflectVec = positionViewDirection.negate().reflect( transformedNormalView );\r\n\t\t\t\t\treflectVec = reflectVec.mix( transformedNormalView, roughness.mul( roughness ) ).normalize();\r\n\t\t\t\t\treflectVec = reflectVec.transformDirection( cameraViewMatrix );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( textureNode.isCubeTextureNode ) {\r\n\r\n\t\t\t\t\tnode = reflectVec;\r\n\r\n\t\t\t\t} else if ( textureNode.isTextureNode ) {\r\n\r\n\t\t\t\t\tif ( radianceTextureUVNode === undefined ) {\r\n\r\n\t\t\t\t\t\t// @TODO: Needed PMREM\r\n\r\n\t\t\t\t\t\tradianceTextureUVNode = equirectUV( reflectVec );\r\n\t\t\t\t\t\tradianceTextureUVNode = vec2( radianceTextureUVNode.x, radianceTextureUVNode.y.invert() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnode = radianceTextureUVNode;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn node;\r\n\r\n\t\t\t},\r\n\t\t\tgetSamplerLevelNode: () => {\r\n\r\n\t\t\t\treturn roughness;\r\n\r\n\t\t\t},\r\n\t\t\tgetMIPLevelAlgorithmNode: ( textureNode, levelNode ) => {\r\n\r\n\t\t\t\treturn new SpecularMIPLevelNode( textureNode, levelNode );\r\n\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tconst irradianceContext = new ContextNode( envNode, {\r\n\t\t\tgetUVNode: ( textureNode ) => {\r\n\r\n\t\t\t\tlet node = null;\r\n\r\n\t\t\t\tif ( textureNode.isCubeTextureNode ) {\r\n\r\n\t\t\t\t\tnode = transformedNormalWorld;\r\n\r\n\t\t\t\t} else if ( textureNode.isTextureNode ) {\r\n\r\n\t\t\t\t\tif ( irradianceTextureUVNode === undefined ) {\r\n\r\n\t\t\t\t\t\t// @TODO: Needed PMREM\r\n\r\n\t\t\t\t\t\tirradianceTextureUVNode = equirectUV( transformedNormalWorld );\r\n\t\t\t\t\t\tirradianceTextureUVNode = vec2( irradianceTextureUVNode.x, irradianceTextureUVNode.y.invert() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnode = irradianceTextureUVNode;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn node;\r\n\r\n\t\t\t},\r\n\t\t\tgetSamplerLevelNode: () => {\r\n\r\n\t\t\t\treturn float( 1 );\r\n\r\n\t\t\t},\r\n\t\t\tgetMIPLevelAlgorithmNode: ( textureNode, levelNode ) => {\r\n\r\n\t\t\t\treturn new SpecularMIPLevelNode( textureNode, levelNode );\r\n\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t//\r\n\r\n\t\tconst isolateRadianceFlowContext = new CacheNode( radianceContext );\r\n\r\n\t\t//\r\n\r\n\t\tbuilder.context.radiance.add( isolateRadianceFlowContext );\r\n\r\n\t\tbuilder.context.iblIrradiance.add( mul( Math.PI, irradianceContext ) );\r\n\r\n\t\tproperties.radianceContext = isolateRadianceFlowContext;\r\n\t\tproperties.irradianceContext = irradianceContext;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default EnvironmentNode;\r\n", "import LightingNode from './LightingNode.js';\r\nimport { float, add, mul, sub } from '../shadernode/ShaderNodeElements.js';\r\n\r\nclass AONode extends LightingNode {\r\n\r\n\tconstructor( aoNode = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.aoNode = aoNode;\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) {\r\n\r\n\t\tconst aoIntensity = 1;\r\n\t\tconst aoNode = add( mul( sub( float( this.aoNode ), 1.0 ), aoIntensity ), 1.0 );\r\n\r\n\t\tbuilder.context.ambientOcclusion.mul( aoNode );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default AONode;\r\n", "import * as Nodes from '../Nodes.js';\r\nimport { FileLoader, Loader } from 'three';\r\n\r\nclass NodeLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t\tthis.textures = {};\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, ( text ) => {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( this.parse( JSON.parse( text ) ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tparseNodes( json ) {\r\n\r\n\t\tconst nodes = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( const nodeJSON of json ) {\r\n\r\n\t\t\t\tconst { uuid, type } = nodeJSON;\r\n\r\n\t\t\t\tnodes[ uuid ] = Nodes.fromType( type );\r\n\t\t\t\tnodes[ uuid ].uuid = uuid;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst meta = { nodes, textures: this.textures };\r\n\r\n\t\t\tfor ( const nodeJSON of json ) {\r\n\r\n\t\t\t\tnodeJSON.meta = meta;\r\n\r\n\t\t\t\tconst node = nodes[ nodeJSON.uuid ];\r\n\t\t\t\tnode.deserialize( nodeJSON );\r\n\r\n\t\t\t\tdelete nodeJSON.meta;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn nodes;\r\n\r\n\t}\r\n\r\n\tparse( json ) {\r\n\r\n\t\tconst node = Nodes.fromType( json.type );\r\n\t\tnode.uuid = json.uuid;\r\n\r\n\t\tconst nodes = this.parseNodes( json.inputNodes );\r\n\t\tconst meta = { nodes, textures: this.textures };\r\n\r\n\t\tjson.meta = meta;\r\n\r\n\t\tnode.deserialize( json );\r\n\r\n\t\tdelete json.meta;\r\n\r\n\t\treturn node;\r\n\r\n\t}\r\n\r\n\tsetTextures( value ) {\r\n\r\n\t\tthis.textures = value;\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeLoader;\r\n", "import { Material, ShaderMaterial, NoToneMapping } from 'three';\r\nimport { getNodesKeys, getCacheKey } from '../core/NodeUtils.js';\r\nimport StackNode from '../core/StackNode.js';\r\nimport LightsNode from '../lighting/LightsNode.js';\r\nimport EnvironmentNode from '../lighting/EnvironmentNode.js';\r\nimport ToneMappingNode from '../display/ToneMappingNode.js';\r\nimport AONode from '../lighting/AONode.js';\r\nimport {\r\n\tfloat, vec3, vec4,\r\n\tassign, mul, bypass, attribute, context, texture, lessThanEqual, discard,\r\n\tpositionLocal, diffuseColor, skinning, instance, modelViewProjection, lightingContext, colorSpace,\r\n\tmaterialAlphaTest, materialColor, materialOpacity, materialEmissive, materialNormal, transformedNormalView,\r\n\treference, rangeFog, densityFog\r\n} from '../shadernode/ShaderNodeElements.js';\r\n\r\nclass NodeMaterial extends ShaderMaterial {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isNodeMaterial = true;\r\n\r\n\t\tthis.type = this.constructor.name;\r\n\r\n\t\tthis.lights = true;\r\n\t\tthis.normals = true;\r\n\r\n\t\tthis.lightsNode = null;\r\n\r\n\t}\r\n\r\n\tcustomProgramCacheKey() {\r\n\r\n\t\treturn getCacheKey( this );\r\n\r\n\t}\r\n\r\n\tbuild( builder ) {\r\n\r\n\t\tthis.construct( builder );\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) {\r\n\r\n\t\t// < STACKS >\r\n\r\n\t\tconst vertexStack = new StackNode();\r\n\t\tconst fragmentStack = new StackNode();\r\n\r\n\t\t// < VERTEX STAGE >\r\n\r\n\t\tvertexStack.outputNode = this.constructPosition( builder, vertexStack );\r\n\r\n\t\t// < FRAGMENT STAGE >\r\n\r\n\t\tif ( this.normals === true ) this.constructNormal( builder, fragmentStack );\r\n\r\n\t\tthis.constructDiffuseColor( builder, fragmentStack );\r\n\t\tthis.constructVariants( builder, fragmentStack );\r\n\r\n\t\tconst outgoingLightNode = this.constructLighting( builder, fragmentStack );\r\n\r\n\t\tfragmentStack.outputNode = this.constructOutput( builder, fragmentStack, outgoingLightNode, diffuseColor.a );\r\n\r\n\t\t// < FLOW >\r\n\r\n\t\tbuilder.addFlow( 'vertex', vertexStack );\r\n\t\tbuilder.addFlow( 'fragment', fragmentStack );\r\n\r\n\t}\r\n\r\n\tconstructPosition( builder ) {\r\n\r\n\t\tconst object = builder.object;\r\n\r\n\t\tlet vertex = positionLocal;\r\n\r\n\t\tif ( this.positionNode !== null ) {\r\n\r\n\t\t\tvertex = bypass( vertex, assign( positionLocal, this.positionNode ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( object.instanceMatrix && object.instanceMatrix.isInstancedBufferAttribute === true ) && builder.isAvailable( 'instance' ) === true ) {\r\n\r\n\t\t\tvertex = bypass( vertex, instance( object ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.isSkinnedMesh === true ) {\r\n\r\n\t\t\tvertex = bypass( vertex, skinning( object ) );\r\n\r\n\t\t}\r\n\r\n\t\tbuilder.context.vertex = vertex;\r\n\r\n\t\treturn modelViewProjection();\r\n\r\n\t}\r\n\r\n\tconstructDiffuseColor( builder, stack ) {\r\n\r\n\t\tlet colorNode = vec4( this.colorNode || materialColor );\r\n\t\tconst opacityNode = this.opacityNode ? float( this.opacityNode ) : materialOpacity;\r\n\r\n\t\t// VERTEX COLORS\r\n\r\n\t\tif ( this.vertexColors === true && builder.geometry.hasAttribute( 'color' ) ) {\r\n\r\n\t\t\tcolorNode = vec4( mul( colorNode.xyz, attribute( 'color' ) ), colorNode.a );\r\n\r\n\t\t}\r\n\r\n\t\t// COLOR\r\n\r\n\t\tstack.assign( diffuseColor, colorNode );\r\n\r\n\t\t// OPACITY\r\n\r\n\t\tstack.assign( diffuseColor.a, diffuseColor.a.mul( opacityNode ) );\r\n\r\n\t\t// ALPHA TEST\r\n\r\n\t\tif ( this.alphaTestNode || this.alphaTest > 0 ) {\r\n\r\n\t\t\tconst alphaTestNode = this.alphaTestNode ? float( this.alphaTestNode ) : materialAlphaTest;\r\n\r\n\t\t\tstack.add( discard( lessThanEqual( diffuseColor.a, alphaTestNode ) ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconstructVariants( /*builder*/ ) {\r\n\r\n\t\t// Interface function.\r\n\r\n\t}\r\n\r\n\tconstructNormal( builder, stack ) {\r\n\r\n\t\t// NORMAL VIEW\r\n\r\n\t\tconst normalNode = this.normalNode ? vec3( this.normalNode ) : materialNormal;\r\n\r\n\t\tstack.assign( transformedNormalView, normalNode );\r\n\r\n\t\treturn normalNode;\r\n\r\n\t}\r\n\r\n\tconstructLights( builder ) {\r\n\r\n\t\tlet lightsNode = this.lightsNode || builder.lightsNode;\r\n\r\n\t\tconst envNode = this.envNode || builder.scene.environmentNode;\r\n\t\tconst materialLightsNode = [];\r\n\r\n\t\tif ( envNode ) {\r\n\r\n\t\t\tmaterialLightsNode.push( new EnvironmentNode( envNode ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( builder.material.aoMap ) {\r\n\r\n\t\t\tmaterialLightsNode.push( new AONode( texture( builder.material.aoMap ) ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialLightsNode.length > 0 ) {\r\n\r\n\t\t\tlightsNode = new LightsNode( [ ...lightsNode.lightNodes, ...materialLightsNode ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn lightsNode;\r\n\r\n\t}\r\n\r\n\tconstructLightingModel( /*builder*/ ) {\r\n\r\n\t\t// Interface function.\r\n\r\n\t}\r\n\r\n\tconstructLighting( builder ) {\r\n\r\n\t\tconst { material } = builder;\r\n\r\n\t\t// OUTGOING LIGHT\r\n\r\n\t\tconst lights = ( this.lights === true ) || this.lightsNode !== null;\r\n\r\n\t\tconst lightsNode = lights ? this.constructLights( builder ) : null;\r\n\t\tconst lightingModelNode = lightsNode ? this.constructLightingModel( builder ) : null;\r\n\r\n\t\tlet outgoingLightNode = diffuseColor.xyz;\r\n\r\n\t\tif ( lightsNode && lightsNode.hasLight !== false ) {\r\n\r\n\t\t\toutgoingLightNode = lightingContext( lightsNode, lightingModelNode );\r\n\r\n\t\t}\r\n\r\n\t\t// EMISSIVE\r\n\r\n\t\tif ( ( this.emissiveNode && this.emissiveNode.isNode === true ) || ( material.emissive && material.emissive.isColor === true ) ) {\r\n\r\n\t\t\toutgoingLightNode = outgoingLightNode.add( vec3( this.emissiveNode || materialEmissive ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn outgoingLightNode;\r\n\r\n\t}\r\n\r\n\tconstructOutput( builder, stack, outgoingLight, opacity ) {\r\n\r\n\t\tconst renderer = builder.renderer;\r\n\r\n\t\t// TONE MAPPING\r\n\r\n\t\tlet toneMappingNode = renderer.toneMappingNode;\r\n\r\n\t\tif ( ! toneMappingNode && renderer.toneMapping !== NoToneMapping ) {\r\n\r\n\t\t\ttoneMappingNode = new ToneMappingNode( renderer.toneMapping, reference( 'toneMappingExposure', 'float', renderer ), outgoingLight );\r\n\r\n\t\t}\r\n\r\n\t\tif ( toneMappingNode && toneMappingNode.isNode === true ) {\r\n\r\n\t\t\toutgoingLight = context( toneMappingNode, { color: outgoingLight } );\r\n\r\n\t\t}\r\n\r\n\t\t// @TODO: Optimize outputNode to vec3.\r\n\r\n\t\tlet outputNode = vec4( outgoingLight, opacity );\r\n\r\n\t\t// ENCODING\r\n\r\n\t\toutputNode = colorSpace( outputNode, renderer.outputEncoding );\r\n\r\n\t\t// FOG\r\n\r\n\t\tlet fogNode = builder.fogNode;\r\n\r\n\t\tif ( ( fogNode && fogNode.isNode !== true ) && builder.scene.fog ) {\r\n\r\n\t\t\tconst fog = builder.scene.fog;\r\n\r\n\t\t\tif ( fog.isFogExp2 ) {\r\n\r\n\t\t\t\tfogNode = densityFog( reference( 'color', 'color', fog ), reference( 'density', 'float', fog ) );\r\n\r\n\t\t\t} else if ( fog.isFog ) {\r\n\r\n\t\t\t\tfogNode = rangeFog( reference( 'color', 'color', fog ), reference( 'near', 'float', fog ), reference( 'far', 'float', fog ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'NodeMaterial: Unsupported fog configuration.', fog );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( fogNode ) outputNode = vec4( vec3( fogNode.mix( outputNode ) ), outputNode.w );\r\n\r\n\t\treturn outputNode;\r\n\r\n\t}\r\n\r\n\tsetDefaultValues( values ) {\r\n\r\n\t\t// This approach is to reuse the native refreshUniforms*\r\n\t\t// and turn available the use of features like transmission and environment in core\r\n\r\n\t\tfor ( const property in values ) {\r\n\r\n\t\t\tconst value = values[ property ];\r\n\r\n\t\t\tif ( this[ property ] === undefined ) {\r\n\r\n\t\t\t\tthis[ property ] = value;\r\n\r\n\t\t\t\tif ( value && value.clone ) this[ property ] = value.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tObject.assign( this.defines, values.defines );\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst isRoot = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\tif ( isRoot ) {\r\n\r\n\t\t\tmeta = {\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {},\r\n\t\t\t\tnodes: {}\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tconst data = Material.prototype.toJSON.call( this, meta );\r\n\t\tconst nodeKeys = getNodesKeys( this );\r\n\r\n\t\tdata.inputNodes = {};\r\n\r\n\t\tfor ( const name of nodeKeys ) {\r\n\r\n\t\t\tdata.inputNodes[ name ] = this[ name ].toJSON( meta ).uuid;\r\n\r\n\t\t}\r\n\r\n\t\t// TODO: Copied from Object3D.toJSON\r\n\r\n\t\tfunction extractFromCache( cache ) {\r\n\r\n\t\t\tconst values = [];\r\n\r\n\t\t\tfor ( const key in cache ) {\r\n\r\n\t\t\t\tconst data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t\tif ( isRoot ) {\r\n\r\n\t\t\tconst textures = extractFromCache( meta.textures );\r\n\t\t\tconst images = extractFromCache( meta.images );\r\n\t\t\tconst nodes = extractFromCache( meta.nodes );\r\n\r\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\r\n\t\t\tif ( images.length > 0 ) data.images = images;\r\n\t\t\tif ( nodes.length > 0 ) data.nodes = nodes;\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tstatic fromMaterial( /*material*/ ) { }\r\n\r\n}\r\n\r\nexport default NodeMaterial;\r\n", "import NodeMaterial from './NodeMaterial.js';\r\nimport { LineBasicMaterial } from 'three';\r\n\r\nconst defaultValues = new LineBasicMaterial();\r\n\r\nclass LineBasicNodeMaterial extends NodeMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isLineBasicNodeMaterial = true;\r\n\r\n\t\tthis.lights = false;\r\n\t\tthis.normals = false;\r\n\r\n\t\tthis.colorNode = null;\r\n\t\tthis.opacityNode = null;\r\n\r\n\t\tthis.alphaTestNode = null;\r\n\r\n\t\tthis.lightNode = null;\r\n\r\n\t\tthis.positionNode = null;\r\n\r\n\t\tthis.setDefaultValues( defaultValues );\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.colorNode = source.colorNode;\r\n\t\tthis.opacityNode = source.opacityNode;\r\n\r\n\t\tthis.alphaTestNode = source.alphaTestNode;\r\n\r\n\t\tthis.lightNode = source.lightNode;\r\n\r\n\t\tthis.positionNode = source.positionNode;\r\n\r\n\t\treturn super.copy( source );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default LineBasicNodeMaterial;\r\n", "import NodeMaterial from './NodeMaterial.js';\r\nimport { MeshBasicMaterial } from 'three';\r\n\r\nconst defaultValues = new MeshBasicMaterial();\r\n\r\nclass MeshBasicNodeMaterial extends NodeMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshBasicNodeMaterial = true;\r\n\r\n\t\tthis.lights = false;\r\n\r\n\t\tthis.colorNode = null;\r\n\t\tthis.opacityNode = null;\r\n\r\n\t\tthis.alphaTestNode = null;\r\n\r\n\t\tthis.lightNode = null;\r\n\r\n\t\tthis.positionNode = null;\r\n\r\n\t\tthis.setDefaultValues( defaultValues );\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.colorNode = source.colorNode;\r\n\t\tthis.opacityNode = source.opacityNode;\r\n\r\n\t\tthis.alphaTestNode = source.alphaTestNode;\r\n\r\n\t\tthis.lightNode = source.lightNode;\r\n\r\n\t\tthis.positionNode = source.positionNode;\r\n\r\n\t\treturn super.copy( source );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default MeshBasicNodeMaterial;\r\n", "import NodeMaterial from './NodeMaterial.js';\r\nimport {\r\n\tfloat, vec3,\r\n\tmaterialShininess, materialSpecularColor,\r\n\tshininess, specularColor\r\n} from '../shadernode/ShaderNodeElements.js';\r\nimport phongLightingModel from '../functions/PhongLightingModel.js';\r\n\r\nimport { MeshPhongMaterial } from 'three';\r\n\r\nconst defaultValues = new MeshPhongMaterial();\r\n\r\nclass MeshPhongNodeMaterial extends NodeMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshPhongNodeMaterial = true;\r\n\r\n\t\tthis.lights = true;\r\n\r\n\t\tthis.colorNode = null;\r\n\t\tthis.opacityNode = null;\r\n\r\n\t\tthis.shininessNode = null;\r\n\t\tthis.specularNode = null;\r\n\r\n\t\tthis.alphaTestNode = null;\r\n\r\n\t\tthis.lightNode = null;\r\n\r\n\t\tthis.positionNode = null;\r\n\r\n\t\tthis.setDefaultValues( defaultValues );\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tconstructLightingModel( /*builder*/ ) {\r\n\r\n\t\treturn phongLightingModel;\r\n\r\n\t}\r\n\r\n\tconstructVariants( builder, stack ) {\r\n\r\n\t\t// SHININESS\r\n\r\n\t\tconst shininessNode = float( this.shininessNode || materialShininess ).max( 1e-4 ); // to prevent pow( 0.0, 0.0 )\r\n\r\n\t\tstack.assign( shininess, shininessNode );\r\n\r\n\t\t// SPECULAR COLOR\r\n\r\n\t\tconst specularNode = vec3( this.specularNode || materialSpecularColor );\r\n\r\n\t\tstack.assign( specularColor, specularNode );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.colorNode = source.colorNode;\r\n\t\tthis.opacityNode = source.opacityNode;\r\n\r\n\t\tthis.alphaTestNode = source.alphaTestNode;\r\n\r\n\t\tthis.shininessNode = source.shininessNode;\r\n\t\tthis.specularNode = source.specularNode;\r\n\r\n\t\tthis.lightNode = source.lightNode;\r\n\r\n\t\tthis.positionNode = source.positionNode;\r\n\r\n\t\treturn super.copy( source );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default MeshPhongNodeMaterial;\r\n", "import NodeMaterial from './NodeMaterial.js';\r\nimport {\r\n\tfloat, vec3, vec4, mix,\r\n\tmaterialRoughness, materialMetalness, materialColor, diffuseColor,\r\n\tmetalness, roughness, specularColor\r\n} from '../shadernode/ShaderNodeElements.js';\r\nimport getRoughness from '../functions/material/getRoughness.js';\r\nimport physicalLightingModel from '../functions/PhysicalLightingModel.js';\r\n\r\nimport { MeshStandardMaterial } from 'three';\r\n\r\nconst defaultValues = new MeshStandardMaterial();\r\n\r\nexport default class MeshStandardNodeMaterial extends NodeMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshStandardNodeMaterial = true;\r\n\r\n\t\tthis.colorNode = null;\r\n\t\tthis.opacityNode = null;\r\n\r\n\t\tthis.alphaTestNode = null;\r\n\r\n\t\tthis.normalNode = null;\r\n\r\n\t\tthis.emissiveNode = null;\r\n\r\n\t\tthis.metalnessNode = null;\r\n\t\tthis.roughnessNode = null;\r\n\r\n\t\tthis.envNode = null;\r\n\r\n\t\tthis.lightsNode = null;\r\n\r\n\t\tthis.positionNode = null;\r\n\r\n\t\tthis.setDefaultValues( defaultValues );\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tconstructLightingModel( /*builder*/ ) {\r\n\r\n\t\treturn physicalLightingModel;\r\n\r\n\t}\r\n\r\n\tconstructVariants( builder, stack ) {\r\n\r\n\t\t// METALNESS\r\n\r\n\t\tconst metalnessNode = this.metalnessNode ? float( this.metalnessNode ) : materialMetalness;\r\n\r\n\t\tstack.assign( metalness, metalnessNode );\r\n\t\tstack.assign( diffuseColor, vec4( diffuseColor.rgb.mul( metalnessNode.invert() ), diffuseColor.a ) );\r\n\r\n\t\t// ROUGHNESS\r\n\r\n\t\tlet roughnessNode = this.roughnessNode ? float( this.roughnessNode ) : materialRoughness;\r\n\t\troughnessNode = getRoughness.call( { roughness: roughnessNode } );\r\n\r\n\t\tstack.assign( roughness, roughnessNode );\r\n\r\n\t\t// SPECULAR COLOR\r\n\r\n\t\tconst specularColorNode = mix( vec3( 0.04 ), materialColor.rgb, metalnessNode );\r\n\r\n\t\tstack.assign( specularColor, specularColorNode );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.colorNode = source.colorNode;\r\n\t\tthis.opacityNode = source.opacityNode;\r\n\r\n\t\tthis.alphaTestNode = source.alphaTestNode;\r\n\r\n\t\tthis.normalNode = source.normalNode;\r\n\r\n\t\tthis.emissiveNode = source.emissiveNode;\r\n\r\n\t\tthis.metalnessNode = source.metalnessNode;\r\n\t\tthis.roughnessNode = source.roughnessNode;\r\n\r\n\t\tthis.envNode = source.envNode;\r\n\r\n\t\tthis.lightsNode = source.lightsNode;\r\n\r\n\t\tthis.positionNode = source.positionNode;\r\n\r\n\t\treturn super.copy( source );\r\n\r\n\t}\r\n\r\n}\r\n", "import MeshStandardNodeMaterial from './MeshStandardNodeMaterial.js';\r\n\r\nimport { MeshPhysicalMaterial } from 'three';\r\n\r\nconst defaultValues = new MeshPhysicalMaterial();\r\n\r\nexport default class MeshPhysicalNodeMaterial extends MeshStandardNodeMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshPhysicalNodeMaterial = true;\r\n\r\n\t\tthis.clearcoatNode = null;\r\n\t\tthis.clearcoatRoughnessNode = null;\r\n\t\tthis.clearcoatNormalNode = null;\r\n\r\n\t\tthis.sheenNode = null;\r\n\t\tthis.sheenRoughnessNode = null;\r\n\r\n\t\tthis.iridescenceNode = null;\r\n\t\tthis.iridescenceIORNode = null;\r\n\t\tthis.iridescenceThicknessNode = null;\r\n\r\n\t\tthis.specularIntensityNode = null;\r\n\t\tthis.specularColorNode = null;\r\n\r\n\t\tthis.transmissionNode = null;\r\n\t\tthis.thicknessNode = null;\r\n\t\tthis.attenuationDistanceNode = null;\r\n\t\tthis.attenuationColorNode = null;\r\n\r\n\t\tthis.sheen = 0;\r\n\t\tthis.clearcoat = 0;\r\n\t\tthis.iridescence = 0;\r\n\t\tthis.transmission = 0;\r\n\r\n\t\tthis.setDefaultValues( defaultValues );\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.clearcoatNode = source.clearcoatNode;\r\n\t\tthis.clearcoatRoughnessNode = source.clearcoatRoughnessNode;\r\n\t\tthis.clearcoatNormalNode = source.clearcoatNormalNode;\r\n\r\n\t\tthis.sheenNode = source.sheenNode;\r\n\t\tthis.sheenRoughnessNode = source.sheenRoughnessNode;\r\n\r\n\t\tthis.iridescenceNode = source.iridescenceNode;\r\n\t\tthis.iridescenceIORNode = source.iridescenceIORNode;\r\n\t\tthis.iridescenceThicknessNode = source.iridescenceThicknessNode;\r\n\r\n\t\tthis.specularIntensityNode = source.specularIntensityNode;\r\n\t\tthis.specularColorNode = source.specularColorNode;\r\n\r\n\t\tthis.transmissionNode = source.transmissionNode;\r\n\t\tthis.thicknessNode = source.thicknessNode;\r\n\t\tthis.attenuationDistanceNode = source.attenuationDistanceNode;\r\n\t\tthis.attenuationColorNode = source.attenuationColorNode;\r\n\r\n\t\treturn super.copy( source );\r\n\r\n\t}\r\n\r\n}\r\n", "import NodeMaterial from './NodeMaterial.js';\r\nimport { PointsMaterial } from 'three';\r\n\r\nconst defaultValues = new PointsMaterial();\r\n\r\nclass PointsNodeMaterial extends NodeMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isPointsNodeMaterial = true;\r\n\r\n\t\tthis.lights = false;\r\n\t\tthis.normals = false;\r\n\r\n\t\tthis.transparent = true;\r\n\r\n\t\tthis.colorNode = null;\r\n\t\tthis.opacityNode = null;\r\n\r\n\t\tthis.alphaTestNode = null;\r\n\r\n\t\tthis.lightNode = null;\r\n\r\n\t\tthis.sizeNode = null;\r\n\r\n\t\tthis.positionNode = null;\r\n\r\n\t\tthis.setDefaultValues( defaultValues );\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.colorNode = source.colorNode;\r\n\t\tthis.opacityNode = source.opacityNode;\r\n\r\n\t\tthis.alphaTestNode = source.alphaTestNode;\r\n\r\n\t\tthis.lightNode = source.lightNode;\r\n\r\n\t\tthis.sizeNode = source.sizeNode;\r\n\r\n\t\tthis.positionNode = source.positionNode;\r\n\r\n\t\treturn super.copy( source );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default PointsNodeMaterial;\r\n", "import NodeMaterial from './NodeMaterial.js';\r\nimport { SpriteMaterial } from 'three';\r\nimport {\r\n\tvec2, vec3, vec4,\r\n\tuniform, mul,\r\n\tpositionLocal, cos, sin,\r\n\tmodelViewMatrix, cameraProjectionMatrix, modelWorldMatrix, materialRotation\r\n} from '../shadernode/ShaderNodeElements.js';\r\n\r\nconst defaultValues = new SpriteMaterial();\r\n\r\nclass SpriteNodeMaterial extends NodeMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isSpriteNodeMaterial = true;\r\n\r\n\t\tthis.lights = false;\r\n\t\tthis.normals = false;\r\n\r\n\t\tthis.colorNode = null;\r\n\t\tthis.opacityNode = null;\r\n\r\n\t\tthis.alphaTestNode = null;\r\n\r\n\t\tthis.lightNode = null;\r\n\r\n\t\tthis.positionNode = null;\r\n\t\tthis.rotationNode = null;\r\n\t\tthis.scaleNode = null;\r\n\r\n\t\tthis.setDefaultValues( defaultValues );\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tconstructPosition( { object, context } ) {\r\n\r\n\t\t// < VERTEX STAGE >\r\n\r\n\t\tconst { positionNode, rotationNode, scaleNode } = this;\r\n\r\n\t\tconst vertex = positionLocal;\r\n\r\n\t\tlet mvPosition = mul( modelViewMatrix, positionNode ? vec4( positionNode.xyz, 1 ) : vec4( 0, 0, 0, 1 ) );\r\n\r\n\t\tlet scale = vec2(\r\n\t\t\tvec3( modelWorldMatrix[ 0 ].x, modelWorldMatrix[ 0 ].y, modelWorldMatrix[ 0 ].z ).length(),\r\n\t\t\tvec3( modelWorldMatrix[ 1 ].x, modelWorldMatrix[ 1 ].y, modelWorldMatrix[ 1 ].z ).length()\r\n\t\t);\r\n\r\n\t\tif ( scaleNode !== null ) {\r\n\r\n\t\t\tscale = scale.mul( scaleNode );\r\n\r\n\t\t}\r\n\r\n\t\tlet alignedPosition = vertex.xy;\r\n\r\n\t\tif ( object.center && object.center.isVector2 === true ) {\r\n\r\n\t\t\talignedPosition = alignedPosition.sub( uniform( object.center ).sub( vec2( 0.5 ) ) );\r\n\r\n\t\t}\r\n\r\n\t\talignedPosition = mul( alignedPosition, scale );\r\n\r\n\t\tconst rotation = rotationNode || materialRotation;\r\n\r\n\t\tconst rotatedPosition = vec2(\r\n\t\t\tcos( rotation ).mul( alignedPosition.x ).sub( sin( rotation ).mul( alignedPosition.y ) ),\r\n\t\t\tsin( rotation ).mul( alignedPosition.x ).add( cos( rotation ).mul( alignedPosition.y ) )\r\n\t\t);\r\n\r\n\t\tmvPosition = vec4( mvPosition.xy.add( rotatedPosition.xy ), mvPosition.z, mvPosition.w );\r\n\r\n\t\tconst modelViewProjection = cameraProjectionMatrix.mul( mvPosition );\r\n\r\n\t\tcontext.vertex = vertex;\r\n\r\n\t\treturn modelViewProjection;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.colorNode = source.colorNode;\r\n\t\tthis.opacityNode = source.opacityNode;\r\n\r\n\t\tthis.alphaTestNode = source.alphaTestNode;\r\n\r\n\t\tthis.lightNode = source.lightNode;\r\n\r\n\t\tthis.positionNode = source.positionNode;\r\n\t\tthis.rotationNode = source.rotationNode;\r\n\t\tthis.scaleNode = source.scaleNode;\r\n\r\n\t\treturn super.copy( source );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default SpriteNodeMaterial;\r\n", "import NodeMaterial from './NodeMaterial.js';\r\nimport LineBasicNodeMaterial from './LineBasicNodeMaterial.js';\r\nimport MeshBasicNodeMaterial from './MeshBasicNodeMaterial.js';\r\nimport MeshPhongNodeMaterial from './MeshPhongNodeMaterial.js';\r\nimport MeshStandardNodeMaterial from './MeshStandardNodeMaterial.js';\r\nimport MeshPhysicalNodeMaterial from './MeshPhysicalNodeMaterial.js';\r\nimport PointsNodeMaterial from './PointsNodeMaterial.js';\r\nimport SpriteNodeMaterial from './SpriteNodeMaterial.js';\r\n\r\nexport {\r\n\tNodeMaterial,\r\n\tLineBasicNodeMaterial,\r\n\tMeshBasicNodeMaterial,\r\n\tMeshPhongNodeMaterial,\r\n\tMeshStandardNodeMaterial,\r\n\tMeshPhysicalNodeMaterial,\r\n\tPointsNodeMaterial,\r\n\tSpriteNodeMaterial\r\n};\r\n\r\nNodeMaterial.fromMaterial = function ( material ) {\r\n\r\n\tconst materialLib = {\r\n\t\tNodeMaterial,\r\n\t\tLineBasicNodeMaterial,\r\n\t\tMeshBasicNodeMaterial,\r\n\t\tMeshPhongNodeMaterial,\r\n\t\tMeshStandardNodeMaterial,\r\n\t\tMeshPhysicalNodeMaterial,\r\n\t\tPointsNodeMaterial,\r\n\t\tSpriteNodeMaterial\r\n\t};\r\n\r\n\tconst type = material.type.replace( 'Material', 'NodeMaterial' );\r\n\r\n\tif ( materialLib[ type ] === undefined ) {\r\n\r\n\t\tif ( material.isNodeMaterial !== true ) {\r\n\r\n\t\t\tthrow new Error( `NodeMaterial: Material \"${ material.type }\" is not compatible.` );\r\n\r\n\t\t}\r\n\r\n\t\treturn material; // is already a node material\r\n\r\n\t}\r\n\r\n\tconst nodeMaterial = new materialLib[ type ]();\r\n\r\n\tfor ( const key in material ) {\r\n\r\n\t\tnodeMaterial[ key ] = material[ key ];\r\n\r\n\t}\r\n\r\n\treturn nodeMaterial;\r\n\r\n};\r\n", "import { MaterialLoader } from 'three';\r\nimport {\r\n\tNodeMaterial,\r\n\tLineBasicNodeMaterial,\r\n\tMeshBasicNodeMaterial,\r\n\tMeshStandardNodeMaterial,\r\n\tMeshPhysicalNodeMaterial,\r\n\tPointsNodeMaterial,\r\n\tSpriteNodeMaterial\r\n} from '../materials/Materials.js';\r\n\r\nconst superFromTypeFunction = MaterialLoader.createMaterialFromType;\r\n\r\nMaterialLoader.createMaterialFromType = function ( type ) {\r\n\r\n\tconst materialLib = {\r\n\t\tNodeMaterial,\r\n\t\tLineBasicNodeMaterial,\r\n\t\tMeshBasicNodeMaterial,\r\n\t\tMeshStandardNodeMaterial,\r\n\t\tMeshPhysicalNodeMaterial,\r\n\t\tPointsNodeMaterial,\r\n\t\tSpriteNodeMaterial\r\n\t};\r\n\r\n\tif ( materialLib[ type ] !== undefined ) {\r\n\r\n\t\treturn new materialLib[ type ]();\r\n\r\n\t}\r\n\r\n\treturn superFromTypeFunction.call( this, type );\r\n\r\n};\r\n\r\nclass NodeMaterialLoader extends MaterialLoader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t\tthis.nodes = {};\r\n\r\n\t}\r\n\r\n\tparse( json ) {\r\n\r\n\t\tconst material = super.parse( json );\r\n\r\n\t\tconst nodes = this.nodes;\r\n\t\tconst inputNodes = json.inputNodes;\r\n\r\n\t\tfor ( const property in inputNodes ) {\r\n\r\n\t\t\tconst uuid = inputNodes[ property ];\r\n\r\n\t\t\tmaterial[ property ] = nodes[ uuid ];\r\n\r\n\t\t}\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n\tsetNodes( value ) {\r\n\r\n\t\tthis.nodes = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeMaterialLoader;\r\n", "import NodeLoader from './NodeLoader.js';\r\nimport NodeMaterialLoader from './NodeMaterialLoader.js';\r\nimport { ObjectLoader } from 'three';\r\n\r\nclass NodeObjectLoader extends ObjectLoader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t\tthis._nodesJSON = null;\r\n\r\n\t}\r\n\r\n\tparse( json, onLoad ) {\r\n\r\n\t\tthis._nodesJSON = json.nodes;\r\n\r\n\t\tconst data = super.parse( json, onLoad );\r\n\r\n\t\tthis._nodesJSON = null; // dispose\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tparseNodes( json, textures ) {\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tconst loader = new NodeLoader();\r\n\t\t\tloader.setTextures( textures );\r\n\r\n\t\t\treturn loader.parseNodes( json );\r\n\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\r\n\t}\r\n\r\n\tparseMaterials( json, textures ) {\r\n\r\n\t\tconst materials = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tconst nodes = this.parseNodes( this._nodesJSON, textures );\r\n\r\n\t\t\tconst loader = new NodeMaterialLoader();\r\n\t\t\tloader.setTextures( textures );\r\n\t\t\tloader.setNodes( nodes );\r\n\r\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst data = json[ i ];\r\n\r\n\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn materials;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeObjectLoader;\r\n", "class NodeParser {\r\n\r\n\tparseFunction( /*source*/ ) {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeParser;\r\n", "class NodeFunction {\r\n\r\n\tconstructor( type, inputs, name = '', presicion = '' ) {\r\n\r\n\t\tthis.type = type;\r\n\t\tthis.inputs = inputs;\r\n\t\tthis.name = name;\r\n\t\tthis.presicion = presicion;\r\n\r\n\t}\r\n\r\n\tgetCode( /*name = this.name*/ ) {\r\n\r\n\t\tconsole.warn( 'Abstract function.' );\r\n\r\n\t}\r\n\r\n}\r\n\r\nNodeFunction.isNodeFunction = true;\r\n\r\nexport default NodeFunction;\r\n", "import NodeFunction from '../core/NodeFunction.js';\r\nimport NodeFunctionInput from '../core/NodeFunctionInput.js';\r\n\r\nconst declarationRegexp = /^[fn]*\\s*([a-z_0-9]+)?\\s*\\(([\\s\\S]*?)\\)\\s*[\\-\\>]*\\s*([a-z_0-9]+)?/i;\r\nconst propertiesRegexp = /[a-z_0-9]+/ig;\r\n\r\nconst wgslTypeLib = {\r\n\tf32: 'float'\r\n};\r\n\r\nconst parse = ( source ) => {\r\n\r\n\tsource = source.trim();\r\n\r\n\tconst declaration = source.match( declarationRegexp );\r\n\r\n\tif ( declaration !== null && declaration.length === 4 ) {\r\n\r\n\t\t// tokenizer\r\n\r\n\t\tconst inputsCode = declaration[ 2 ];\r\n\t\tconst propsMatches = [];\r\n\r\n\t\tlet nameMatch = null;\r\n\r\n\t\twhile ( ( nameMatch = propertiesRegexp.exec( inputsCode ) ) !== null ) {\r\n\r\n\t\t\tpropsMatches.push( nameMatch );\r\n\r\n\t\t}\r\n\r\n\t\t// parser\r\n\r\n\t\tconst inputs = [];\r\n\r\n\t\tlet i = 0;\r\n\r\n\t\twhile ( i < propsMatches.length ) {\r\n\r\n\t\t\t// default\r\n\r\n\t\t\tconst name = propsMatches[ i ++ ][ 0 ];\r\n\t\t\tlet type = propsMatches[ i ++ ][ 0 ];\r\n\r\n\t\t\ttype = wgslTypeLib[ type ] || type;\r\n\r\n\t\t\t// precision\r\n\r\n\t\t\tif ( i < propsMatches.length && /^[fui]\\d{2}$/.test( propsMatches[ i ][ 0 ] ) === true )\r\n\t\t\t\ti ++;\r\n\r\n\t\t\t// add input\r\n\r\n\t\t\tinputs.push( new NodeFunctionInput( type, name ) );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tconst blockCode = source.substring( declaration[ 0 ].length );\r\n\r\n\t\tconst name = declaration[ 1 ] !== undefined ? declaration[ 1 ] : '';\r\n\t\tconst type = declaration[ 3 ] || 'void';\r\n\r\n\t\treturn {\r\n\t\t\ttype,\r\n\t\t\tinputs,\r\n\t\t\tname,\r\n\t\t\tinputsCode,\r\n\t\t\tblockCode\r\n\t\t};\r\n\r\n\t} else {\r\n\r\n\t\tthrow new Error( 'FunctionNode: Function is not a WGSL code.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nclass WGSLNodeFunction extends NodeFunction {\r\n\r\n\tconstructor( source ) {\r\n\r\n\t\tconst { type, inputs, name, inputsCode, blockCode } = parse( source );\r\n\r\n\t\tsuper( type, inputs, name );\r\n\r\n\t\tthis.inputsCode = inputsCode;\r\n\t\tthis.blockCode = blockCode;\r\n\r\n\t}\r\n\r\n\tgetCode( name = this.name ) {\r\n\r\n\t\tconst type = this.type !== 'void' ? '-> ' + this.type : '';\r\n\r\n\t\treturn `fn ${ name } ( ${ this.inputsCode.trim() } ) ${ type }` + this.blockCode;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default WGSLNodeFunction;\r\n", "import NodeParser from '../core/NodeParser.js';\r\nimport WGSLNodeFunction from './WGSLNodeFunction.js';\r\n\r\nclass WGSLNodeParser extends NodeParser {\r\n\r\n\tparseFunction( source ) {\r\n\r\n\t\treturn new WGSLNodeFunction( source );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default WGSLNodeParser;\r\n", "import NodeFunction from '../core/NodeFunction.js';\r\nimport NodeFunctionInput from '../core/NodeFunctionInput.js';\r\n\r\nconst declarationRegexp = /^\\s*(highp|mediump|lowp)?\\s*([a-z_0-9]+)\\s*([a-z_0-9]+)?\\s*\\(([\\s\\S]*?)\\)/i;\r\nconst propertiesRegexp = /[a-z_0-9]+/ig;\r\n\r\nconst pragmaMain = '#pragma main';\r\n\r\nconst parse = ( source ) => {\r\n\r\n\tsource = source.trim();\r\n\r\n\tconst pragmaMainIndex = source.indexOf( pragmaMain );\r\n\r\n\tconst mainCode = pragmaMainIndex !== - 1 ? source.slice( pragmaMainIndex + pragmaMain.length ) : source;\r\n\r\n\tconst declaration = mainCode.match( declarationRegexp );\r\n\r\n\tif ( declaration !== null && declaration.length === 5 ) {\r\n\r\n\t\t// tokenizer\r\n\r\n\t\tconst inputsCode = declaration[ 4 ];\r\n\t\tconst propsMatches = [];\r\n\r\n\t\tlet nameMatch = null;\r\n\r\n\t\twhile ( ( nameMatch = propertiesRegexp.exec( inputsCode ) ) !== null ) {\r\n\r\n\t\t\tpropsMatches.push( nameMatch );\r\n\r\n\t\t}\r\n\r\n\t\t// parser\r\n\r\n\t\tconst inputs = [];\r\n\r\n\t\tlet i = 0;\r\n\r\n\t\twhile ( i < propsMatches.length ) {\r\n\r\n\t\t\tconst isConst = propsMatches[ i ][ 0 ] === 'const';\r\n\r\n\t\t\tif ( isConst === true ) {\r\n\r\n\t\t\t\ti ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet qualifier = propsMatches[ i ][ 0 ];\r\n\r\n\t\t\tif ( qualifier === 'in' || qualifier === 'out' || qualifier === 'inout' ) {\r\n\r\n\t\t\t\ti ++;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tqualifier = '';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst type = propsMatches[ i ++ ][ 0 ];\r\n\r\n\t\t\tlet count = Number.parseInt( propsMatches[ i ][ 0 ] );\r\n\r\n\t\t\tif ( Number.isNaN( count ) === false ) i ++;\r\n\t\t\telse count = null;\r\n\r\n\t\t\tconst name = propsMatches[ i ++ ][ 0 ];\r\n\r\n\t\t\tinputs.push( new NodeFunctionInput( type, name, count, qualifier, isConst ) );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tconst blockCode = mainCode.substring( declaration[ 0 ].length );\r\n\r\n\t\tconst name = declaration[ 3 ] !== undefined ? declaration[ 3 ] : '';\r\n\t\tconst type = declaration[ 2 ];\r\n\r\n\t\tconst presicion = declaration[ 1 ] !== undefined ? declaration[ 1 ] : '';\r\n\r\n\t\tconst headerCode = pragmaMainIndex !== - 1 ? source.slice( 0, pragmaMainIndex ) : '';\r\n\r\n\t\treturn {\r\n\t\t\ttype,\r\n\t\t\tinputs,\r\n\t\t\tname,\r\n\t\t\tpresicion,\r\n\t\t\tinputsCode,\r\n\t\t\tblockCode,\r\n\t\t\theaderCode\r\n\t\t};\r\n\r\n\t} else {\r\n\r\n\t\tthrow new Error( 'FunctionNode: Function is not a GLSL code.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nclass GLSLNodeFunction extends NodeFunction {\r\n\r\n\tconstructor( source ) {\r\n\r\n\t\tconst { type, inputs, name, presicion, inputsCode, blockCode, headerCode } = parse( source );\r\n\r\n\t\tsuper( type, inputs, name, presicion );\r\n\r\n\t\tthis.inputsCode = inputsCode;\r\n\t\tthis.blockCode = blockCode;\r\n\t\tthis.headerCode = headerCode;\r\n\r\n\t}\r\n\r\n\tgetCode( name = this.name ) {\r\n\r\n\t\tlet code;\r\n\r\n\t\tconst blockCode = this.blockCode;\r\n\r\n\t\tif ( blockCode !== '' ) {\r\n\r\n\t\t\tconst { type, inputsCode, headerCode, presicion } = this;\r\n\r\n\t\t\tlet declarationCode = `${ type } ${ name } ( ${ inputsCode.trim() } )`;\r\n\r\n\t\t\tif ( presicion !== '' ) {\r\n\r\n\t\t\t\tdeclarationCode = `${ presicion } ${ declarationCode }`;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcode = headerCode + declarationCode + blockCode;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// interface function\r\n\r\n\t\t\tcode = '';\r\n\r\n\t\t}\r\n\r\n\t\treturn code;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default GLSLNodeFunction;\r\n", "import NodeParser from '../core/NodeParser.js';\r\nimport GLSLNodeFunction from './GLSLNodeFunction.js';\r\n\r\nclass GLSLNodeParser extends NodeParser {\r\n\r\n\tparseFunction( source ) {\r\n\r\n\t\treturn new GLSLNodeFunction( source );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default GLSLNodeParser;\r\n", "import { code, fn } from '../../Nodes.js';\r\n\r\n// Original shader code from:\r\n// https://github.com/AcademySoftwareFoundation/MaterialX/blob/main/libraries/stdlib/genglsl/lib/mx_noise.glsl\r\n\r\nexport const mx_noise = code( `float mx_select(bool b, float t, float f)\r\n{\r\n    return b ? t : f;\r\n}\r\n\r\nfloat mx_negate_if(float val, bool b)\r\n{\r\n    return b ? -val : val;\r\n}\r\n\r\nint mx_floor(float x)\r\n{\r\n    return int(floor(x));\r\n}\r\n\r\n// return mx_floor as well as the fractional remainder\r\nfloat mx_floorfrac(float x, out int i)\r\n{\r\n    i = mx_floor(x);\r\n    return x - float(i);\r\n}\r\n\r\nfloat mx_bilerp(float v0, float v1, float v2, float v3, float s, float t)\r\n{\r\n    float s1 = 1.0 - s;\r\n    return (1.0 - t) * (v0*s1 + v1*s) + t * (v2*s1 + v3*s);\r\n}\r\nvec3 mx_bilerp(vec3 v0, vec3 v1, vec3 v2, vec3 v3, float s, float t)\r\n{\r\n    float s1 = 1.0 - s;\r\n    return (1.0 - t) * (v0*s1 + v1*s) + t * (v2*s1 + v3*s);\r\n}\r\nfloat mx_trilerp(float v0, float v1, float v2, float v3, float v4, float v5, float v6, float v7, float s, float t, float r)\r\n{\r\n    float s1 = 1.0 - s;\r\n    float t1 = 1.0 - t;\r\n    float r1 = 1.0 - r;\r\n    return (r1*(t1*(v0*s1 + v1*s) + t*(v2*s1 + v3*s)) +\r\n            r*(t1*(v4*s1 + v5*s) + t*(v6*s1 + v7*s)));\r\n}\r\nvec3 mx_trilerp(vec3 v0, vec3 v1, vec3 v2, vec3 v3, vec3 v4, vec3 v5, vec3 v6, vec3 v7, float s, float t, float r)\r\n{\r\n    float s1 = 1.0 - s;\r\n    float t1 = 1.0 - t;\r\n    float r1 = 1.0 - r;\r\n    return (r1*(t1*(v0*s1 + v1*s) + t*(v2*s1 + v3*s)) +\r\n            r*(t1*(v4*s1 + v5*s) + t*(v6*s1 + v7*s)));\r\n}\r\n\r\n// 2 and 3 dimensional gradient functions - perform a dot product against a\r\n// randomly chosen vector. Note that the gradient vector is not normalized, but\r\n// this only affects the overal \"scale\" of the result, so we simply account for\r\n// the scale by multiplying in the corresponding \"perlin\" function.\r\nfloat mx_gradient_float(uint hash, float x, float y)\r\n{\r\n    // 8 possible directions (+-1,+-2) and (+-2,+-1)\r\n    uint h = hash & 7u;\r\n    float u = mx_select(h<4u, x, y);\r\n    float v = 2.0 * mx_select(h<4u, y, x);\r\n    // compute the dot product with (x,y).\r\n    return mx_negate_if(u, bool(h&1u)) + mx_negate_if(v, bool(h&2u));\r\n}\r\nfloat mx_gradient_float(uint hash, float x, float y, float z)\r\n{\r\n    // use vectors pointing to the edges of the cube\r\n    uint h = hash & 15u;\r\n    float u = mx_select(h<8u, x, y);\r\n    float v = mx_select(h<4u, y, mx_select((h==12u)||(h==14u), x, z));\r\n    return mx_negate_if(u, bool(h&1u)) + mx_negate_if(v, bool(h&2u));\r\n}\r\nvec3 mx_gradient_vec3(uvec3 hash, float x, float y)\r\n{\r\n    return vec3(mx_gradient_float(hash.x, x, y), mx_gradient_float(hash.y, x, y), mx_gradient_float(hash.z, x, y));\r\n}\r\nvec3 mx_gradient_vec3(uvec3 hash, float x, float y, float z)\r\n{\r\n    return vec3(mx_gradient_float(hash.x, x, y, z), mx_gradient_float(hash.y, x, y, z), mx_gradient_float(hash.z, x, y, z));\r\n}\r\n// Scaling factors to normalize the result of gradients above.\r\n// These factors were experimentally calculated to be:\r\n//    2D:   0.6616\r\n//    3D:   0.9820\r\nfloat mx_gradient_scale2d(float v) { return 0.6616 * v; }\r\nfloat mx_gradient_scale3d(float v) { return 0.9820 * v; }\r\nvec3 mx_gradient_scale2d(vec3 v) { return 0.6616 * v; }\r\nvec3 mx_gradient_scale3d(vec3 v) { return 0.9820 * v; }\r\n\r\n/// Bitwise circular rotation left by k bits (for 32 bit unsigned integers)\r\nuint mx_rotl32(uint x, int k)\r\n{\r\n    return (x<<k) | (x>>(32-k));\r\n}\r\n\r\nvoid mx_bjmix(inout uint a, inout uint b, inout uint c)\r\n{\r\n    a -= c; a ^= mx_rotl32(c, 4); c += b;\r\n    b -= a; b ^= mx_rotl32(a, 6); a += c;\r\n    c -= b; c ^= mx_rotl32(b, 8); b += a;\r\n    a -= c; a ^= mx_rotl32(c,16); c += b;\r\n    b -= a; b ^= mx_rotl32(a,19); a += c;\r\n    c -= b; c ^= mx_rotl32(b, 4); b += a;\r\n}\r\n\r\n// Mix up and combine the bits of a, b, and c (doesn't change them, but\r\n// returns a hash of those three original values).\r\nuint mx_bjfinal(uint a, uint b, uint c)\r\n{\r\n    c ^= b; c -= mx_rotl32(b,14);\r\n    a ^= c; a -= mx_rotl32(c,11);\r\n    b ^= a; b -= mx_rotl32(a,25);\r\n    c ^= b; c -= mx_rotl32(b,16);\r\n    a ^= c; a -= mx_rotl32(c,4);\r\n    b ^= a; b -= mx_rotl32(a,14);\r\n    c ^= b; c -= mx_rotl32(b,24);\r\n    return c;\r\n}\r\n\r\n// Convert a 32 bit integer into a floating point number in [0,1]\r\nfloat mx_bits_to_01(uint bits)\r\n{\r\n    return float(bits) / float(uint(0xffffffff));\r\n}\r\n\r\nfloat mx_fade(float t)\r\n{\r\n   return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\r\n}\r\n\r\nuint mx_hash_int(int x)\r\n{\r\n    uint len = 1u;\r\n    uint seed = uint(0xdeadbeef) + (len << 2u) + 13u;\r\n    return mx_bjfinal(seed+uint(x), seed, seed);\r\n}\r\n\r\nuint mx_hash_int(int x, int y)\r\n{\r\n    uint len = 2u;\r\n    uint a, b, c;\r\n    a = b = c = uint(0xdeadbeef) + (len << 2u) + 13u;\r\n    a += uint(x);\r\n    b += uint(y);\r\n    return mx_bjfinal(a, b, c);\r\n}\r\n\r\nuint mx_hash_int(int x, int y, int z)\r\n{\r\n    uint len = 3u;\r\n    uint a, b, c;\r\n    a = b = c = uint(0xdeadbeef) + (len << 2u) + 13u;\r\n    a += uint(x);\r\n    b += uint(y);\r\n    c += uint(z);\r\n    return mx_bjfinal(a, b, c);\r\n}\r\n\r\nuint mx_hash_int(int x, int y, int z, int xx)\r\n{\r\n    uint len = 4u;\r\n    uint a, b, c;\r\n    a = b = c = uint(0xdeadbeef) + (len << 2u) + 13u;\r\n    a += uint(x);\r\n    b += uint(y);\r\n    c += uint(z);\r\n    mx_bjmix(a, b, c);\r\n    a += uint(xx);\r\n    return mx_bjfinal(a, b, c);\r\n}\r\n\r\nuint mx_hash_int(int x, int y, int z, int xx, int yy)\r\n{\r\n    uint len = 5u;\r\n    uint a, b, c;\r\n    a = b = c = uint(0xdeadbeef) + (len << 2u) + 13u;\r\n    a += uint(x);\r\n    b += uint(y);\r\n    c += uint(z);\r\n    mx_bjmix(a, b, c);\r\n    a += uint(xx);\r\n    b += uint(yy);\r\n    return mx_bjfinal(a, b, c);\r\n}\r\n\r\nuvec3 mx_hash_vec3(int x, int y)\r\n{\r\n    uint h = mx_hash_int(x, y);\r\n    // we only need the low-order bits to be random, so split out\r\n    // the 32 bit result into 3 parts for each channel\r\n    uvec3 result;\r\n    result.x = (h      ) & 0xFFu;\r\n    result.y = (h >> 8 ) & 0xFFu;\r\n    result.z = (h >> 16) & 0xFFu;\r\n    return result;\r\n}\r\n\r\nuvec3 mx_hash_vec3(int x, int y, int z)\r\n{\r\n    uint h = mx_hash_int(x, y, z);\r\n    // we only need the low-order bits to be random, so split out\r\n    // the 32 bit result into 3 parts for each channel\r\n    uvec3 result;\r\n    result.x = (h      ) & 0xFFu;\r\n    result.y = (h >> 8 ) & 0xFFu;\r\n    result.z = (h >> 16) & 0xFFu;\r\n    return result;\r\n}\r\n\r\nfloat mx_perlin_noise_float(vec2 p)\r\n{\r\n    int X, Y;\r\n    float fx = mx_floorfrac(p.x, X);\r\n    float fy = mx_floorfrac(p.y, Y);\r\n    float u = mx_fade(fx);\r\n    float v = mx_fade(fy);\r\n    float result = mx_bilerp(\r\n        mx_gradient_float(mx_hash_int(X  , Y  ), fx    , fy     ),\r\n        mx_gradient_float(mx_hash_int(X+1, Y  ), fx-1.0, fy     ),\r\n        mx_gradient_float(mx_hash_int(X  , Y+1), fx    , fy-1.0),\r\n        mx_gradient_float(mx_hash_int(X+1, Y+1), fx-1.0, fy-1.0),\r\n        u, v);\r\n    return mx_gradient_scale2d(result);\r\n}\r\n\r\nfloat mx_perlin_noise_float(vec3 p)\r\n{\r\n    int X, Y, Z;\r\n    float fx = mx_floorfrac(p.x, X);\r\n    float fy = mx_floorfrac(p.y, Y);\r\n    float fz = mx_floorfrac(p.z, Z);\r\n    float u = mx_fade(fx);\r\n    float v = mx_fade(fy);\r\n    float w = mx_fade(fz);\r\n    float result = mx_trilerp(\r\n        mx_gradient_float(mx_hash_int(X  , Y  , Z  ), fx    , fy    , fz     ),\r\n        mx_gradient_float(mx_hash_int(X+1, Y  , Z  ), fx-1.0, fy    , fz     ),\r\n        mx_gradient_float(mx_hash_int(X  , Y+1, Z  ), fx    , fy-1.0, fz     ),\r\n        mx_gradient_float(mx_hash_int(X+1, Y+1, Z  ), fx-1.0, fy-1.0, fz     ),\r\n        mx_gradient_float(mx_hash_int(X  , Y  , Z+1), fx    , fy    , fz-1.0),\r\n        mx_gradient_float(mx_hash_int(X+1, Y  , Z+1), fx-1.0, fy    , fz-1.0),\r\n        mx_gradient_float(mx_hash_int(X  , Y+1, Z+1), fx    , fy-1.0, fz-1.0),\r\n        mx_gradient_float(mx_hash_int(X+1, Y+1, Z+1), fx-1.0, fy-1.0, fz-1.0),\r\n        u, v, w);\r\n    return mx_gradient_scale3d(result);\r\n}\r\n\r\nvec3 mx_perlin_noise_vec3(vec2 p)\r\n{\r\n    int X, Y;\r\n    float fx = mx_floorfrac(p.x, X);\r\n    float fy = mx_floorfrac(p.y, Y);\r\n    float u = mx_fade(fx);\r\n    float v = mx_fade(fy);\r\n    vec3 result = mx_bilerp(\r\n        mx_gradient_vec3(mx_hash_vec3(X  , Y  ), fx    , fy     ),\r\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y  ), fx-1.0, fy     ),\r\n        mx_gradient_vec3(mx_hash_vec3(X  , Y+1), fx    , fy-1.0),\r\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y+1), fx-1.0, fy-1.0),\r\n        u, v);\r\n    return mx_gradient_scale2d(result);\r\n}\r\n\r\nvec3 mx_perlin_noise_vec3(vec3 p)\r\n{\r\n    int X, Y, Z;\r\n    float fx = mx_floorfrac(p.x, X);\r\n    float fy = mx_floorfrac(p.y, Y);\r\n    float fz = mx_floorfrac(p.z, Z);\r\n    float u = mx_fade(fx);\r\n    float v = mx_fade(fy);\r\n    float w = mx_fade(fz);\r\n    vec3 result = mx_trilerp(\r\n        mx_gradient_vec3(mx_hash_vec3(X  , Y  , Z  ), fx    , fy    , fz     ),\r\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y  , Z  ), fx-1.0, fy    , fz     ),\r\n        mx_gradient_vec3(mx_hash_vec3(X  , Y+1, Z  ), fx    , fy-1.0, fz     ),\r\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y+1, Z  ), fx-1.0, fy-1.0, fz     ),\r\n        mx_gradient_vec3(mx_hash_vec3(X  , Y  , Z+1), fx    , fy    , fz-1.0),\r\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y  , Z+1), fx-1.0, fy    , fz-1.0),\r\n        mx_gradient_vec3(mx_hash_vec3(X  , Y+1, Z+1), fx    , fy-1.0, fz-1.0),\r\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y+1, Z+1), fx-1.0, fy-1.0, fz-1.0),\r\n        u, v, w);\r\n    return mx_gradient_scale3d(result);\r\n}\r\n\r\nfloat mx_cell_noise_float(float p)\r\n{\r\n    int ix = mx_floor(p);\r\n    return mx_bits_to_01(mx_hash_int(ix));\r\n}\r\n\r\nfloat mx_cell_noise_float(vec2 p)\r\n{\r\n    int ix = mx_floor(p.x);\r\n    int iy = mx_floor(p.y);\r\n    return mx_bits_to_01(mx_hash_int(ix, iy));\r\n}\r\n\r\nfloat mx_cell_noise_float(vec3 p)\r\n{\r\n    int ix = mx_floor(p.x);\r\n    int iy = mx_floor(p.y);\r\n    int iz = mx_floor(p.z);\r\n    return mx_bits_to_01(mx_hash_int(ix, iy, iz));\r\n}\r\n\r\nfloat mx_cell_noise_float(vec4 p)\r\n{\r\n    int ix = mx_floor(p.x);\r\n    int iy = mx_floor(p.y);\r\n    int iz = mx_floor(p.z);\r\n    int iw = mx_floor(p.w);\r\n    return mx_bits_to_01(mx_hash_int(ix, iy, iz, iw));\r\n}\r\n\r\nvec3 mx_cell_noise_vec3(float p)\r\n{\r\n    int ix = mx_floor(p);\r\n    return vec3(\r\n            mx_bits_to_01(mx_hash_int(ix, 0)),\r\n            mx_bits_to_01(mx_hash_int(ix, 1)),\r\n            mx_bits_to_01(mx_hash_int(ix, 2))\r\n    );\r\n}\r\n\r\nvec3 mx_cell_noise_vec3(vec2 p)\r\n{\r\n    int ix = mx_floor(p.x);\r\n    int iy = mx_floor(p.y);\r\n    return vec3(\r\n            mx_bits_to_01(mx_hash_int(ix, iy, 0)),\r\n            mx_bits_to_01(mx_hash_int(ix, iy, 1)),\r\n            mx_bits_to_01(mx_hash_int(ix, iy, 2))\r\n    );\r\n}\r\n\r\nvec3 mx_cell_noise_vec3(vec3 p)\r\n{\r\n    int ix = mx_floor(p.x);\r\n    int iy = mx_floor(p.y);\r\n    int iz = mx_floor(p.z);\r\n    return vec3(\r\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, 0)),\r\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, 1)),\r\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, 2))\r\n    );\r\n}\r\n\r\nvec3 mx_cell_noise_vec3(vec4 p)\r\n{\r\n    int ix = mx_floor(p.x);\r\n    int iy = mx_floor(p.y);\r\n    int iz = mx_floor(p.z);\r\n    int iw = mx_floor(p.w);\r\n    return vec3(\r\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, 0)),\r\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, 1)),\r\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, 2))\r\n    );\r\n}\r\n\r\nfloat mx_fractal_noise_float(vec3 p, int octaves, float lacunarity, float diminish)\r\n{\r\n    float result = 0.0;\r\n    float amplitude = 1.0;\r\n    for (int i = 0;  i < octaves; ++i)\r\n    {\r\n        result += amplitude * mx_perlin_noise_float(p);\r\n        amplitude *= diminish;\r\n        p *= lacunarity;\r\n    }\r\n    return result;\r\n}\r\n\r\nvec3 mx_fractal_noise_vec3(vec3 p, int octaves, float lacunarity, float diminish)\r\n{\r\n    vec3 result = vec3(0.0);\r\n    float amplitude = 1.0;\r\n    for (int i = 0;  i < octaves; ++i)\r\n    {\r\n        result += amplitude * mx_perlin_noise_vec3(p);\r\n        amplitude *= diminish;\r\n        p *= lacunarity;\r\n    }\r\n    return result;\r\n}\r\n\r\nvec2 mx_fractal_noise_vec2(vec3 p, int octaves, float lacunarity, float diminish)\r\n{\r\n    return vec2(mx_fractal_noise_float(p, octaves, lacunarity, diminish),\r\n                mx_fractal_noise_float(p+vec3(19, 193, 17), octaves, lacunarity, diminish));\r\n}\r\n\r\nvec4 mx_fractal_noise_vec4(vec3 p, int octaves, float lacunarity, float diminish)\r\n{\r\n    vec3  c = mx_fractal_noise_vec3(p, octaves, lacunarity, diminish);\r\n    float f = mx_fractal_noise_float(p+vec3(19, 193, 17), octaves, lacunarity, diminish);\r\n    return vec4(c, f);\r\n}\r\n\r\nfloat mx_worley_distance(vec2 p, int x, int y, int xoff, int yoff, float jitter, int metric)\r\n{\r\n    vec3  tmp = mx_cell_noise_vec3(vec2(x+xoff, y+yoff));\r\n    vec2  off = vec2(tmp.x, tmp.y);\r\n\r\n    off -= 0.5f;\r\n    off *= jitter;\r\n    off += 0.5f;\r\n\r\n    vec2 cellpos = vec2(float(x), float(y)) + off;\r\n    vec2 diff = cellpos - p;\r\n    if (metric == 2)\r\n        return abs(diff.x) + abs(diff.y);       // Manhattan distance\r\n    if (metric == 3)\r\n        return max(abs(diff.x), abs(diff.y));   // Chebyshev distance\r\n    // Either Euclidian or Distance^2\r\n    return dot(diff, diff);\r\n}\r\n\r\nfloat mx_worley_distance(vec3 p, int x, int y, int z, int xoff, int yoff, int zoff, float jitter, int metric)\r\n{\r\n    vec3  off = mx_cell_noise_vec3(vec3(x+xoff, y+yoff, z+zoff));\r\n\r\n    off -= 0.5f;\r\n    off *= jitter;\r\n    off += 0.5f;\r\n\r\n    vec3 cellpos = vec3(float(x), float(y), float(z)) + off;\r\n    vec3 diff = cellpos - p;\r\n    if (metric == 2)\r\n        return abs(diff.x) + abs(diff.y) + abs(diff.z); // Manhattan distance\r\n    if (metric == 3)\r\n        return max(max(abs(diff.x), abs(diff.y)), abs(diff.z)); // Chebyshev distance\r\n    // Either Euclidian or Distance^2\r\n    return dot(diff, diff);\r\n}\r\n\r\nfloat mx_worley_noise_float(vec2 p, float jitter, int metric)\r\n{\r\n    int X, Y;\r\n    vec2 localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y));\r\n    float sqdist = 1e6f;        // Some big number for jitter > 1 (not all GPUs may be IEEE)\r\n    for (int x = -1; x <= 1; ++x)\r\n    {\r\n        for (int y = -1; y <= 1; ++y)\r\n        {\r\n            float dist = mx_worley_distance(localpos, x, y, X, Y, jitter, metric);\r\n            sqdist = min(sqdist, dist);\r\n        }\r\n    }\r\n    if (metric == 0)\r\n        sqdist = sqrt(sqdist);\r\n    return sqdist;\r\n}\r\n\r\nvec2 mx_worley_noise_vec2(vec2 p, float jitter, int metric)\r\n{\r\n    int X, Y;\r\n    vec2 localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y));\r\n    vec2 sqdist = vec2(1e6f, 1e6f);\r\n    for (int x = -1; x <= 1; ++x)\r\n    {\r\n        for (int y = -1; y <= 1; ++y)\r\n        {\r\n            float dist = mx_worley_distance(localpos, x, y, X, Y, jitter, metric);\r\n            if (dist < sqdist.x)\r\n            {\r\n                sqdist.y = sqdist.x;\r\n                sqdist.x = dist;\r\n            }\r\n            else if (dist < sqdist.y)\r\n            {\r\n                sqdist.y = dist;\r\n            }\r\n        }\r\n    }\r\n    if (metric == 0)\r\n        sqdist = sqrt(sqdist);\r\n    return sqdist;\r\n}\r\n\r\nvec3 mx_worley_noise_vec3(vec2 p, float jitter, int metric)\r\n{\r\n    int X, Y;\r\n    vec2 localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y));\r\n    vec3 sqdist = vec3(1e6f, 1e6f, 1e6f);\r\n    for (int x = -1; x <= 1; ++x)\r\n    {\r\n        for (int y = -1; y <= 1; ++y)\r\n        {\r\n            float dist = mx_worley_distance(localpos, x, y, X, Y, jitter, metric);\r\n            if (dist < sqdist.x)\r\n            {\r\n                sqdist.z = sqdist.y;\r\n                sqdist.y = sqdist.x;\r\n                sqdist.x = dist;\r\n            }\r\n            else if (dist < sqdist.y)\r\n            {\r\n                sqdist.z = sqdist.y;\r\n                sqdist.y = dist;\r\n            }\r\n            else if (dist < sqdist.z)\r\n            {\r\n                sqdist.z = dist;\r\n            }\r\n        }\r\n    }\r\n    if (metric == 0)\r\n        sqdist = sqrt(sqdist);\r\n    return sqdist;\r\n}\r\n\r\nfloat mx_worley_noise_float(vec3 p, float jitter, int metric)\r\n{\r\n    int X, Y, Z;\r\n    vec3 localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z));\r\n    float sqdist = 1e6f;\r\n    for (int x = -1; x <= 1; ++x)\r\n    {\r\n        for (int y = -1; y <= 1; ++y)\r\n        {\r\n            for (int z = -1; z <= 1; ++z)\r\n            {\r\n                float dist = mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric);\r\n                sqdist = min(sqdist, dist);\r\n            }\r\n        }\r\n    }\r\n    if (metric == 0)\r\n        sqdist = sqrt(sqdist);\r\n    return sqdist;\r\n}\r\n\r\nvec2 mx_worley_noise_vec2(vec3 p, float jitter, int metric)\r\n{\r\n    int X, Y, Z;\r\n    vec3 localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z));\r\n    vec2 sqdist = vec2(1e6f, 1e6f);\r\n    for (int x = -1; x <= 1; ++x)\r\n    {\r\n        for (int y = -1; y <= 1; ++y)\r\n        {\r\n            for (int z = -1; z <= 1; ++z)\r\n            {\r\n                float dist = mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric);\r\n                if (dist < sqdist.x)\r\n                {\r\n                    sqdist.y = sqdist.x;\r\n                    sqdist.x = dist;\r\n                }\r\n                else if (dist < sqdist.y)\r\n                {\r\n                    sqdist.y = dist;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (metric == 0)\r\n        sqdist = sqrt(sqdist);\r\n    return sqdist;\r\n}\r\n\r\nvec3 mx_worley_noise_vec3(vec3 p, float jitter, int metric)\r\n{\r\n    int X, Y, Z;\r\n    vec3 localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z));\r\n    vec3 sqdist = vec3(1e6f, 1e6f, 1e6f);\r\n    for (int x = -1; x <= 1; ++x)\r\n    {\r\n        for (int y = -1; y <= 1; ++y)\r\n        {\r\n            for (int z = -1; z <= 1; ++z)\r\n            {\r\n                float dist = mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric);\r\n                if (dist < sqdist.x)\r\n                {\r\n                    sqdist.z = sqdist.y;\r\n                    sqdist.y = sqdist.x;\r\n                    sqdist.x = dist;\r\n                }\r\n                else if (dist < sqdist.y)\r\n                {\r\n                    sqdist.z = sqdist.y;\r\n                    sqdist.y = dist;\r\n                }\r\n                else if (dist < sqdist.z)\r\n                {\r\n                    sqdist.z = dist;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (metric == 0)\r\n        sqdist = sqrt(sqdist);\r\n    return sqdist;\r\n}` );\r\n\r\nconst includes = [ mx_noise ];\r\n\r\nexport const mx_perlin_noise_float = fn( 'float mx_perlin_noise_float( any p )', includes );\r\nexport const mx_perlin_noise_vec2 = fn( 'vec2 mx_perlin_noise_vec2( any p )', includes );\r\nexport const mx_perlin_noise_vec3 = fn( 'vec3 mx_perlin_noise_vec3( any p )', includes );\r\n\r\nexport const mx_cell_noise_float = fn( 'float mx_cell_noise_float( vec3 p )', includes );\r\n\r\nexport const mx_worley_noise_float = fn( 'float mx_worley_noise_float( any p, float jitter, int metric )', includes );\r\nexport const mx_worley_noise_vec2 = fn( 'float mx_worley_noise_vec2( any p, float jitter, int metric )', includes );\r\nexport const mx_worley_noise_vec3 = fn( 'float mx_worley_noise_vec3( any p, float jitter, int metric )', includes );\r\n\r\nexport const mx_fractal_noise_float = fn( 'float mx_fractal_noise_float( vec3 p, int octaves, float lacunarity, float diminish )', includes );\r\nexport const mx_fractal_noise_vec2 = fn( 'float mx_fractal_noise_vec2( vec3 p, int octaves, float lacunarity, float diminish )', includes );\r\nexport const mx_fractal_noise_vec3 = fn( 'float mx_fractal_noise_vec3( vec3 p, int octaves, float lacunarity, float diminish )', includes );\r\nexport const mx_fractal_noise_vec4 = fn( 'float mx_fractal_noise_vec4( vec3 p, int octaves, float lacunarity, float diminish )', includes );\r\n", "import { fn } from '../../Nodes.js';\r\n\r\n// Original shader code from:\r\n// https://github.com/AcademySoftwareFoundation/MaterialX/blob/main/libraries/stdlib/genglsl/lib/mx_hsv.glsl\r\n\r\nexport const mx_hsvtorgb = fn( `vec3 mx_hsvtorgb(vec3 hsv)\r\n{\r\n    // Reference for this technique: Foley & van Dam\r\n    float h = hsv.x; float s = hsv.y; float v = hsv.z;\r\n    if (s < 0.0001f) {\r\n      return vec3 (v, v, v);\r\n    } else {\r\n        h = 6.0f * (h - floor(h));  // expand to [0..6)\r\n        int hi = int(trunc(h));\r\n        float f = h - float(hi);\r\n        float p = v * (1.0f-s);\r\n        float q = v * (1.0f-s*f);\r\n        float t = v * (1.0f-s*(1.0f-f));\r\n        if (hi == 0)\r\n            return vec3 (v, t, p);\r\n        else if (hi == 1)\r\n            return vec3 (q, v, p);\r\n        else if (hi == 2)\r\n            return vec3 (p, v, t);\r\n        else if (hi == 3)\r\n            return vec3 (p, q, v);\r\n        else if (hi == 4)\r\n            return vec3 (t, p, v);\r\n        return vec3 (v, p, q);\r\n    }\r\n}` );\r\n\r\nexport const mx_rgbtohsv = fn( `vec3 mx_rgbtohsv(vec3 c)\r\n{\r\n    // See Foley & van Dam\r\n    float r = c.x; float g = c.y; float b = c.z;\r\n    float mincomp = min (r, min(g, b));\r\n    float maxcomp = max (r, max(g, b));\r\n    float delta = maxcomp - mincomp;  // chroma\r\n    float h, s, v;\r\n    v = maxcomp;\r\n    if (maxcomp > 0.0f)\r\n        s = delta / maxcomp;\r\n    else s = 0.0f;\r\n    if (s <= 0.0f)\r\n        h = 0.0f;\r\n    else {\r\n        if      (r >= maxcomp) h = (g-b) / delta;\r\n        else if (g >= maxcomp) h = 2.0f + (b-r) / delta;\r\n        else                   h = 4.0f + (r-g) / delta;\r\n        h *= (1.0f/6.0f);\r\n        if (h < 0.0f)\r\n            h += 1.0f;\r\n    }\r\n    return vec3(h, s, v);\r\n}` );\r\n", "import { code, fn } from '../../Nodes.js';\r\n\r\n// Original shader code from:\r\n// https://github.com/AcademySoftwareFoundation/MaterialX/blob/main/libraries/stdlib/genglsl/lib/mx_transform_color.glsl\r\n\r\nexport const mx_transform_color = code( `#define M_AP1_TO_REC709 mat3(1.705079555511475, -0.1297005265951157, -0.02416634373366833, -0.6242334842681885, 1.138468623161316, -0.1246141716837883, -0.0808461606502533, -0.008768022060394287, 1.148780584335327)\r\n\r\nvec3 mx_srgb_texture_to_lin_rec709(vec3 color)\r\n{\r\n    bvec3 isAbove = greaterThan(color, vec3(0.04045));\r\n    vec3 linSeg = color / 12.92;\r\n    vec3 powSeg = pow(max(color + vec3(0.055), vec3(0.0)) / 1.055, vec3(2.4));\r\n    return mix(linSeg, powSeg, isAbove);\r\n}` );\r\n\r\nconst includes = [ mx_transform_color ];\r\n\r\nexport const mx_srgb_texture_to_lin_rec709 = fn( 'vec3 mx_srgb_texture_to_lin_rec709( vec3 color )', includes );\r\n", "import {\r\n\tmx_perlin_noise_float, mx_perlin_noise_vec2, mx_perlin_noise_vec3,\r\n\tmx_worley_noise_float as worley_noise_float, mx_worley_noise_vec2 as worley_noise_vec2, mx_worley_noise_vec3 as worley_noise_vec3,\r\n\tmx_cell_noise_float as cell_noise_float,\r\n\tmx_fractal_noise_float as fractal_noise_float, mx_fractal_noise_vec2 as fractal_noise_vec2, mx_fractal_noise_vec3 as fractal_noise_vec3, mx_fractal_noise_vec4 as fractal_noise_vec4\r\n} from './lib/mx_noise.js';\r\nimport { mx_hsvtorgb, mx_rgbtohsv } from './lib/mx_hsv.js';\r\nimport { mx_srgb_texture_to_lin_rec709 } from './lib/mx_transform_color.js';\r\nimport { nodeObject, float, vec2, vec4, add, sub, mul, mix, clamp, uv, length, smoothstep, dFdx, dFdy, sign, pow, abs, convert } from '../shadernode/ShaderNodeElements.js';\r\n\r\nexport const mx_aastep = ( threshold, value ) => {\r\n\r\n\tthreshold = float( threshold );\r\n\tvalue = float( value );\r\n\r\n\tconst afwidth = mul( length( vec2( dFdx( value ), dFdy( value ) ) ), 0.70710678118654757 );\r\n\r\n\treturn smoothstep( sub( threshold, afwidth ), add( threshold, afwidth ), value );\r\n\r\n};\r\n\r\nconst _ramp = ( a, b, uv, p ) => mix( a, b, clamp( nodeObject( uv )[ p ] ) );\r\nexport const mx_ramplr = ( valuel, valuer, texcoord = uv() ) => _ramp( valuel, valuer, texcoord, 'x' );\r\nexport const mx_ramptb = ( valuet, valueb, texcoord = uv() ) => _ramp( valuet, valueb, texcoord, 'y' );\r\n\r\nconst _split = ( a, b, center, uv, p ) => mix( a, b, mx_aastep( center, nodeObject( uv )[ p ] ) );\r\nexport const mx_splitlr = ( valuel, valuer, center, texcoord = uv() ) => _split( valuel, valuer, center, texcoord, 'x' );\r\nexport const mx_splittb = ( valuet, valueb, center, texcoord = uv() ) => _split( valuet, valueb, center, texcoord, 'y' );\r\n\r\nexport const mx_transform_uv = ( uv_scale = 1, uv_offset = 0, uv_geo = uv() ) => add( mul( uv_geo, uv_scale ), uv_offset );\r\n\r\nexport const mx_safepower = ( in1, in2 = 1 ) => mul( sign( in1 ), pow( abs( in1 ), in2 ) );\r\nexport const mx_contrast = ( input, amount = 1, pivot = .5 ) => add( mul( sub( input, pivot ), amount ), pivot );\r\n\r\nexport const mx_noise_float = ( texcoord = uv(), amplitude = 1, pivot = 0 ) => add( mul( amplitude, mx_perlin_noise_float( convert( texcoord, 'vec2|vec3' ) ) ), pivot );\r\nexport const mx_noise_vec2 = ( texcoord = uv(), amplitude = 1, pivot = 0 ) => add( mul( amplitude, mx_perlin_noise_vec2( convert( texcoord, 'vec2|vec3' ) ) ), pivot );\r\nexport const mx_noise_vec3 = ( texcoord = uv(), amplitude = 1, pivot = 0 ) => add( mul( amplitude, mx_perlin_noise_vec3( convert( texcoord, 'vec2|vec3' ) ) ), pivot );\r\nexport const mx_noise_vec4 = ( texcoord = uv(), amplitude = 1, pivot = 0 ) => {\r\n\r\n\ttexcoord = convert( texcoord, 'vec2|vec3' ); // overloading type\r\n\r\n\tconst noise_vec4 = vec4( mx_perlin_noise_vec3( texcoord ), mx_perlin_noise_float( add( texcoord, vec2( 19, 73 ) ) ) );\r\n\r\n\treturn add( mul( amplitude, noise_vec4 ), pivot );\r\n\r\n};\r\n\r\nexport const mx_worley_noise_float = ( texcoord = uv(), jitter = 1 ) => worley_noise_float( convert( texcoord, 'vec2|vec3' ), jitter, 1 );\r\nexport const mx_worley_noise_vec2 = ( texcoord = uv(), jitter = 1 ) => worley_noise_vec2( convert( texcoord, 'vec2|vec3' ), jitter, 1 );\r\nexport const mx_worley_noise_vec3 = ( texcoord = uv(), jitter = 1 ) => worley_noise_vec3( convert( texcoord, 'vec2|vec3' ), jitter, 1 );\r\n\r\nexport const mx_cell_noise_float = ( texcoord = uv() ) => cell_noise_float( convert( texcoord, 'vec2|vec3' ) );\r\n\r\nexport const mx_fractal_noise_float = ( position = uv(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1 ) => mul( fractal_noise_float( position, octaves, lacunarity, diminish ), amplitude );\r\nexport const mx_fractal_noise_vec2 = ( position = uv(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1 ) => mul( fractal_noise_vec2( position, octaves, lacunarity, diminish ), amplitude );\r\nexport const mx_fractal_noise_vec3 = ( position = uv(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1 ) => mul( fractal_noise_vec3( position, octaves, lacunarity, diminish ), amplitude );\r\nexport const mx_fractal_noise_vec4 = ( position = uv(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1 ) => mul( fractal_noise_vec4( position, octaves, lacunarity, diminish ), amplitude );\r\n\r\nexport { mx_hsvtorgb, mx_rgbtohsv, mx_srgb_texture_to_lin_rec709 };\r\n", "// core\r\nimport ArrayUniformNode from './core/ArrayUniformNode.js';\r\nimport AttributeNode from './core/AttributeNode.js';\r\nimport BypassNode from './core/BypassNode.js';\r\nimport CacheNode from './core/CacheNode.js';\r\nimport CodeNode from './core/CodeNode.js';\r\nimport ConstNode from './core/ConstNode.js';\r\nimport ContextNode from './core/ContextNode.js';\r\nimport ExpressionNode from './core/ExpressionNode.js';\r\nimport FunctionCallNode from './core/FunctionCallNode.js';\r\nimport FunctionNode from './core/FunctionNode.js';\r\nimport InstanceIndexNode from './core/InstanceIndexNode.js';\r\nimport LightingModel from './core/LightingModel.js';\r\nimport Node from './core/Node.js';\r\nimport NodeAttribute from './core/NodeAttribute.js';\r\nimport NodeBuilder from './core/NodeBuilder.js';\r\nimport NodeCache from './core/NodeCache.js';\r\nimport NodeCode from './core/NodeCode.js';\r\nimport NodeFrame from './core/NodeFrame.js';\r\nimport NodeFunctionInput from './core/NodeFunctionInput.js';\r\nimport NodeKeywords from './core/NodeKeywords.js';\r\nimport NodeUniform from './core/NodeUniform.js';\r\nimport NodeVar from './core/NodeVar.js';\r\nimport NodeVarying from './core/NodeVarying.js';\r\nimport PropertyNode from './core/PropertyNode.js';\r\nimport StackNode from './core/StackNode.js';\r\nimport TempNode from './core/TempNode.js';\r\nimport UniformNode from './core/UniformNode.js';\r\nimport VarNode from './core/VarNode.js';\r\nimport VaryingNode from './core/VaryingNode.js';\r\n\r\n// accessors\r\nimport BitangentNode from './accessors/BitangentNode.js';\r\nimport BufferNode from './accessors/BufferNode.js';\r\nimport CameraNode from './accessors/CameraNode.js';\r\nimport CubeTextureNode from './accessors/CubeTextureNode.js';\r\nimport InstanceNode from './accessors/InstanceNode.js';\r\nimport MaterialNode from './accessors/MaterialNode.js';\r\nimport MaterialReferenceNode from './accessors/MaterialReferenceNode.js';\r\nimport ModelNode from './accessors/ModelNode.js';\r\nimport ModelViewProjectionNode from './accessors/ModelViewProjectionNode.js';\r\nimport NormalNode from './accessors/NormalNode.js';\r\nimport Object3DNode from './accessors/Object3DNode.js';\r\nimport PointUVNode from './accessors/PointUVNode.js';\r\nimport PositionNode from './accessors/PositionNode.js';\r\nimport ReferenceNode from './accessors/ReferenceNode.js';\r\nimport ReflectVectorNode from './accessors/ReflectVectorNode.js';\r\nimport SkinningNode from './accessors/SkinningNode.js';\r\nimport TangentNode from './accessors/TangentNode.js';\r\nimport TextureNode from './accessors/TextureNode.js';\r\nimport UVNode from './accessors/UVNode.js';\r\nimport UserDataNode from './accessors/UserDataNode.js';\r\n\r\n// geometry\r\nimport RangeNode from './geometry/RangeNode.js';\r\n\r\n// gpgpu\r\nimport ComputeNode from './gpgpu/ComputeNode.js';\r\n\r\n// display\r\nimport BlendModeNode from './display/BlendModeNode.js';\r\nimport ColorAdjustmentNode from './display/ColorAdjustmentNode.js';\r\nimport ColorSpaceNode from './display/ColorSpaceNode.js';\r\nimport FrontFacingNode from './display/FrontFacingNode.js';\r\nimport NormalMapNode from './display/NormalMapNode.js';\r\nimport PosterizeNode from './display/PosterizeNode.js';\r\nimport ToneMappingNode from './display/ToneMappingNode.js';\r\nimport ViewportNode from './display/ViewportNode.js';\r\n\r\n// math\r\nimport MathNode from './math/MathNode.js';\r\nimport OperatorNode from './math/OperatorNode.js';\r\nimport CondNode from './math/CondNode.js';\r\n\r\n// lighting\r\nimport PointLightNode from './lighting/PointLightNode.js';\r\nimport DirectionalLightNode from './lighting/DirectionalLightNode.js';\r\nimport SpotLightNode from './lighting/SpotLightNode.js';\r\nimport IESSpotLightNode from './lighting/IESSpotLightNode.js';\r\nimport AmbientLightNode from './lighting/AmbientLightNode.js';\r\nimport LightsNode from './lighting/LightsNode.js';\r\nimport LightingNode from './lighting/LightingNode.js';\r\nimport LightingContextNode from './lighting/LightingContextNode.js';\r\nimport HemisphereLightNode from './lighting/HemisphereLightNode.js';\r\nimport EnvironmentNode from './lighting/EnvironmentNode.js';\r\nimport AONode from './lighting/AONode.js';\r\nimport AnalyticLightNode from './lighting/AnalyticLightNode.js';\r\n\r\n// utils\r\nimport ArrayElementNode from './utils/ArrayElementNode.js';\r\nimport ConvertNode from './utils/ConvertNode.js';\r\nimport DiscardNode from './utils/DiscardNode.js';\r\nimport EquirectUVNode from './utils/EquirectUVNode.js';\r\nimport JoinNode from './utils/JoinNode.js';\r\nimport MatcapUVNode from './utils/MatcapUVNode.js';\r\nimport MaxMipLevelNode from './utils/MaxMipLevelNode.js';\r\nimport OscNode from './utils/OscNode.js';\r\nimport RemapNode from './utils/RemapNode.js';\r\nimport RotateUVNode from './utils/RotateUVNode.js';\r\nimport SpecularMIPLevelNode from './utils/SpecularMIPLevelNode.js';\r\nimport SplitNode from './utils/SplitNode.js';\r\nimport SpriteSheetUVNode from './utils/SpriteSheetUVNode.js';\r\nimport TimerNode from './utils/TimerNode.js';\r\nimport TriplanarTexturesNode from './utils/TriplanarTexturesNode.js';\r\n\r\n// loaders\r\nimport NodeLoader from './loaders/NodeLoader.js';\r\nimport NodeObjectLoader from './loaders/NodeObjectLoader.js';\r\nimport NodeMaterialLoader from './loaders/NodeMaterialLoader.js';\r\n\r\n// parsers\r\nimport WGSLNodeParser from './parsers/WGSLNodeParser.js';\r\nimport GLSLNodeParser from './parsers/GLSLNodeParser.js';\r\n\r\n// procedural\r\nimport CheckerNode from './procedural/CheckerNode.js';\r\n\r\n// fog\r\nimport FogNode from './fog/FogNode.js';\r\nimport FogRangeNode from './fog/FogRangeNode.js';\r\nimport FogExp2Node from './fog/FogExp2Node.js';\r\n\r\n// core\r\nexport * from './core/constants.js';\r\n\r\n// materials\r\nexport * from './materials/Materials.js';\r\n\r\n// shader node\r\nexport * from './shadernode/ShaderNodeElements.js';\r\n\r\n// extensions\r\nexport * from './materialx/MaterialXNodes.js';\r\n\r\n// shader stages\r\nexport { defaultShaderStages } from './core/NodeBuilder.js';\r\n\r\nconst nodeLib = {\r\n\t// core\r\n\tArrayUniformNode,\r\n\tAttributeNode,\r\n\tBypassNode,\r\n\tCacheNode,\r\n\tCodeNode,\r\n\tContextNode,\r\n\tConstNode,\r\n\tExpressionNode,\r\n\tFunctionCallNode,\r\n\tFunctionNode,\r\n\tInstanceIndexNode,\r\n\tLightingModel,\r\n\tNode,\r\n\tNodeAttribute,\r\n\tNodeBuilder,\r\n\tNodeCache,\r\n\tNodeCode,\r\n\tNodeFrame,\r\n\tNodeFunctionInput,\r\n\tNodeKeywords,\r\n\tNodeUniform,\r\n\tNodeVar,\r\n\tNodeVarying,\r\n\tPropertyNode,\r\n\tStackNode,\r\n\tTempNode,\r\n\tUniformNode,\r\n\tVarNode,\r\n\tVaryingNode,\r\n\r\n\t// geometry\r\n\tRangeNode,\r\n\r\n\t// gpgpu\r\n\tComputeNode,\r\n\r\n\t// accessors\r\n\tBitangentNode,\r\n\tBufferNode,\r\n\tCameraNode,\r\n\tCubeTextureNode,\r\n\tInstanceNode,\r\n\tMaterialNode,\r\n\tMaterialReferenceNode,\r\n\tModelNode,\r\n\tModelViewProjectionNode,\r\n\tNormalNode,\r\n\tObject3DNode,\r\n\tPointUVNode,\r\n\tPositionNode,\r\n\tReferenceNode,\r\n\tReflectVectorNode,\r\n\tSkinningNode,\r\n\tTangentNode,\r\n\tTextureNode,\r\n\tUVNode,\r\n\tUserDataNode,\r\n\r\n\t// display\r\n\tBlendModeNode,\r\n\tColorAdjustmentNode,\r\n\tColorSpaceNode,\r\n\tFrontFacingNode,\r\n\tNormalMapNode,\r\n\tPosterizeNode,\r\n\tToneMappingNode,\r\n\tViewportNode,\r\n\r\n\t// math\r\n\tMathNode,\r\n\tOperatorNode,\r\n\tCondNode,\r\n\r\n\t// lighting\r\n\tPointLightNode,\r\n\tDirectionalLightNode,\r\n\tSpotLightNode,\r\n\tIESSpotLightNode,\r\n\tAmbientLightNode,\r\n\tLightsNode,\r\n\tLightingNode,\r\n\tLightingContextNode,\r\n\tHemisphereLightNode,\r\n\tEnvironmentNode,\r\n\tAONode,\r\n\tAnalyticLightNode,\r\n\r\n\t// utils\r\n\tArrayElementNode,\r\n\tConvertNode,\r\n\tDiscardNode,\r\n\tEquirectUVNode,\r\n\tJoinNode,\r\n\tMatcapUVNode,\r\n\tMaxMipLevelNode,\r\n\tOscNode,\r\n\tRemapNode,\r\n\tRotateUVNode,\r\n\tSpecularMIPLevelNode,\r\n\tSplitNode,\r\n\tSpriteSheetUVNode,\r\n\tTimerNode,\r\n\tTriplanarTexturesNode,\r\n\r\n\t// procedural\r\n\tCheckerNode,\r\n\r\n\t// fog\r\n\tFogNode,\r\n\tFogRangeNode,\r\n\tFogExp2Node,\r\n\r\n\t// loaders\r\n\tNodeLoader,\r\n\tNodeObjectLoader,\r\n\tNodeMaterialLoader,\r\n\r\n\t// parsers\r\n\tWGSLNodeParser,\r\n\tGLSLNodeParser\r\n\r\n};\r\n\r\nexport const fromType = ( type ) => {\r\n\r\n\treturn new nodeLib[ type ]();\r\n\r\n};\r\n\r\nexport {\r\n\t// core\r\n\tArrayUniformNode,\r\n\tAttributeNode,\r\n\tBypassNode,\r\n\tCacheNode,\r\n\tCodeNode,\r\n\tContextNode,\r\n\tConstNode,\r\n\tExpressionNode,\r\n\tFunctionCallNode,\r\n\tFunctionNode,\r\n\tInstanceIndexNode,\r\n\tLightingModel,\r\n\tNode,\r\n\tNodeAttribute,\r\n\tNodeBuilder,\r\n\tNodeCache,\r\n\tNodeCode,\r\n\tNodeFrame,\r\n\tNodeFunctionInput,\r\n\tNodeKeywords,\r\n\tNodeUniform,\r\n\tNodeVar,\r\n\tNodeVarying,\r\n\tPropertyNode,\r\n\tStackNode,\r\n\tTempNode,\r\n\tUniformNode,\r\n\tVarNode,\r\n\tVaryingNode,\r\n\r\n\t// geometry\r\n\tRangeNode,\r\n\r\n\t// gpgpu\r\n\tComputeNode,\r\n\r\n\t// accessors\r\n\tBitangentNode,\r\n\tBufferNode,\r\n\tCameraNode,\r\n\tCubeTextureNode,\r\n\tInstanceNode,\r\n\tMaterialNode,\r\n\tMaterialReferenceNode,\r\n\tModelNode,\r\n\tModelViewProjectionNode,\r\n\tNormalNode,\r\n\tObject3DNode,\r\n\tPointUVNode,\r\n\tPositionNode,\r\n\tReferenceNode,\r\n\tReflectVectorNode,\r\n\tSkinningNode,\r\n\tTangentNode,\r\n\tTextureNode,\r\n\tUVNode,\r\n\tUserDataNode,\r\n\r\n\t// display\r\n\tBlendModeNode,\r\n\tColorAdjustmentNode,\r\n\tColorSpaceNode,\r\n\tFrontFacingNode,\r\n\tNormalMapNode,\r\n\tPosterizeNode,\r\n\tToneMappingNode,\r\n\tViewportNode,\r\n\r\n\t// math\r\n\tMathNode,\r\n\tOperatorNode,\r\n\tCondNode,\r\n\r\n\t// lighting\r\n\tPointLightNode,\r\n\tDirectionalLightNode,\r\n\tSpotLightNode,\r\n\tIESSpotLightNode,\r\n\tAmbientLightNode,\r\n\tLightsNode,\r\n\tLightingNode,\r\n\tLightingContextNode,\r\n\tHemisphereLightNode,\r\n\tEnvironmentNode,\r\n\tAONode,\r\n\tAnalyticLightNode,\r\n\r\n\t// utils\r\n\tArrayElementNode,\r\n\tConvertNode,\r\n\tDiscardNode,\r\n\tEquirectUVNode,\r\n\tJoinNode,\r\n\tMatcapUVNode,\r\n\tMaxMipLevelNode,\r\n\tOscNode,\r\n\tRemapNode,\r\n\tRotateUVNode,\r\n\tSpecularMIPLevelNode,\r\n\tSplitNode,\r\n\tSpriteSheetUVNode,\r\n\tTimerNode,\r\n\tTriplanarTexturesNode,\r\n\r\n\t// procedural\r\n\tCheckerNode,\r\n\r\n\t// fog\r\n\tFogNode,\r\n\tFogRangeNode,\r\n\tFogExp2Node,\r\n\r\n\t// loaders\r\n\tNodeLoader,\r\n\tNodeObjectLoader,\r\n\tNodeMaterialLoader,\r\n\r\n\t// parsers\r\n\tWGSLNodeParser,\r\n\tGLSLNodeParser\r\n};\r\n"],
  "mappings": "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",
  "names": ["property", "property", "cache", "data", "attribute", "cache", "code", "includes", "context", "code", "includes", "property", "code", "code", "texture", "property", "property", "property", "property", "userData", "context", "texture", "nodeObject", "bool", "uint", "int", "float", "code", "includes", "call", "userData", "texture", "color", "defaultUV", "texture", "uv", "normalMap", "fn", "color", "hue", "color", "toneMapping", "lights", "context", "min", "max", "length", "uv", "dotNV", "roughness", "roughness", "roughness", "color", "lights", "texture", "min", "max", "context", "cache", "value", "attribute", "length", "code", "fromType", "color", "distance", "context", "lights", "fog", "property", "cache", "data", "defaultValues", "defaultValues", "defaultValues", "defaultValues", "defaultValues", "defaultValues", "context", "modelViewProjection", "property", "name", "type", "declarationRegexp", "propertiesRegexp", "parse", "type", "name", "code", "includes", "uv", "mx_worley_noise_float", "mx_worley_noise_vec2", "mx_worley_noise_vec3", "mx_cell_noise_float", "mx_fractal_noise_float", "mx_fractal_noise_vec2", "mx_fractal_noise_vec3", "mx_fractal_noise_vec4"]
}
